{"version":3,"file":"static/js/594.03d2769d.chunk.js","mappings":"oPAeA,MAAMA,EAAS,EACTC,EAAS,IACTC,EAAgB,6CAChBC,EAAgC,EAEvB,SAASC,EAAqBC,GAA0B,IAAzB,WAAEC,GAAa,GAAOD,EAClE,MAAQE,QAASC,IAAiBC,EAAAA,EAAAA,QAAOC,OAAOC,KAAKC,EAAAA,KAC/CC,GAASJ,EAAAA,EAAAA,WACRK,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAErCC,GAAoBR,EAAAA,EAAAA,UAEpBS,GAAoBC,EAAAA,EAAAA,UAAQ,KAChC,MAAMC,EAAsB,CAAC,EACvBC,EAAY,CAAC,EAEbC,EAAeZ,OAAOC,KAC1BC,EAAAA,GAAeJ,EAAa,IAAIe,EAAAA,KAChCC,QAAO,CAACC,EAAGC,IAAMA,EAAI,GAAK,IAE5BlB,EAAamB,SACVC,GACER,EAAoBQ,IAAOC,EAAAA,EAAAA,IAAa,SAAUjB,EAAAA,GAAgBgB,GAChEJ,QAAQM,GAAMR,EAAaS,SAASD,KACpCE,YAGP,MAAMC,EAAMC,KAAKC,MAAMf,EAAoBZ,EAAa,IAAI4B,OAAS,GAmBrE,OAlBmB5B,EAAa6B,MAAK,CAACC,EAAGC,IAErCC,EAAAA,IACE5B,EAAAA,GAAe0B,GAAGf,EAAAA,IAAqBH,EAAoBkB,GAAGL,IAC5DQ,EAAAA,KAGJD,EAAAA,IACE5B,EAAAA,GAAe2B,GAAGhB,EAAAA,IAAqBH,EAAoBmB,GAAGN,IAC5DQ,EAAAA,OAMGd,SACRC,IAAcP,EAAUO,GAAOR,EAAoBQ,EACtD,IACOP,CAAS,GACf,IAEGqB,GAAmBvB,EAAAA,EAAAA,UAAQ,KAC/B,MAAMwB,EAAS,CAAC,EAShB,OAPAnC,EAAamB,SAASC,IACpBe,EAAOf,GAAOV,EAAkBU,GAAKgB,KAAKd,IACxC,MAAMJ,GAAImB,EAAAA,EAAAA,IAAcjB,EAAKE,EAAGlB,EAAAA,IAChC,OAAOkC,EAAAA,EAAAA,IAAW,EAAG,EAAG9C,EAAS,GAAG4C,KAAI,CAACG,EAAGC,IAAMtB,EAAEqB,IAAG,GACvD,IAGGJ,CAAM,GACZ,IAuHH,OArHAM,EAAAA,EAAAA,kBAAgB,KACdpC,EAAON,QAAU,CACf2C,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAGjBrC,EAAkBV,QACfgD,KAAK,QAASJ,OAAOC,YACrBG,KAAK,SAAUJ,OAAOG,YAAY,GACpC,KAEHL,EAAAA,EAAAA,kBAAgB,KACApC,EAAON,QAAQ2C,MAClBrC,EAAON,QAAQ8C,OAD1B,MAGMG,EAAW9C,OAAOC,KAAK+B,GAAkBE,KAAKhB,IAGhC6B,EAAAA,EAAAA,IAChB,EACA,EACAf,EAAiBd,GAAKgB,KAAI,CAACc,EAAMC,KAAG,CAClCC,EAAG1B,KAAK2B,IAAI,EANF,GAMM/C,EAAY,EAAI4C,EAAK,IAAczD,EAAS,KAC5D6D,GAAIH,OAIgBf,KAAImB,IAAA,IAAGD,GAAIH,EAAG,EAAEK,EAAC,EAAEC,GAAGF,EAAA,MAAM,CAClDL,KAAMhB,EAAiBd,GAAK+B,GAAKf,KAC9BsB,GAbS,EAcRA,GAECpD,EAAY,EAAIoB,KAAK2B,IAAInB,EAAiBd,GAAK+B,GAAK,GAAI,IAAO,KAEpEQ,OAAQrD,EACJ,EAnBQ,EAoBRoB,KAAK2B,IAAInB,EAAiBd,GAAK+B,GAAK,GAAI,IAC5CS,KAAsB,GAAhBlC,KAAKmC,SAAgB,GAC3BC,IAAqB,IAAhBpC,KAAKmC,SAAiB,IAC3BE,OAAQP,EACRQ,OAAQP,EACT,MAKHhD,EAAkBV,QACfkE,UAAU,cACVC,KAAKlB,GAAU,CAAC/B,EAAGC,IAAMA,IACzBiD,KAAK,KACLpB,KAAK,QAAS,aACdA,KACC,aACA,CAAC9B,EAAGC,IAAC,aAAAkD,OACWlD,EAAI,GAAMzB,EAAS,GAAc,GAATA,EAAW,MAAA2E,OAC/C1C,KAAKC,MAAMT,EAAI,IAAMzB,EAAS,GAAc,GAATA,EAAW,OAGnD4E,MAAK,SAAUC,EAAOC,GACrBvC,EAAAA,IAAUwC,MACPP,UAAU,cACVC,KAAKI,GAAO,CAACrD,EAAGC,IAAMA,IACtBiD,MAAMM,GACEA,EACJC,OAAO,KACP3B,KAAK,QAAS,aACdsB,MAAK,SAAAM,EAAoBC,GAAK,IAAf,KAAE1B,GAAMyB,EACtB3C,EAAAA,IAAUwC,MACPE,OAAO,QACPA,OAAO,YACP3B,KAAK,KAAK,aAADqB,OAAeG,EAAE,KAAAH,OAAIQ,IAC9BF,OAAO,QACP3B,KAAK,IAAKrD,GACbsC,EAAAA,IAAUwC,MACPE,OAAO,KACP3B,KAAK,YAAY,kBAADqB,OAAoBG,EAAE,KAAAH,OAAIQ,EAAE,MAC5CX,UAAU,QACVC,KAAKhB,GAAM,CAACjC,EAAGC,IAAMA,IACrBiD,KAAK,QACLpB,KAAK,QAAQ,CAAC9B,EAAGC,KAChB2D,EAAAA,EAAAA,IAA0B3D,EAAI1B,IAEpC,MAEHuD,KACC,aACA+B,IAAA,IAAC,OAAEf,EAAM,OAAEC,EAAM,KAAEJ,GAAMkB,EAAA,mBAAAV,OACVL,EAAM,MAAAK,OAAKJ,EAAM,aAAAI,OAAYR,EAAI,QAEjDS,MAAK,SAAAU,GAA6B,IAAnB,KAAE7B,EAAI,OAAES,GAAQoB,EAC9B/C,EAAAA,IAAUwC,MACPP,UAAU,QACVC,KAAKhB,GAAM,CAACjC,EAAGC,IAAMA,IACrB6B,KAAK,QAASY,EAASlE,EAAS,GAChCsD,KAAK,SAAUY,EAASlE,EAAS,GACjCsD,KAAK,KAAOY,EAASlE,EAAS,EAAK,GACnCsD,KACC,KACCiC,GACErB,EAASlE,EAAS,EAAK,GACxBwF,EAAAA,EAAAA,IAAqBD,EAAIrB,IAAWA,EAASlE,EAAS,KAE5DuC,EAAAA,IAAUwC,MACPU,OAAO,QACPnC,KACC,YAAY,SAADqB,OAERT,EAASlE,EACV,EACAiC,KAAKyD,MACLxF,EAA6B,KAGrC,GACJ,GAAE,GACH,CAACuC,EAAkB5B,KAGpB8E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLC,QAASnF,EACToF,SAAUA,KAAWnF,GAAcoF,IAAOA,GAAG,KAE/CJ,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,OAAMN,SAAC,eACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,uBAAyBvF,EAAa,WAAa,IAAIwF,UACrEC,EAAAA,EAAAA,KAAA,OACEF,UAAW,eAAiBvF,EAAa,WAAa,IACtD+F,IAAMF,IAAYlF,EAAkBV,QAAUiC,EAAAA,IAAU2D,EAAI,QAKtE,C,gHC9MO,SAASrD,EAAWwD,EAAOC,EAAMC,GACtC,OAAOhE,EAAAA,IAASgE,GAAO5D,KAAKlB,GAAOA,GAAK8E,EAAQ,IAAOD,EAAOD,GAASA,GACzE,CAEO,SAASG,EAAWvD,EAAOG,GAAoC,IAA5BqD,EAAMC,UAAAvE,OAAA,QAAAwE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAKE,EAAKF,UAAAvE,OAAA,QAAAwE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC1DG,EAAc5D,EAAQ2D,EAAS3D,GAAS,EAAI2D,GAAU,EACxDE,EAAc7D,GAAS,EAAI2D,GAAU,EACnCnC,EAAO,CACT,CACEV,EAAGxB,EAAAA,IAAesE,EAAa5D,EAA5BV,CAAmCkE,GACtCzC,EAAGzB,EAAAA,IAAea,EAAQ,EAAvBb,CAA0BkE,IAE/B,CAAE1C,EAAG8C,EAAa7C,EAAGZ,GACrB,CAAEW,EAAG+C,EAAY9C,EAAGZ,GACpB,CACEW,EAAGxB,EAAAA,IAAeuE,EAAY,EAA3BvE,CAA8BkE,GACjCzC,EAAGzB,EAAAA,IAAea,EAAQ,EAAvBb,CAA0BkE,KAWjC,OARelE,EAAAA,MAEZwB,GAAE,SAAUjB,GACX,OAAOA,EAAEiB,CACX,IACCC,GAAE,SAAUlB,GACX,OAAOA,EAAEkB,CACX,GACK+C,CAAStC,GAAQ,GAC1B,CAEO,SAASuC,EAAaC,EAAaC,EAAkBC,GAC1D,IAAIH,EAAeC,EAAYtE,KAAKyE,GAClCnF,KAAKoF,MAAMD,EAAIjF,OAAS+E,KAEtBI,EAAM/E,EAAAA,IAAOyE,GAEjB,KAAOM,EAAMH,GACXH,EACEzE,EAAAA,IAAY0E,GAAa,CAACnE,EAAGrB,IACd,IAAbqB,EAAEX,OACEW,EAAEX,OAAS+E,EAAmBF,EAAavF,GAC3C8F,QAEH,EAELD,EAAM/E,EAAAA,IAAOyE,GAGf,KAAOM,EAAMH,GACXH,EACEzE,EAAAA,IAAY0E,GAAa,CAACnE,EAAGrB,IACd,IAAbqB,EAAEX,OACEW,EAAEX,OAAS+E,EAAmBF,EAAavF,IAC1C8F,QAEJ,EAELD,EAAM/E,EAAAA,IAAOyE,GAGf,OAAOA,CACT,CAGO,SAASQ,EAAYC,EAAOC,GAEjC,MAAMtB,GAAM5F,EAAAA,EAAAA,QAAO,CACjBiH,MAAOA,EACPE,KAAM,OAGFrH,EAAU8F,EAAI9F,QAAQmH,MAa5B,OARIC,EAAeA,EAAYD,EAAOnH,GAAWmH,IAAUnH,KACzD8F,EAAI9F,QAAU,CACZmH,MAAOA,EACPE,KAAMrH,IAKH8F,EAAI9F,QAAQqH,IACrB,CAEO,MAAMvC,EAA6B3D,GACxCc,EAAAA,GAAoBA,EAAAA,IAAe,CAAC,GAAK,GAArBA,CAA2Bd,G,sIC1F1C,MAAMmG,EAAa,KACbtG,EAAsB,QACtBkB,EAAmB,SAEnB7B,QAAwBkH,iBACnC,MAAMC,cAAoBC,MAAM,0BAA0BC,OAE1D,IAAK,MAAMrG,KAAOmG,EAAM,CACtBnG,EAAIL,GAAuBK,EAAIL,GAC/B,IAAK,MAAM2G,KAAQtG,EAAIL,GACrB2G,EAAKzF,GAAoByF,EAAKzF,GAAkBG,KAAKuF,GACnDjG,KAAKkG,IAAIlG,KAAK2B,IAAI,EAAGsE,GAAIN,KACzBxF,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAEvBV,EAAIL,IAAuB8G,EAAAA,EAAAA,IACzBzG,EAAIL,IACJlB,IAAA,IAAC,KAAEiI,GAAMjI,EAAA,OAAKiI,CAAI,GAEtB,CAIA,OAFAC,QAAQC,IAAI,kCAELH,EAAAA,EAAAA,IAAMN,GAAMhE,IAAA,IAAC,IAAEnC,GAAKmC,EAAA,OAAKnC,CAAG,GACrC,CAnBqCkG,G,0NCa9B,SAASO,EAAMN,EAAMU,GAC1B,MAAMC,EAAUhI,OAAOiI,QAAQZ,EAAMU,GAErC,IAAK,MAAMG,KAAOlI,OAAOC,KAAK+H,GAC5BA,EAAQE,GAAOF,EAAQE,GAAK,GAG9B,OAAOF,CACT,C,4BAEO,MAAMG,EAAiB,CAC5BC,KAAM,SAAUC,EAASC,GACvBD,EAAQE,OAAO,GAAID,EAAO,GAC1BD,EAAQG,OAAOF,EAAO,GAAIA,EAAO,GAEjCD,EAAQI,IAAI,EAAG,EAAGH,EAAO9G,KAAKkH,KAAK,GAAK,GAAIlH,KAAKmH,GAAK,EAAc,EAAVnH,KAAKmH,GAAU,GACzEN,EAAQG,OAAO,GAAIF,EAAO,GAC1BD,EAAQO,WACV,GAGK,SAAS7D,EAAqB8D,GACnC,OAAQ,OAASA,GAAK,EAAI,OAASA,GAAK,EAAI,OAASA,EAAI,OAAU,GACrE,CAEO,SAASC,EAAuBC,EAAQC,GAC7C,OAAO,SAAUC,GACf,OAAOD,EAAE9G,KAAI,SAAUoB,GACrB,MAAO,CACLA,EACAxB,EAAAA,IAAQmH,GAAG,SAAUxB,GACnB,OAAOsB,EAAOzF,EAAImE,EACpB,IAEJ,GACF,CACF,CAEO,SAASyB,EAAmBC,GACjC,OAAO,SAAU1B,GACf,OAAOjG,KAAK4H,IAAK3B,GAAK0B,IAAO,EAAK,KAAQ,EAAI1B,EAAIA,GAAM0B,EAAI,CAC9D,CACF,CAEA,SAASE,EAAkB7G,GACzB,MAAM8G,EAAM9G,EAAQ,EAEd+G,EAAmB,EAAV/H,KAAKmH,GAAU,EADX,GAGba,EAAQ,CACZ,CACElG,EAAG9B,KAAKiI,IAAe,EAAVjI,KAAKmH,GAAU,GAAKW,EACjC/F,EAAG/B,KAAKkI,IAAe,EAAVlI,KAAKmH,GAAU,GAAKW,GAEnC,CACEhG,EAAG,EACHC,GAAI/B,KAAKyD,MAAQqE,IAIrB,IAAK,IAAItI,EAAI,EAAGA,GAdG,GAccA,IAC/BwI,EAAMG,KAAK,CACTrG,EAAG9B,KAAKiI,IAAIzI,EAAIuI,EAAQ/H,KAAKmH,GAAK,GAAKW,EACvC/F,EAAG/B,KAAKkI,IAAI1I,EAAIuI,EAAQ/H,KAAKmH,GAAK,GAAKW,IAI3C,OAAOE,CACT,CAEO,SAASI,EAAoBC,EAAO/D,GACzC,MAAMgE,EAASC,IAAAA,OAAcC,OAAOH,GAE9BI,EAAOH,EAAOpC,IAAIpE,EACtB4G,EAAOJ,EAAO3G,IAAIG,EAClB6G,EAAOL,EAAOpC,IAAInE,EAClB6G,EAAON,EAAO3G,IAAII,EAEd8G,EAAOvI,EAAAA,IAAe,CAACmI,EAAMC,IAC7BI,EAAOxI,EAAAA,IAAe,CAACqI,EAAMC,IAE7BG,EAAS,GAEf,IAAK,IAAIvJ,EAAI,EAAGA,EAAI8E,EAAO9E,IACzB,OAAa,CACX,MAAMsC,EAAI+G,EAAK7I,KAAKmC,UACdJ,EAAI+G,EAAK9I,KAAKmC,UAEpB,GAAIoG,IAAAA,SAAgBS,SAASX,EAAO,CAAEvG,IAAGC,MAAM,CAC7CgH,EAAOZ,KAAK,CAACrG,EAAGC,IAChB,KACF,CACF,CAGF,OAAOgH,CACT,CAGO,MAAME,EAAyB,WACpC,MAAMjB,EAAQH,EAAkB,GAC1BqB,EAAQrB,EAAkB,GAE1BsB,EAAS,GAEf,IAAK,IAAI3J,EAAI,EAAGA,EAAIwI,EAAM9H,OAAS,EAAGV,IACpC2J,EAAOhB,KAAK,CACVH,EAAMxI,GACNwI,EAAMxI,GAAKA,EAAI,EAAI,EAAI,IACvB0J,EAAM1J,GAAKA,EAAI,EAAI,EAAI,IACvB0J,EAAM1J,KAIV,OAAO2J,CACT,CAhBsC,GAkBtC,IAAIC,EACAC,EAGG,SAAS9H,EAAuBO,EAAGC,EAAGa,GAGtCwG,GAAexG,EAAM1C,SAAWmJ,IACnCD,EAAc9I,EAAAA,IACL,GACNI,KAAI,IACH0H,EAAoBP,EAAkB,GAAKwB,EAAezG,EAAM1C,WAGtE,MAAMoJ,EAAOhJ,EAAAA,IAAOsC,EAAMlC,KAAIvC,IAAA,IAAC,EAAEuD,GAAGvD,EAAA,OAAKuD,GAAK,EAAI,IAAI,KAChD6H,EAAavJ,KAAKC,MAAgC,EAAzBD,KAAKkH,KAAKoC,EAAO,MAAa,GAEvDE,EAAcJ,EAClBpJ,KAAKC,MAAMD,KAAKmC,SAAWiH,EAAYlJ,SACvCQ,KAAImB,IAAA,IAAEC,EAAGC,GAAEF,EAAA,MAAK,CAACC,EAAIyH,EAAYxH,EAAIwH,EAAW,IAG5CE,EAASlB,IAAAA,OACbmB,EAASnB,IAAAA,OACToB,EAAYpB,IAAAA,UAERqB,EAASH,EAAOjB,SAEhBqB,EAAUL,EAAYrJ,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAE9C0J,EAAclH,EAAMlC,KAAI,CAAAuC,EAAYzD,KAAO,IAAlB,EAAEkC,EAAC,GAAEE,GAAIqB,EACtC,MAAO8G,EAAIC,GAAMH,EAAQrK,GACzB,OAAOkK,EAAOO,OAAOF,EAAIC,EAAItI,EAAG,CAC9BwI,YAAa,EACbtI,GAAIA,GACJ,IAGEuI,EAAQlB,EAAsBvI,KAAK0J,GACvC7B,IAAAA,KAAYC,OAAO,CACjB6B,SAAU9B,IAAAA,SAAgB+B,OAAOF,GACjCG,SAAUH,EACVI,UAAU,MAIRC,EAAOlC,IAAAA,KAAYC,OAAO,CAC9BgC,UAAU,IAGZjC,IAAAA,KAAYmC,SAASD,EAAMN,GAE3B5B,IAAAA,KAAYoC,UAAUF,EAAM,CAAE3I,EAAG,EAAGC,EAAG,IACvCwG,IAAAA,KAAYqC,MAAMH,EAAmB,IAAblB,EAA+B,IAAbA,GAE1CI,EAAUkB,IAAIjB,EAAOkB,MAAO,IAAIhB,EAAaW,IAG7C,IAAK,IAAIjL,EAAI,EAAGuL,EAAM,GAAIC,EAAO,GAAKxL,EAAIuL,EAAMC,EAAMxL,IACpDiK,EAAOwB,OAAOrB,EAAQ,IAAOmB,GAE/B,OAAOjB,EAAYpJ,KAAI0C,IAAA,IAAC,SAAEiH,EAAQ,GAAEzI,GAAIwB,EAAA,MAAM,CAC5CxB,KACAE,EAAGuI,EAASvI,EAAIA,EAChBC,EAAGsI,EAAStI,EAAIA,EAAiB,GAAbwH,EACrB,GACH,CAmCO,SAAS2B,EAAeC,EAAYP,GACzC,MAAOQ,EAAKC,IAAUvM,EAAAA,EAAAA,UAASqM,GAK/B,MAAO,EAHWlM,EAAAA,EAAAA,UAAQ,IAAM2L,EAAMQ,IAAM,CAACA,KACxBE,EAAAA,EAAAA,cAAarF,IAAWoF,EAAOT,EAAM3E,GAAG,GAAE,IAGjE,CAEO,SAAStF,EAAcyF,EAAMmF,EAAS/I,GAC3C,MAAMgJ,EAAShJ,EAAK4D,GAAM/G,EAAAA,IAAqBkM,GAAShL,EAAAA,IACxD,OAAOD,EAAAA,MAEJmL,QAAO7K,EAAAA,EAAAA,IAAW,EAAG,EAAG4K,EAAOtL,SAC/BwL,MAAMF,EAAO9K,KAAKuF,GAAMjG,KAAKkG,IAAI,EAAGD,EAAI,OAAS,KACjD0F,OAAM,EACX,CAEO,SAAShM,EAAaiM,EAAUpJ,EAAMqJ,GAC3C,MAAiB,WAAbD,EACKpN,OAAOC,KAAK+D,EAAKqJ,GAAWxM,EAAAA,KAAsBc,MACvD,CAACC,EAAGC,IACFC,EAAAA,IAAQkC,EAAKqJ,GAAWxM,EAAAA,IAAqBe,GAAGG,EAAAA,KAChDD,EAAAA,IAAQkC,EAAKqJ,GAAWxM,EAAAA,IAAqBgB,GAAGE,EAAAA,OAGrC,eAAbqL,EACKpN,OAAOC,KAAK+D,EAAKqJ,GAAWxM,EAAAA,KAAsBc,MACvD,CAACC,EAAGC,IACFC,EAAAA,IAAOkC,EAAKqJ,GAAWxM,EAAAA,IAAqBe,GAAGG,EAAAA,KAC/CD,EAAAA,IAAOkC,EAAKqJ,GAAWxM,EAAAA,IAAqBgB,GAAGE,EAAAA,YAJrD,CAOF,C","sources":["LargeDropletMosaicApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  SCENARIO_KEY_STRING,\r\n  objectivesData,\r\n} from \"./data/objectivesData\";\r\nimport {\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\n\r\nconst LEVELS = 5;\r\nconst RAD_PX = 2.5;\r\nconst DROPLET_SHAPE = \"M0,-10L5,-5A7.071,7.071,0,1,1,-5,-5L0,-10Z\";\r\nconst SVG_DROPLET_WIDTH_DONT_CHANGE = 4;\r\n\r\nexport default function LargeDropletMosaicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [normalize, setNormalize] = useState(false);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedObjToScens = useMemo(() => {\r\n    const unorderedObjToScens = {};\r\n    const mapSorted = {};\r\n\r\n    const partialScens = Object.keys(\r\n      objectivesData[objectiveIDs[0]][SCENARIO_KEY_STRING]\r\n    ).filter((_, i) => i % 8 == 0);\r\n\r\n    objectiveIDs.forEach(\r\n      (obj) =>\r\n        (unorderedObjToScens[obj] = criteriaSort(\"median\", objectivesData, obj)\r\n          .filter((s) => partialScens.includes(s))\r\n          .reverse())\r\n    );\r\n\r\n    const mid = Math.floor(unorderedObjToScens[objectiveIDs[0]].length / 2);\r\n    const sortedObjs = objectiveIDs.sort((a, b) => {\r\n      return (\r\n        d3.median(\r\n          objectivesData[a][SCENARIO_KEY_STRING][unorderedObjToScens[a][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        ) -\r\n        d3.median(\r\n          objectivesData[b][SCENARIO_KEY_STRING][unorderedObjToScens[b][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        )\r\n      );\r\n    });\r\n\r\n    sortedObjs.forEach(\r\n      (obj) => void (mapSorted[obj] = unorderedObjToScens[obj])\r\n    );\r\n    return mapSorted;\r\n  }, []);\r\n\r\n  const objToWaterLevels = useMemo(() => {\r\n    const retVal = {};\r\n\r\n    objectiveIDs.forEach((obj) => {\r\n      retVal[obj] = orderedObjToScens[obj].map((s) => {\r\n        const i = createInterps(obj, s, objectivesData);\r\n        return ticksExact(0, 1, LEVELS + 1).map((d, j) => i(d));\r\n      });\r\n    });\r\n\r\n    return retVal;\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", window.innerWidth)\r\n      .attr(\"height\", window.innerHeight);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    const nodesArr = Object.keys(objToWaterLevels).map((obj) => {\r\n      const scale = 1;\r\n\r\n      const nodes_pos = placeDropsUsingPhysics(\r\n        0,\r\n        0,\r\n        objToWaterLevels[obj].map((levs, idx) => ({\r\n          r: Math.max(1, (normalize ? 1 : levs[0]) * scale * RAD_PX * 2.5),\r\n          id: idx,\r\n        }))\r\n      );\r\n\r\n      const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n        levs: objToWaterLevels[obj][idx].map(\r\n          (w) =>\r\n            w *\r\n            scale *\r\n            (normalize ? 1 / Math.max(objToWaterLevels[obj][idx][0], 0.1) : 1)\r\n        ),\r\n        maxLev: normalize\r\n          ? 1\r\n          : Math.max(objToWaterLevels[obj][idx][0], 0.1) * scale,\r\n        tilt: Math.random() * 50 - 25,\r\n        dur: Math.random() * 100 + 400,\r\n        startX: x,\r\n        startY: y,\r\n      }));\r\n\r\n      return nodes;\r\n    });\r\n\r\n    bucketSvgSelector.current\r\n      .selectAll(\".largeDrop\")\r\n      .data(nodesArr, (_, i) => i)\r\n      .join(\"g\")\r\n      .attr(\"class\", \"largeDrop\")\r\n      .attr(\r\n        \"transform\",\r\n        (_, i) =>\r\n          `translate(${(i % 20) * RAD_PX * 25 + RAD_PX * 60}, ${\r\n            Math.floor(i / 20) * RAD_PX * 30 + RAD_PX * 40\r\n          })`\r\n      )\r\n      .each(function (nodes, i1) {\r\n        d3.select(this)\r\n          .selectAll(\".smallDrop\")\r\n          .data(nodes, (_, i) => i)\r\n          .join((enter) => {\r\n            return enter\r\n              .append(\"g\")\r\n              .attr(\"class\", \"smallDrop\")\r\n              .each(function ({ levs }, i2) {\r\n                d3.select(this)\r\n                  .append(\"defs\")\r\n                  .append(\"clipPath\")\r\n                  .attr(\"id\", `drop-mask-${i1}-${i2}`)\r\n                  .append(\"path\")\r\n                  .attr(\"d\", DROPLET_SHAPE);\r\n                d3.select(this)\r\n                  .append(\"g\")\r\n                  .attr(\"clip-path\", `url(#drop-mask-${i1}-${i2})`)\r\n                  .selectAll(\"rect\")\r\n                  .data(levs, (_, i) => i)\r\n                  .join(\"rect\")\r\n                  .attr(\"fill\", (_, i) =>\r\n                    interpolateWatercolorBlue(i / LEVELS)\r\n                  );\r\n              });\r\n          })\r\n          .attr(\r\n            \"transform\",\r\n            ({ startX, startY, tilt }) =>\r\n              `translate(${startX}, ${startY}) rotate(${tilt})`\r\n          )\r\n          .each(function ({ levs, maxLev }) {\r\n            d3.select(this)\r\n              .selectAll(\"rect\")\r\n              .data(levs, (_, i) => i)\r\n              .attr(\"width\", maxLev * RAD_PX * 2)\r\n              .attr(\"height\", maxLev * RAD_PX * 2)\r\n              .attr(\"x\", (-maxLev * RAD_PX * 2) / 2)\r\n              .attr(\r\n                \"y\",\r\n                (l) =>\r\n                  (maxLev * RAD_PX * 2) / 2 -\r\n                  percentToRatioFilled(l / maxLev) * (maxLev * RAD_PX * 2)\r\n              );\r\n            d3.select(this)\r\n              .select(\"path\")\r\n              .attr(\r\n                \"transform\",\r\n                `scale(${\r\n                  (maxLev * RAD_PX) /\r\n                  2 /\r\n                  Math.SQRT2 /\r\n                  SVG_DROPLET_WIDTH_DONT_CHANGE\r\n                })`\r\n              );\r\n          });\r\n      });\r\n  }, [objToWaterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={normalize}\r\n        onChange={() => void setNormalize((e) => !e)}\r\n      />\r\n      <label htmlFor=\"html\">normalize</label>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.sqrt(2) / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nexport function percentToRatioFilled(p) {\r\n  return (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.4;\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 20;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => r ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.1,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / 1200) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n}\r\n"],"names":["LEVELS","RAD_PX","DROPLET_SHAPE","SVG_DROPLET_WIDTH_DONT_CHANGE","LargeDropletMosaicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","normalize","setNormalize","useState","bucketSvgSelector","orderedObjToScens","useMemo","unorderedObjToScens","mapSorted","partialScens","SCENARIO_KEY_STRING","filter","_","i","forEach","obj","criteriaSort","s","includes","reverse","mid","Math","floor","length","sort","a","b","d3","DELIV_KEY_STRING","objToWaterLevels","retVal","map","createInterps","ticksExact","d","j","useLayoutEffect","width","window","innerWidth","height","innerHeight","attr","nodesArr","placeDropsUsingPhysics","levs","idx","r","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","selectAll","data","join","concat","each","nodes","i1","this","enter","append","_ref3","i2","interpolateWatercolorBlue","_ref4","_ref5","l","percentToRatioFilled","select","SQRT2","_jsxs","className","children","_jsx","type","checked","onChange","e","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","value","isEqualFunc","prev","MAX_DELIVS","async","objs","fetch","json","scen","v","min","mapBy","name","console","log","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","sqrt","PI","closePath","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","AREA","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}