{"version":3,"file":"static/js/594.059571ce.chunk.js","mappings":"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","sources":["LargeDropletMosaicApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  MAX_DELIVS,\r\n  SCENARIO_KEY_STRING,\r\n  objectivesData,\r\n} from \"./data/objectivesData\";\r\nimport {\r\n  DROPLET_SHAPE,\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n  waterdrop,\r\n} from \"./utils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LEVELS = 5;\r\nconst RAD_PX = 3;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst SCEN_DIVISOR = 20;\r\nconst LARGE_DROPLET_PAD_FACTOR = 1.5;\r\nconst PX_BIAS = 1;\r\n\r\nexport default function LargeDropletMosaicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const navigate = useNavigate();\r\n  const winDim = useRef();\r\n  const [normalize, setNormalize] = useState(false);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedObjToScens = useMemo(() => {\r\n    const unorderedObjToScens = {};\r\n    const mapSorted = {};\r\n\r\n    // don't process all scenes, too many small drops causes lag\r\n    objectiveIDs.forEach(\r\n      (obj) =>\r\n        (unorderedObjToScens[obj] = criteriaSort(\"median\", objectivesData, obj)\r\n          .filter((_, i) => i % SCEN_DIVISOR == 0)\r\n          .reverse())\r\n    );\r\n\r\n    const mid = Math.floor(unorderedObjToScens[objectiveIDs[0]].length / 2);\r\n    const sortedObjs = objectiveIDs.sort((a, b) => {\r\n      return (\r\n        d3.median(\r\n          objectivesData[a][SCENARIO_KEY_STRING][unorderedObjToScens[a][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        ) -\r\n        d3.median(\r\n          objectivesData[b][SCENARIO_KEY_STRING][unorderedObjToScens[b][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        )\r\n      );\r\n    });\r\n\r\n    sortedObjs.forEach(\r\n      (obj) => void (mapSorted[obj] = unorderedObjToScens[obj])\r\n    );\r\n    return mapSorted;\r\n  }, []);\r\n\r\n  const objToWaterLevels = useMemo(() => {\r\n    const retVal = {};\r\n\r\n    objectiveIDs.forEach((obj) => {\r\n      retVal[obj] = orderedObjToScens[obj].map((s) => {\r\n        const i = createInterps(obj, s, objectivesData, MAX_DELIVS);\r\n        return ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n      });\r\n    });\r\n\r\n    return retVal;\r\n  }, []);\r\n\r\n  const zoomRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    zoomRef.current = d3\r\n      .zoom()\r\n      .scaleExtent([1, 10])\r\n      .translateExtent([\r\n        [-winDim.current.width / 2, -winDim.current.height / 2],\r\n        [winDim.current.width * 1.5, winDim.current.height * 1.5],\r\n      ])\r\n      .on(\"zoom\", function (e) {\r\n        bucketSvgSelector.current\r\n          .select(\".svg-trans\")\r\n          .attr(\"transform\", e.transform);\r\n\r\n        bucketSvgSelector.current\r\n          .selectAll(\".text-scale\")\r\n          .attr(\"transform\", `scale(${1 / e.transform.k})`);\r\n      })\r\n      .on(\r\n        \"start\",\r\n        (e) =>\r\n          (e.sourceEvent || {}).type !== \"wheel\" &&\r\n          bucketSvgSelector.current.style(\"cursor\", \"grabbing\")\r\n      )\r\n      .on(\"end\", () => bucketSvgSelector.current.style(\"cursor\", \"grab\"));\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", winDim.current.width)\r\n      .attr(\"height\", winDim.current.height)\r\n      .style(\"cursor\", \"grab\")\r\n      .call((s) => s.append(\"g\").attr(\"class\", \"svg-trans\"))\r\n      .call(zoomRef.current);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n    bucketSvgSelector.current.call(zoomRef.current.transform, d3.zoomIdentity);\r\n\r\n    const nodesArr = Object.keys(objToWaterLevels)\r\n      .map((obj) => {\r\n        const scale = 1;\r\n\r\n        const nodesPos = placeDropsUsingPhysics(\r\n          0,\r\n          0,\r\n          objToWaterLevels[obj].map((levs, idx) => ({\r\n            r: Math.max(\r\n              2,\r\n              (normalize ? 1 : Math.max(levs[0], MIN_LEV_VAL)) *\r\n                scale *\r\n                RAD_PX *\r\n                LARGE_DROPLET_PAD_FACTOR\r\n            ),\r\n            id: idx,\r\n          }))\r\n        );\r\n\r\n        const nodes = nodesPos.map(({ id: idx, x, y }) => ({\r\n          levs: objToWaterLevels[obj][idx].map(\r\n            (w, i) =>\r\n              Math.max(w, i == 0 ? MIN_LEV_VAL : 0) *\r\n              scale *\r\n              (normalize\r\n                ? 1 / Math.max(objToWaterLevels[obj][idx][0], MIN_LEV_VAL)\r\n                : 1) *\r\n              RAD_PX\r\n          ),\r\n          maxLev:\r\n            (normalize\r\n              ? 1\r\n              : Math.max(objToWaterLevels[obj][idx][0], MIN_LEV_VAL) * scale) *\r\n            RAD_PX,\r\n          tilt: Math.random() * 50 - 25,\r\n          dur: Math.random() * 100 + 400,\r\n          startX: x,\r\n          startY: y,\r\n          obj,\r\n        }));\r\n\r\n        return nodes;\r\n      })\r\n      .reverse();\r\n\r\n    const largeNodesRads = {};\r\n\r\n    const largeNodesPos = placeDropsUsingPhysics(\r\n      0,\r\n      0,\r\n      nodesArr.map((largeDrop, idx) => ({\r\n        r: (largeNodesRads[idx] = Math.max(\r\n          1,\r\n          Math.sqrt(d3.sum(largeDrop.map((d) => d.maxLev)) / Math.PI) * 8\r\n        )),\r\n        id: idx,\r\n      }))\r\n    ).map(({ x, y }, i) => ({\r\n      x,\r\n      y,\r\n      tilt: Math.random() * 50 - 25,\r\n      r: largeNodesRads[i],\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".largeDrop\")\r\n      .data(nodesArr, (n, i) => n[0].obj)\r\n      .join((enter) =>\r\n        enter.append(\"g\").each(function (d, i) {\r\n          const s = d3.select(this);\r\n\r\n          d3.select(this.parentNode)\r\n            .append(\"g\")\r\n            .attr(\"id\", `drop-${i}`)\r\n            .append(\"g\")\r\n            .attr(\"class\", \"text-scale\")\r\n            .append(\"text\")\r\n            .style(\"font-size\", 16)\r\n            .attr(\"text-anchor\", \"middle\");\r\n          s.append(\"g\").attr(\"class\", \"rotateClass\");\r\n\r\n          s.append(\"rect\").attr(\"class\", \"bbox\").style(\"visibility\", \"hidden\");\r\n\r\n          s.on(\"mouseover\", function () {\r\n            bucketSvgSelector.current\r\n              .selectAll(\".largeDrop\")\r\n              .style(\"opacity\", 0.5);\r\n            s.style(\"opacity\", 1);\r\n            bucketSvgSelector.current.select(`#drop-${i}`).style(\"opacity\", 1);\r\n          }).on(\"mouseout\", function () {\r\n            bucketSvgSelector.current\r\n              .selectAll(\".largeDrop\")\r\n              .style(\"opacity\", 1);\r\n            bucketSvgSelector.current.select(`#drop-${i}`).style(\"opacity\", 0);\r\n          });\r\n        })\r\n      )\r\n      .attr(\"class\", \"largeDrop\")\r\n      .attr(\r\n        \"transform\",\r\n        (_, i) =>\r\n          `translate(${largeNodesPos[i].x + width / 2}, ${\r\n            largeNodesPos[i].y + height / 2\r\n          })`\r\n      )\r\n      .each(function (nodes, i1) {\r\n        const s = d3.select(this);\r\n\r\n        d3.select(`#drop-${i1}`)\r\n          .style(\"opacity\", 0)\r\n          .select(\"text\")\r\n          .text(nodes[0].obj);\r\n        d3.select(this)\r\n          .select(\".rotateClass\")\r\n          .attr(\"transform\", `rotate(${largeNodesPos[i1].tilt})`)\r\n          .selectAll(\".smallDrop\")\r\n          .data(nodes, (_, i) => i)\r\n          .join((enter) => {\r\n            return enter\r\n              .append(\"g\")\r\n              .attr(\"class\", \"smallDrop\")\r\n              .each(function ({ levs }, i2) {\r\n                const stops = d3\r\n                  .select(this)\r\n                  .append(\"defs\")\r\n                  .append(\"linearGradient\")\r\n                  .attr(\"id\", `drop-fill-${i1}-${i2}`)\r\n                  .attr(\"x1\", \"0%\")\r\n                  .attr(\"x2\", \"0%\")\r\n                  .attr(\"y1\", \"0%\")\r\n                  .attr(\"y2\", \"100%\");\r\n\r\n                levs.forEach((_, i) => {\r\n                  stops\r\n                    .append(\"stop\")\r\n                    .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n                  stops\r\n                    .append(\"stop\")\r\n                    .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n                });\r\n\r\n                d3.select(this)\r\n                  .append(\"path\")\r\n                  .attr(\"d\", DROPLET_SHAPE)\r\n                  .attr(\"fill\", `url(#drop-fill-${i1}-${i2})`);\r\n              });\r\n          })\r\n          .attr(\r\n            \"transform\",\r\n            ({ startX, startY, tilt }) =>\r\n              `translate(${startX}, ${startY}) rotate(${tilt})`\r\n          )\r\n          .each(function ({ levs, maxLev }) {\r\n            d3.select(this)\r\n              .selectAll(\"path\")\r\n              .attr(\"transform\", `scale(${maxLev})`);\r\n\r\n            d3.select(this)\r\n              .selectAll(\"stop\")\r\n              .each(function (_, i) {\r\n                let actI = Math.floor(i / 2);\r\n                const isEnd = i % 2;\r\n\r\n                if (isEnd === 0) actI -= 1;\r\n\r\n                if (actI === -1) {\r\n                  d3.select(this).attr(\"offset\", `${0}%`);\r\n                } else {\r\n                  d3.select(this).attr(\r\n                    \"offset\",\r\n                    `${(1 - levs[actI] / maxLev) * 100}%`\r\n                  );\r\n                }\r\n              });\r\n          });\r\n\r\n        const d = s.select(\".rotateClass\");\r\n\r\n        s.on(\"click\", function () {\r\n          navigate(\r\n            `/RecursiveDropletsBasicApp?obj=${nodes[0].obj}&norm=${\r\n              normalize ? \"true\" : \"false\"\r\n            }`\r\n          );\r\n        });\r\n\r\n        s.select(\".bbox\")\r\n          .attr(\"x\", d.node().getBBox().x)\r\n          .attr(\"y\", d.node().getBBox().y)\r\n          .attr(\"width\", d.node().getBBox().width)\r\n          .attr(\"height\", d.node().getBBox().height);\r\n\r\n        bucketSvgSelector.current\r\n          .select(`#drop-${i1}`)\r\n          .attr(\r\n            \"transform\",\r\n            `translate(${\r\n              d.node().getBoundingClientRect().x +\r\n              d.node().getBoundingClientRect().width / 2\r\n            }, ${d.node().getBoundingClientRect().y})`\r\n          );\r\n      });\r\n  }, [objToWaterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div className=\"bubbles-input-area\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"norm\"\r\n          checked={normalize}\r\n          onChange={() => void setNormalize((e) => !e)}\r\n        />\r\n        <label htmlFor=\"norm\">normalize</label>\r\n      </div>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nexport function waterdrop(yFill) {\r\n  return {\r\n    draw: function (context, size) {\r\n      const realHeight = (size * (1 + Math.SQRT1_2)) / 2;\r\n      const yFromTop = realHeight * (1 - yFill);\r\n\r\n      if (yFill > 0.75) {\r\n        const topRightLine = d3.interpolateArray(\r\n          [0, -size / 2],\r\n          [size / 4, -size / 4]\r\n        );\r\n        const topLeftLine = d3.interpolateArray(\r\n          [0, -size / 2],\r\n          [-size / 4, -size / 4]\r\n        );\r\n\r\n        const start = topRightLine(1 - yFill),\r\n          end1 = topRightLine(1),\r\n          end2 = topLeftLine(1 - yFill);\r\n\r\n        context.moveTo(...start);\r\n        context.lineTo(...end1);\r\n\r\n        context.arc(\r\n          0,\r\n          0,\r\n          size / Math.SQRT2 / 2,\r\n          -Math.PI / 4,\r\n          (Math.PI * 5) / 4\r\n        );\r\n\r\n        context.lineTo(...end2);\r\n        context.closePath();\r\n      } else {\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => r ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.3; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.1,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data, maxDelivs) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n"],"names":["LEVELS","RAD_PX","MIN_LEV_VAL","SCEN_DIVISOR","LARGE_DROPLET_PAD_FACTOR","LargeDropletMosaicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","navigate","useNavigate","winDim","normalize","setNormalize","useState","bucketSvgSelector","orderedObjToScens","useMemo","unorderedObjToScens","mapSorted","forEach","obj","criteriaSort","filter","_","i","reverse","mid","Math","floor","length","sort","a","b","d3","SCENARIO_KEY_STRING","DELIV_KEY_STRING","objToWaterLevels","retVal","map","s","createInterps","MAX_DELIVS","ticksExact","d","zoomRef","useLayoutEffect","width","window","innerWidth","height","innerHeight","scaleExtent","translateExtent","on","e","select","attr","transform","selectAll","concat","k","sourceEvent","type","style","call","append","nodesArr","placeDropsUsingPhysics","levs","idx","r","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","largeNodesRads","largeNodesPos","largeDrop","sqrt","PI","_ref3","data","n","join","enter","each","this","parentNode","nodes","i1","text","_ref4","i2","stops","interpolateWatercolorBlue","DROPLET_SHAPE","_ref5","_ref6","actI","node","getBBox","getBoundingClientRect","_jsxs","className","children","_jsx","checked","onChange","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","value","isEqualFunc","prev","async","objs","fetch","json","scen","v","min","mapBy","name","console","log","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","closePath","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","AREA","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","maxDelivs","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}