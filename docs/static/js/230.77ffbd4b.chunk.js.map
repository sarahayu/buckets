{"version":3,"file":"static/js/230.77ffbd4b.chunk.js","mappings":"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","sources":["LargeDropletV2App.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils/common.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport * as THREE from \"three\";\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"bucket-lib/utils\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  MAX_DELIVS,\r\n  SCENARIO_KEY_STRING,\r\n  objectiveIDs,\r\n  objectivesData,\r\n  scenarioIDs,\r\n} from \"data/objectivesData\";\r\nimport {\r\n  Camera,\r\n  DROPLET_SHAPE,\r\n  MeshGeometry,\r\n  createInterps,\r\n  mapBy,\r\n  mouseToThree,\r\n  placeDropsUsingPhysics,\r\n  sortBy,\r\n  useStateRef,\r\n  waterdropDelta,\r\n  waterdropDeltaOutline,\r\n} from \"utils/common\";\r\n\r\nconst LEVELS = 5;\r\nconst RAD_PX = 3;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst SCEN_DIVISOR = 1; // debugging purposes, don't render all scenarios to speed things up\r\nconst SMALL_DROP_PAD_FACTOR = 1.75;\r\nconst LARGE_DROP_PAD_FACTOR = 1.5;\r\nconst ANIM_TIME = 1;\r\nconst HOVER_AREA_FACTOR = 1.3 / (1 + Math.SQRT1_2);\r\nconst FILTERED_KEYS = scenarioIDs.filter((_, i) => i % SCEN_DIVISOR === 0);\r\n\r\n// Flattening hierarchical data makes it more flexible for classifying\r\n// (from experience). id conveniently corresponds to index.\r\n// Also cache classifications (by objective and by scenario, for now)\r\nconst [flattenedData, dataGroupings] = preprocessData();\r\n\r\n// pre-calculate these so we don't lag later\r\nconst waterdrops1 = initWaterdrops(\"objective\");\r\nconst waterdrops2 = initWaterdrops(\"scenario\");\r\n\r\nexport default function LargeDropletV2App() {\r\n  const width = window.innerWidth,\r\n    height = window.innerHeight;\r\n\r\n  const { current: scene } = useRef(getScene());\r\n\r\n  const [grouping, setGrouping, groupingRef] = useStateRef(\"objective\");\r\n  const [tooltip, setTooltip] = useState({});\r\n\r\n  const waterdrops = useRef();\r\n\r\n  const clockRef = useRef();\r\n\r\n  const dropsMeshRef = useRef(new WaterdropMesh());\r\n  const pointsMeshRef = useRef(new WaterdropSimplifiedMesh());\r\n\r\n  const [reverseTranslation, setReverseTranslation, reverseTranslationRef] =\r\n    useStateRef();\r\n\r\n  useEffect(function initialize() {\r\n    d3.select(\"#mosaic-svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-trans\")\r\n      .on(\"mousemove\", function (e) {\r\n        const { x, y } = e;\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          x,\r\n          y,\r\n        }));\r\n      });\r\n\r\n    initTHREE();\r\n  }, []);\r\n\r\n  useEffect(\r\n    function onChangeGrouping() {\r\n      d3.select(\"#mosaic-svg\")\r\n        .select(\".svg-trans\")\r\n        .selectAll(\".largeDrop\")\r\n        .attr(\"display\", \"none\");\r\n\r\n      const prevWaterdrops = waterdrops.current;\r\n\r\n      waterdrops.current = grouping === \"objective\" ? waterdrops1 : waterdrops2;\r\n\r\n      if (prevWaterdrops) {\r\n        setReverseTranslation(\r\n          calcTranslations(waterdrops.current, prevWaterdrops)\r\n        );\r\n        pointsMeshRef.current.draw(scene);\r\n      }\r\n\r\n      dropsMeshRef.current.remove(scene);\r\n\r\n      clockRef.current = new THREE.Clock();\r\n    },\r\n    [grouping]\r\n  );\r\n\r\n  useEffect(\r\n    function onGroupingAnimationEnd() {\r\n      if (reverseTranslationRef.current) return;\r\n\r\n      pointsMeshRef.current.createMesh(waterdrops.current);\r\n      dropsMeshRef.current.createMesh(waterdrops.current);\r\n\r\n      pointsMeshRef.current.remove(scene);\r\n      dropsMeshRef.current.draw(scene);\r\n\r\n      updateLargeDropSVG(\r\n        d3.select(\"#mosaic-svg\").select(\".svg-trans\"),\r\n        waterdrops.current,\r\n        (d) =>\r\n          setTooltip((tooltip) => ({\r\n            ...tooltip,\r\n            text: d.key,\r\n            primaryText: d.key,\r\n          })),\r\n        () =>\r\n          setTooltip((tooltip) => ({\r\n            ...tooltip,\r\n            text: \"\",\r\n            primaryText: \"\",\r\n          }))\r\n      );\r\n    },\r\n    [reverseTranslation]\r\n  );\r\n\r\n  function initTHREE() {\r\n    const camera = new Camera({\r\n      fov: 45,\r\n      near: 1,\r\n      far: 3000,\r\n      width,\r\n      height,\r\n      domElement: d3.select(\".bubbles-wrapper\").node(),\r\n      zoomFn: (e) => {\r\n        d3.select(\"#mosaic-svg\")\r\n          .select(\".svg-trans\")\r\n          .attr(\"transform\", e.transform);\r\n\r\n        if (!dropsMeshRef.current) return;\r\n\r\n        dropsMeshRef.current.updateOutlineVisibility(\r\n          d3.scaleLinear().domain([1, 5]).range([0.1, 1]).clamp(true)(\r\n            e.transform.k\r\n          )\r\n        );\r\n      },\r\n    });\r\n\r\n    camera.view.on(\"mousemove\", (e) => {\r\n      if (!pointsMeshRef.current) return;\r\n\r\n      const { x, y } = mouseToThree(e.x, e.y, width, height);\r\n\r\n      const intersectID = pointsMeshRef.current.intersectObject(camera, x, y);\r\n\r\n      if (intersectID) {\r\n        const waterdropIntersected = flattenedData.find(\r\n          (n) => n.id === intersectID\r\n        );\r\n\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          secondaryText:\r\n            groupingRef.current === \"objective\"\r\n              ? waterdropIntersected.scenario\r\n              : waterdropIntersected.objective,\r\n        }));\r\n      } else {\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          secondaryText: \"\",\r\n        }));\r\n      }\r\n    });\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    document.querySelector(\"#mosaic-webgl\").appendChild(renderer.domElement);\r\n\r\n    renderer.setAnimationLoop(() => {\r\n      renderer.render(scene, camera.camera);\r\n\r\n      if (!reverseTranslationRef.current) return;\r\n\r\n      const dt = clockRef.current.getDelta();\r\n\r\n      if (clockRef.current.getElapsedTime() > ANIM_TIME) {\r\n        setReverseTranslation(null);\r\n        return;\r\n      }\r\n\r\n      pointsMeshRef.current.updatePoints(\r\n        waterdrops.current,\r\n        reverseTranslationRef.current,\r\n        dt / ANIM_TIME\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <InputArea\r\n        grouping={grouping}\r\n        onChange={(e) => void setGrouping(e.target.value)}\r\n      />\r\n      <div className=\"bubbles-tooltip\" style={getTooltipStyle(tooltip)}>\r\n        {tooltip.secondaryText || tooltip.primaryText}\r\n      </div>\r\n      <div id=\"mosaic-webgl\"></div>\r\n      <svg id=\"mosaic-svg\"></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InputArea({ grouping, onChange }) {\r\n  return (\r\n    <div className=\"bubbles-input-area\" onChange={onChange}>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"grouping\"\r\n        value=\"objective\"\r\n        id=\"objective\"\r\n        checked={grouping === \"objective\"}\r\n      />\r\n      <label htmlFor=\"objective\">objective</label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"grouping\"\r\n        value=\"scenario\"\r\n        id=\"scenario\"\r\n        checked={grouping === \"scenario\"}\r\n      />\r\n      <label htmlFor=\"scenario\">scenario</label>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*-------------------------------------------- !! spaghetti code below !! --------------------------------------------------------------------*/\r\n\r\nfunction preprocessData() {\r\n  const flattenedData = [];\r\n  const dataGroupings = {\r\n    objective: {},\r\n    scenario: {},\r\n  };\r\n\r\n  // for ordering later\r\n  const means = [];\r\n\r\n  let idx = 0;\r\n  for (const obj of objectiveIDs) {\r\n    for (const scen of FILTERED_KEYS) {\r\n      if (!dataGroupings[\"objective\"][obj])\r\n        dataGroupings[\"objective\"][obj] = [];\r\n\r\n      if (!dataGroupings[\"scenario\"][scen])\r\n        dataGroupings[\"scenario\"][scen] = [];\r\n\r\n      dataGroupings[\"objective\"][obj].push(idx);\r\n      dataGroupings[\"scenario\"][scen].push(idx);\r\n\r\n      const deliveries =\r\n        objectivesData[obj][SCENARIO_KEY_STRING][scen][DELIV_KEY_STRING];\r\n\r\n      flattenedData.push({\r\n        id: idx,\r\n        objective: obj,\r\n        scenario: scen,\r\n        deliveries,\r\n      });\r\n\r\n      means.push(d3.mean(deliveries));\r\n\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  const orderedDataGroupings = {};\r\n\r\n  for (const criteria of Object.keys(dataGroupings)) {\r\n    const asdfasdf = [];\r\n    for (const key of Object.keys(dataGroupings[criteria])) {\r\n      const ids = dataGroupings[criteria][key];\r\n      const sortedObjScens = ids.sort((a, b) => means[b] - means[a]);\r\n      asdfasdf.push({\r\n        key,\r\n        sorted: sortedObjScens,\r\n        mean: d3.mean(ids.map((id) => flattenedData[id].deliveries).flat()),\r\n      });\r\n    }\r\n\r\n    const sortedObjScens = asdfasdf.sort((a, b) => b.mean - a.mean);\r\n\r\n    orderedDataGroupings[criteria] = {};\r\n\r\n    for (let i = 0; i < sortedObjScens.length; i++) {\r\n      const { key, sorted } = sortedObjScens[i];\r\n      const IDtoRank = {};\r\n\r\n      for (let j = 0; j < sorted.length; j++) {\r\n        IDtoRank[sorted[j]] = j;\r\n      }\r\n      orderedDataGroupings[criteria][key] = IDtoRank;\r\n      orderedDataGroupings[criteria][key].rank = i;\r\n    }\r\n  }\r\n\r\n  return [flattenedData, orderedDataGroupings];\r\n}\r\n\r\n// TODO optimize!!\r\nfunction initWaterdrops(grouping) {\r\n  const groupKeys = grouping === \"objective\" ? objectiveIDs : FILTERED_KEYS;\r\n  const memberKeys = grouping === \"objective\" ? FILTERED_KEYS : objectiveIDs;\r\n\r\n  const amtGroups = groupKeys.length;\r\n  const amtPerGroup = memberKeys.length;\r\n\r\n  const largeDropRad = Math.max(\r\n    1,\r\n    Math.sqrt(amtPerGroup / Math.PI) *\r\n      RAD_PX *\r\n      2 *\r\n      SMALL_DROP_PAD_FACTOR *\r\n      LARGE_DROP_PAD_FACTOR\r\n  );\r\n  const smallDropRad = Math.max(2, RAD_PX * SMALL_DROP_PAD_FACTOR);\r\n\r\n  const largeNodesPos = mapBy(\r\n    placeDropsUsingPhysics(\r\n      0,\r\n      0,\r\n      groupKeys.map((p, idx) => ({\r\n        r: largeDropRad,\r\n        id: idx,\r\n      }))\r\n    ),\r\n    ({ id }) => id\r\n  );\r\n\r\n  const smallNodesPhys = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    memberKeys.map((s, idx) => ({\r\n      r: smallDropRad,\r\n      id: idx,\r\n    }))\r\n  );\r\n\r\n  const smallNodesPos = mapBy(smallNodesPhys, ({ id }) => id);\r\n\r\n  const nodes = [];\r\n  const groupNodes = [];\r\n  const nodeIDtoIdx = {};\r\n\r\n  let idx = 0;\r\n\r\n  for (const node of flattenedData) {\r\n    const { id, objective, scenario, deliveries } = node;\r\n\r\n    const i = createInterps(objective, scenario, objectivesData, MAX_DELIVS);\r\n    const wds = ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n\r\n    const levs = wds.map(\r\n      (w, i) => Math.max(w, i == 0 ? MIN_LEV_VAL : 0) * RAD_PX\r\n    );\r\n\r\n    const groupID = grouping === \"objective\" ? objective : scenario;\r\n    const memberID = grouping === \"objective\" ? scenario : objective;\r\n\r\n    const groupRank = dataGroupings[grouping][groupID].rank;\r\n    const memberRank = dataGroupings[grouping][groupID][id];\r\n\r\n    nodes.push({\r\n      id,\r\n      levs,\r\n      maxLev: RAD_PX,\r\n      domLev: calcDomLev(levs),\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      x: smallNodesPos[memberRank].x,\r\n      y: smallNodesPos[memberRank].y,\r\n      group: groupID,\r\n      key: memberID,\r\n      globalX: largeNodesPos[groupRank].x + smallNodesPos[memberRank].x,\r\n      globalY: largeNodesPos[groupRank].y + smallNodesPos[memberRank].y,\r\n    });\r\n\r\n    nodeIDtoIdx[id] = idx++;\r\n  }\r\n\r\n  for (const groupKey of groupKeys) {\r\n    groupNodes.push({\r\n      x: largeNodesPos[dataGroupings[grouping][groupKey].rank].x,\r\n      y: largeNodesPos[dataGroupings[grouping][groupKey].rank].y,\r\n      tilt: Math.random() * 50 - 25,\r\n      key: groupKey,\r\n      height: smallNodesPhys.height,\r\n    });\r\n  }\r\n\r\n  return {\r\n    nodes: nodes,\r\n    nodeIDtoIdx,\r\n    groups: groupNodes,\r\n  };\r\n}\r\n\r\nfunction calcTranslations(waterdropsTo, waterdropsFrom) {\r\n  const translations = {};\r\n\r\n  for (const nodeTo of waterdropsTo.nodes) {\r\n    const { id, globalX: endX, globalY: endY } = nodeTo;\r\n\r\n    const nodeFromIdx = waterdropsFrom.nodeIDtoIdx[id];\r\n    const nodeFrom = waterdropsFrom.nodes[nodeFromIdx];\r\n\r\n    const { globalX: startX, globalY: startY } = nodeFrom;\r\n\r\n    translations[id] = [endX - startX, endY - startY];\r\n  }\r\n\r\n  return translations;\r\n}\r\n\r\nfunction getScene() {\r\n  const s = new THREE.Scene();\r\n  s.background = new THREE.Color(0xefefef);\r\n  return s;\r\n}\r\n\r\nfunction getTooltipStyle(tooltip) {\r\n  return {\r\n    display: tooltip.secondaryText || tooltip.primaryText ? \"initial\" : \"none\",\r\n    left: tooltip.x,\r\n    top: tooltip.y,\r\n  };\r\n}\r\n\r\nfunction updateLargeDropSVG(container, waterdrops, onHover, onUnhover) {\r\n  container\r\n    .selectAll(\".largeDrop\")\r\n    .data(waterdrops.groups)\r\n    .join((enter) => {\r\n      return enter\r\n        .append(\"g\")\r\n        .attr(\"class\", \"largeDrop\")\r\n        .call((s) => {\r\n          s.append(\"path\")\r\n            .attr(\"d\", DROPLET_SHAPE)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"transparent\")\r\n            .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n            .attr(\"stroke-width\", 1);\r\n        });\r\n    })\r\n    .attr(\"display\", \"initial\")\r\n    .attr(\r\n      \"transform\",\r\n      ({ x, y, height }) =>\r\n        `translate(${x}, ${y}) scale(${height * HOVER_AREA_FACTOR})`\r\n    )\r\n    .on(\"mouseenter\", function (e, d) {\r\n      d3.select(this).select(\"path\").attr(\"stroke\", \"lightgray\");\r\n      onHover(d);\r\n    })\r\n    .on(\"mouseleave\", function (e, d) {\r\n      d3.select(this).select(\"path\").attr(\"stroke\", \"transparent\");\r\n      onUnhover(d);\r\n    });\r\n}\r\n\r\n// TODO fix colors\r\nfunction calcDomLev(levs) {\r\n  levs = [1, ...levs, 0]; // include full level=1 because dominant lev might just be white\r\n\r\n  let mean = 0;\r\n  for (let i = 0; i < levs.length - 1; i++) {\r\n    const dif = levs[i] - levs[i + 1];\r\n    mean += (dif * (i - 1)) / (LEVELS + 4);\r\n  }\r\n\r\n  return mean;\r\n}\r\n\r\nclass WaterdropMesh {\r\n  dropsMesh;\r\n  outlineMesh;\r\n\r\n  added = false;\r\n\r\n  // caching vertex ownership so we can update existing vertices instead of creating new one each time\r\n  idToVertInfo = {};\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.dropsMesh) {\r\n      this.initializeMeshes(waterdrops);\r\n    } else {\r\n      this.updateMeshes(waterdrops);\r\n    }\r\n  }\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.dropsMesh);\r\n      scene.add(this.outlineMesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.dropsMesh);\r\n      scene.remove(this.outlineMesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  initializeMeshes(waterdrops) {\r\n    const dropsGeometry = new MeshGeometry();\r\n    const outlinePoints = [];\r\n\r\n    const outlineMeshCoords = waterdropDeltaOutline(0, 1, RAD_PX * 0.975);\r\n\r\n    let outlineVertexIdx = 0,\r\n      shapeVertexIdx = 0;\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, maxLev } = waterdrops.nodes[i];\r\n\r\n      let outlineVerticesAdded = outlineMeshCoords.length,\r\n        shapeVerticesAdded = 0;\r\n\r\n      for (let k = levs.length - 1; k >= 0; k--) {\r\n        const l1 = k !== levs.length - 1 ? levs[k + 1] : 0;\r\n        const l2 = levs[k];\r\n\r\n        const meshCoords = waterdropDelta(l1 / maxLev, l2 / maxLev, RAD_PX);\r\n        const color = new THREE.Color(interpolateWatercolorBlue(k / LEVELS));\r\n\r\n        dropsGeometry.addMeshCoords(\r\n          meshCoords,\r\n          { x: x, y: -y },\r\n          color,\r\n          (i % 5) / 50 + 0.02\r\n        );\r\n\r\n        shapeVerticesAdded += meshCoords.length * 3;\r\n      }\r\n\r\n      outlinePoints.push(\r\n        ...outlineMeshCoords.map(\r\n          ([dx, dy]) => new THREE.Vector3(x + dx, -y - dy, (i % 5) / 50 + 0.01)\r\n        )\r\n      );\r\n\r\n      this.idToVertInfo[id] = {\r\n        shapeVertRange: [shapeVertexIdx, shapeVerticesAdded],\r\n        outlineVertRange: [outlineVertexIdx, outlineVerticesAdded],\r\n        centroid: [x, y],\r\n      };\r\n\r\n      shapeVertexIdx += shapeVerticesAdded;\r\n      outlineVertexIdx += outlineVerticesAdded;\r\n    }\r\n\r\n    this.dropsMesh = new THREE.Mesh(\r\n      dropsGeometry.threeGeom,\r\n      new THREE.MeshBasicMaterial({\r\n        vertexColors: THREE.VertexColors,\r\n      })\r\n    );\r\n\r\n    this.outlineMesh = new THREE.LineSegments(\r\n      new THREE.BufferGeometry().setFromPoints(outlinePoints),\r\n      new THREE.LineBasicMaterial({\r\n        color: 0xcccccc,\r\n        transparent: true,\r\n        opacity: 0,\r\n      })\r\n    );\r\n  }\r\n\r\n  updateOutlineVisibility(opac) {\r\n    if (!this.outlineMesh) return;\r\n    this.outlineMesh.material.opacity = opac;\r\n    this.outlineMesh.material.needsUpdate = true;\r\n  }\r\n\r\n  updateMeshes(waterdrops) {\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: newX, globalY: newY } = waterdrops.nodes[i];\r\n\r\n      const [sviStart, sviLen] = this.idToVertInfo[id].shapeVertRange;\r\n      const [oviStart, oviLen] = this.idToVertInfo[id].outlineVertRange;\r\n      const [oldX, oldY] = this.idToVertInfo[id].centroid;\r\n\r\n      const dx = newX - oldX,\r\n        dy = newY - oldY;\r\n\r\n      const shapeGeom = this.dropsMesh.geometry;\r\n      const outlineGeom = this.outlineMesh.geometry;\r\n\r\n      for (let i = 0; i < sviLen; i++) {\r\n        const x = shapeGeom.vertices[sviStart + i].x,\r\n          y = shapeGeom.vertices[sviStart + i].y;\r\n        shapeGeom.vertices[sviStart + i].setX(x + dx);\r\n        shapeGeom.vertices[sviStart + i].setY(y - dy);\r\n      }\r\n\r\n      this.idToVertInfo[id].centroid = [newX, newY];\r\n\r\n      for (let i = 0; i < oviLen; i++) {\r\n        const x = outlineGeom.attributes.position.array[(oviStart + i) * 3 + 0],\r\n          y = outlineGeom.attributes.position.array[(oviStart + i) * 3 + 1];\r\n        outlineGeom.attributes.position.array[(oviStart + i) * 3 + 0] = x + dx;\r\n        outlineGeom.attributes.position.array[(oviStart + i) * 3 + 1] = y - dy;\r\n      }\r\n\r\n      shapeGeom.verticesNeedUpdate = true;\r\n      outlineGeom.attributes.position.needsUpdate = true;\r\n    }\r\n  }\r\n}\r\n\r\nclass WaterdropSimplifiedMesh {\r\n  mesh;\r\n  added = false;\r\n\r\n  vertToId = {};\r\n  idToVert = {};\r\n\r\n  draw(scene) {\r\n    if (!this.added) {\r\n      scene.add(this.mesh);\r\n      this.added = true;\r\n    }\r\n  }\r\n\r\n  remove(scene) {\r\n    if (this.added) {\r\n      scene.remove(this.mesh);\r\n      this.added = false;\r\n    }\r\n  }\r\n\r\n  createMesh(waterdrops) {\r\n    if (!this.mesh) {\r\n      this.initializeMesh(waterdrops);\r\n    }\r\n\r\n    this.updateMesh(waterdrops);\r\n\r\n    return this.mesh;\r\n  }\r\n\r\n  initializeMesh(waterdrops) {\r\n    const pointsGeometry = new THREE.Geometry();\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: x, globalY: y, levs, domLev } = waterdrops.nodes[i];\r\n\r\n      const color = domLev > 0 ? interpolateWatercolorBlue(domLev) : \"white\";\r\n\r\n      pointsGeometry.vertices.push(new THREE.Vector3(x, -y, 0));\r\n      pointsGeometry.colors.push(new THREE.Color(color));\r\n\r\n      this.vertToId[i] = id;\r\n      this.idToVert[id] = i;\r\n    }\r\n\r\n    const pointsMaterial = new THREE.PointsMaterial({\r\n      size: RAD_PX * 2,\r\n      sizeAttenuation: true,\r\n      vertexColors: THREE.VertexColors,\r\n      map: new THREE.TextureLoader().load(\"drop.png\"),\r\n      transparent: true,\r\n    });\r\n\r\n    this.mesh = new THREE.Points(pointsGeometry, pointsMaterial);\r\n  }\r\n\r\n  updateMesh(waterdrops) {\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id, globalX: newX, globalY: newY } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n\r\n      this.mesh.geometry.vertices[idx].setX(newX);\r\n      this.mesh.geometry.vertices[idx].setY(-newY);\r\n    }\r\n\r\n    this.mesh.geometry.verticesNeedUpdate = true;\r\n  }\r\n\r\n  updatePoints(waterdrops, translations, dt) {\r\n    const verts = this.mesh.geometry.vertices;\r\n\r\n    for (let i = 0; i < waterdrops.nodes.length; i++) {\r\n      const { id } = waterdrops.nodes[i];\r\n      const idx = this.idToVert[id];\r\n\r\n      const [dx, dy] = translations[id];\r\n\r\n      const x = verts[idx].x;\r\n      const y = verts[idx].y;\r\n\r\n      verts[idx].setX(x + dt * dx);\r\n      verts[idx].setY(y - dt * dy);\r\n    }\r\n\r\n    this.mesh.geometry.verticesNeedUpdate = true;\r\n  }\r\n\r\n  intersectObject(camera, x, y) {\r\n    const intersects = camera.intersectObject(x, y, this.mesh);\r\n\r\n    if (intersects[0]) {\r\n      const intersect = sortBy(intersects, \"distanceToRay\")[0];\r\n      return this.vertToId[intersect.index];\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"utils/common\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"data/objectivesData\";\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n"],"names":["LEVELS","RAD_PX","MIN_LEV_VAL","SCEN_DIVISOR","SMALL_DROP_PAD_FACTOR","LARGE_DROP_PAD_FACTOR","ANIM_TIME","HOVER_AREA_FACTOR","Math","SQRT1_2","FILTERED_KEYS","scenarioIDs","filter","_","i","flattenedData","dataGroupings","preprocessData","waterdrops1","initWaterdrops","waterdrops2","LargeDropletV2App","width","window","innerWidth","height","innerHeight","current","scene","useRef","getScene","grouping","setGrouping","groupingRef","useStateRef","tooltip","setTooltip","useState","waterdrops","clockRef","dropsMeshRef","WaterdropMesh","pointsMeshRef","WaterdropSimplifiedMesh","reverseTranslation","setReverseTranslation","reverseTranslationRef","useEffect","d3","attr","append","on","e","x","y","camera","Camera","fov","near","far","domElement","node","zoomFn","select","transform","updateOutlineVisibility","domain","range","clamp","k","view","mouseToThree","intersectID","intersectObject","waterdropIntersected","find","n","id","secondaryText","scenario","objective","renderer","THREE","antialias","setSize","document","querySelector","appendChild","setAnimationLoop","render","dt","getDelta","getElapsedTime","updatePoints","initTHREE","selectAll","prevWaterdrops","calcTranslations","draw","remove","createMesh","updateLargeDropSVG","d","text","key","primaryText","_jsxs","className","children","_jsx","InputArea","onChange","target","value","style","getTooltipStyle","_ref","type","name","checked","htmlFor","means","idx","obj","objectiveIDs","scen","push","deliveries","objectivesData","SCENARIO_KEY_STRING","DELIV_KEY_STRING","orderedDataGroupings","criteria","Object","keys","asdfasdf","ids","sortedObjScens","sort","a","b","sorted","mean","map","flat","length","IDtoRank","j","rank","groupKeys","memberKeys","amtPerGroup","largeDropRad","max","sqrt","PI","smallDropRad","largeNodesPos","mapBy","placeDropsUsingPhysics","p","r","_ref2","smallNodesPhys","s","smallNodesPos","_ref3","nodes","groupNodes","nodeIDtoIdx","createInterps","MAX_DELIVS","levs","ticksExact","w","groupID","memberID","groupRank","memberRank","maxLev","domLev","calcDomLev","tilt","random","dur","group","globalX","globalY","groupKey","groups","waterdropsTo","waterdropsFrom","translations","nodeTo","endX","endY","nodeFromIdx","nodeFrom","startX","startY","background","display","left","top","container","onHover","onUnhover","data","join","enter","call","DROPLET_SHAPE","_ref4","concat","this","constructor","added","idToVertInfo","dropsMesh","updateMeshes","initializeMeshes","add","outlineMesh","dropsGeometry","MeshGeometry","outlinePoints","outlineMeshCoords","waterdropDeltaOutline","outlineVertexIdx","shapeVertexIdx","outlineVerticesAdded","shapeVerticesAdded","l1","l2","meshCoords","waterdropDelta","color","interpolateWatercolorBlue","addMeshCoords","_ref5","dx","dy","shapeVertRange","outlineVertRange","centroid","threeGeom","vertexColors","setFromPoints","transparent","opacity","opac","material","needsUpdate","newX","newY","sviStart","sviLen","oviStart","oviLen","oldX","oldY","shapeGeom","geometry","outlineGeom","vertices","setX","setY","attributes","position","array","verticesNeedUpdate","vertToId","idToVert","mesh","initializeMesh","updateMesh","pointsGeometry","colors","pointsMaterial","size","sizeAttenuation","load","verts","intersects","intersect","sortBy","index","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","ref","prev","DELIV_KEY_STRING_UNORD","async","objs","fetch","json","unord","v","min","Array","from","console","log","values","fn","newObjs","groupBy","WATERDROP_ICON","context","moveTo","lineTo","arc","SQRT2","closePath","percentToRatioFilled","CIRC_RAD","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","sin","yToSpriteY","spriteYToY","sy","yStart","yEnd","abs","rad","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","reverse","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","AREA","floor","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","centre","isStatic","cage","setParts","setCentre","scale","world","FPS","SECS","update","retVal","useStickyScale","defaultVal","val","setVal","useMemo","useCallback","obj_name","scen_name","maxDelivs","delivs","criteriaSort","get","object","path","defaultValue","_object","split","part","pick","va","vb","toRadians","raycaster","set","zoom","scaleExtent","getScaleFromZ","d3ZoomHandler","curTransform","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","mouseX","mouseY","setFromCamera","indices","c","face","faces","state","_setState","stateRef","setState"],"sourceRoot":""}