{"version":3,"file":"static/js/864.d2a82eda.chunk.js","mappings":"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","sources":["ScenarioDropletsApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport { MAX_DELIVS, objectivesData } from \"./data/objectivesData\";\r\nimport {\r\n  DROPLET_SHAPE,\r\n  createInterps,\r\n  criteriaSort,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\n\r\nconst LEVELS = 5;\r\nconst DEFAULT_OBJECTIVE_IDX = 2;\r\nconst RAD_PX = 8;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst DROPLET_PAD_FACTOR = 2.5;\r\n\r\nexport default function ScenarioDropletsApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n  const [normalize, setNormalize] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () =>\r\n      criteriaSort(\r\n        \"median\",\r\n        objectivesData,\r\n        objectiveIDs[curObjectiveIdx]\r\n      ).reverse(),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      orderedScenIDs.map((s) => {\r\n        const i = createInterps(\r\n          objectiveIDs[curObjectiveIdx],\r\n          s,\r\n          objectivesData,\r\n          MAX_DELIVS\r\n        );\r\n        return ticksExact(0, 1, LEVELS + 1).map((d, j) => i(d));\r\n      }),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const zoomRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    zoomRef.current = d3\r\n      .zoom()\r\n      .scaleExtent([1, 10])\r\n      .translateExtent([\r\n        [-width / 2, -height / 2],\r\n        [width * 1.5, height * 1.5],\r\n      ])\r\n      .on(\"zoom\", function (e) {\r\n        bucketSvgSelector.current\r\n          .select(\".svg-trans\")\r\n          .attr(\"transform\", e.transform);\r\n\r\n        bucketSvgSelector.current\r\n          .selectAll(\".text-scale\")\r\n          .attr(\"transform\", `scale(${1 / e.transform.k})`);\r\n      })\r\n      .on(\r\n        \"start\",\r\n        (e) =>\r\n          (e.sourceEvent || {}).type !== \"wheel\" &&\r\n          bucketSvgSelector.current.style(\"cursor\", \"grabbing\")\r\n      )\r\n      .on(\"end\", () => bucketSvgSelector.current.style(\"cursor\", \"grab\"));\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .style(\"cursor\", \"grab\")\r\n      .call((s) => s.append(\"g\").attr(\"class\", \"svg-trans\"))\r\n      .call(zoomRef.current);\r\n\r\n    if (\r\n      searchParams.get(\"obj\") &&\r\n      objectiveIDs.includes(searchParams.get(\"obj\"))\r\n    ) {\r\n      setCurObjectiveIdx(objectiveIDs.indexOf(searchParams.get(\"obj\")));\r\n      setNormalize(searchParams.get(\"norm\") == \"true\");\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    bucketSvgSelector.current.call(zoomRef.current.transform, d3.zoomIdentity);\r\n\r\n    const nodes_pos = placeDropsUsingPhysics(\r\n      width / 2,\r\n      (height / 2) * 1.1,\r\n      waterLevels.map((levs, idx) => ({\r\n        r:\r\n          (normalize ? 1 : Math.max(levs[0], MIN_LEV_VAL)) *\r\n          RAD_PX *\r\n          DROPLET_PAD_FACTOR,\r\n        id: idx,\r\n      }))\r\n    );\r\n\r\n    const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n      levs: waterLevels[idx].map(\r\n        (w, i) => Math.max(w, i == 0 ? MIN_LEV_VAL : 0) * RAD_PX\r\n      ),\r\n      maxLev:\r\n        (normalize ? 1 : Math.max(waterLevels[idx][0], MIN_LEV_VAL)) * RAD_PX,\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      startX: x,\r\n      startY: y - RAD_PX * 4 * Math.random(),\r\n      endX: x,\r\n      endY: y,\r\n      scen: orderedScenIDs[idx],\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".smallDrop\")\r\n      .data(nodes, (_, i) => i)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"smallDrop\")\r\n          .each(function ({ levs }, i) {\r\n            d3.select(this.parentNode)\r\n              .append(\"g\")\r\n              .attr(\"id\", `drop-${i}`)\r\n              .append(\"g\")\r\n              .attr(\"class\", \"text-scale\")\r\n              .append(\"text\")\r\n              .style(\"font-size\", 16)\r\n              .attr(\"text-anchor\", \"middle\");\r\n\r\n            const s = d3.select(this);\r\n            s.append(\"rect\")\r\n              .attr(\"class\", \"bbox\")\r\n              .style(\"visibility\", \"hidden\");\r\n\r\n            s.on(\"mouseover\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 0.5);\r\n              s.style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 1);\r\n            }).on(\"mouseout\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 0);\r\n            });\r\n\r\n            const stops = d3\r\n              .select(this)\r\n              .append(\"defs\")\r\n              .append(\"linearGradient\")\r\n              .attr(\"id\", `drop-fill-${i}`)\r\n              .attr(\"x1\", \"0%\")\r\n              .attr(\"x2\", \"0%\")\r\n              .attr(\"y1\", \"0%\")\r\n              .attr(\"y2\", \"100%\");\r\n            stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n            stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n            levs.forEach((_, i) => {\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n            });\r\n\r\n            d3.select(this)\r\n              .append(\"path\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"class\", \"outline\")\r\n              .attr(\"fill\", \"none\")\r\n              .attr(\"stroke\", \"lightgray\")\r\n              .attr(\"stroke-width\", 0.05);\r\n\r\n            d3.select(this)\r\n              .append(\"path\")\r\n              .attr(\"class\", \"fill\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"fill\", `url(#drop-fill-${i})`);\r\n          });\r\n      })\r\n      .attr(\r\n        \"transform\",\r\n        ({ startX, startY, tilt }) =>\r\n          `translate(${startX}, ${startY}) rotate(${tilt})`\r\n      )\r\n      .style(\"opacity\", 0)\r\n      .each(function ({ levs, maxLev, scen }, i) {\r\n        const s = d3.select(this);\r\n\r\n        d3.select(`#drop-${i}`).style(\"opacity\", 0).select(\"text\").text(scen);\r\n\r\n        s.select(\".outline\").attr(\"transform\", `scale(${maxLev * 0.95})`);\r\n        s.select(\".fill\").attr(\"transform\", `scale(${maxLev})`);\r\n\r\n        if (normalize) s.select(\".outline\").style(\"display\", \"initial\");\r\n        else s.select(\".outline\").style(\"display\", \"none\");\r\n\r\n        s.selectAll(\"stop\").each(function (_, i) {\r\n          let actI = Math.floor(i / 2);\r\n          const isEnd = i % 2;\r\n\r\n          if (isEnd === 0) actI -= 1;\r\n\r\n          if (actI === -1) {\r\n            d3.select(this).attr(\"offset\", `${0}%`);\r\n          } else {\r\n            d3.select(this).attr(\r\n              \"offset\",\r\n              `${(1 - levs[actI] / maxLev) * 100}%`\r\n            );\r\n          }\r\n        });\r\n\r\n        s.transition()\r\n          .duration(({ dur }) => dur)\r\n          .ease(d3.easeLinear)\r\n          .attr(\r\n            \"transform\",\r\n            ({ endX, endY, tilt }) =>\r\n              `translate(${endX}, ${endY}) rotate(${tilt})`\r\n          )\r\n          .style(\"opacity\", 1)\r\n          .on(\"end\", () => {\r\n            const d = s.select(\".fill\");\r\n\r\n            s.select(\".bbox\")\r\n              .attr(\"x\", d.node().getBBox().x)\r\n              .attr(\"y\", d.node().getBBox().y)\r\n              .attr(\"width\", d.node().getBBox().width)\r\n              .attr(\"height\", d.node().getBBox().height);\r\n\r\n            bucketSvgSelector.current\r\n              .select(`#drop-${i}`)\r\n              .attr(\r\n                \"transform\",\r\n                `translate(${\r\n                  d.node().getBoundingClientRect().x +\r\n                  d.node().getBoundingClientRect().width / 2\r\n                }, ${d.node().getBoundingClientRect().y})`\r\n              );\r\n          });\r\n      });\r\n  }, [waterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div className=\"bubbles-input-area\">\r\n        <select\r\n          value={curObjectiveIdx}\r\n          onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n        >\r\n          {objectiveIDs.map((objectiveID, i) => (\r\n            <option name={i} value={i} key={i}>\r\n              {objectiveID}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"norm\"\r\n          checked={normalize}\r\n          onChange={() => void setNormalize((e) => !e)}\r\n        />\r\n        <label htmlFor=\"norm\">normalize</label>\r\n      </div>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return new THREE.Vector3(\r\n    (mouseX / width) * 2 - 1,\r\n    -(mouseY / height) * 2 + 1,\r\n    1\r\n  );\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n"],"names":["LEVELS","DEFAULT_OBJECTIVE_IDX","RAD_PX","MIN_LEV_VAL","DROPLET_PAD_FACTOR","ScenarioDropletsApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","curObjectiveIdx","setCurObjectiveIdx","useState","normalize","setNormalize","searchParams","useSearchParams","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","reverse","waterLevels","map","s","i","createInterps","MAX_DELIVS","ticksExact","d","j","zoomRef","useLayoutEffect","width","window","innerWidth","height","innerHeight","d3","scaleExtent","translateExtent","on","e","select","attr","transform","selectAll","concat","k","sourceEvent","type","style","call","append","get","includes","indexOf","nodes","placeDropsUsingPhysics","levs","idx","r","Math","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","endX","endY","scen","data","_","join","enter","each","_ref3","this","parentNode","stops","forEach","interpolateWatercolorBlue","DROPLET_SHAPE","_ref4","_ref5","text","actI","floor","transition","duration","_ref6","ease","_ref7","node","getBBox","getBoundingClientRect","_jsxs","className","children","_jsx","value","onChange","parseInt","target","objectiveID","name","checked","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","length","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","SCENARIO_KEY_STRING","DELIV_KEY_STRING","DELIV_KEY_STRING_UNORD","async","objs","fetch","json","obj","unord","v","min","Array","from","sort","a","b","mapBy","console","log","scenarioIDs","values","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","PI","closePath","CIRC_RAD","SQRT1_2","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","sin","yToSpriteY","spriteYToY","sy","waterdropDeltaOutline","yStart","yEnd","abs","rad","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","push","waterdropDelta","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","AREA","sqrt","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","useStickyScale","defaultVal","val","setVal","useCallback","obj_name","scen_name","maxDelivs","delivs","domain","range","clamp","criteria","objective","toRadians","Camera","constructor","fov","near","far","domElement","zoomFn","camera","THREE","set","zoom","getScaleFromZ","d3ZoomHandler","curTransform","view","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","MeshGeometry","threeGeom","addMeshCoords","meshCoords","color","indices","c","face","vertexColors","faces","useStateRef","state","_setState","stateRef","useEffect","setState"],"sourceRoot":""}