{"version":3,"file":"static/js/262.1da66775.chunk.js","mappings":"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","sources":["bucket-lib/BucketGlyph.jsx","bucket-lib/quantile-histogram.js","bucket-lib/utils.js","data/objectivesData.jsx","utils/common.js","utils/explanation-anim/WaterdropGlyph.jsx","utils/explanation-anim/render-utils.jsx","../node_modules/react-scrollama/src/utils.js","../node_modules/react-scrollama/src/DebugOffset.js","../node_modules/react-scrollama/src/Scrollama.js","../node_modules/react-scrollama/node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","../node_modules/react-scrollama/src/Step.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport { useId, useLayoutEffect, useMemo, useRef } from \"react\";\r\nimport {\r\n  bucketPath,\r\n  interpolateWatercolorBlue,\r\n  ticksExact,\r\n  usePrevious,\r\n} from \"./utils\";\r\n\r\nconst DEGREE_SWAY = 40;\r\nconst LEVELS = 10;\r\nconst LINE_WIDTH = 3;\r\n\r\nexport default function BucketGlyph({\r\n  levelInterp,\r\n  colorInterp = interpolateWatercolorBlue,\r\n  width = 200,\r\n  height = 400,\r\n  resolution = LEVELS,\r\n}) {\r\n  const id = useId();\r\n  const svgSelector = useRef();\r\n\r\n  const liquidLevels = useMemo(\r\n    () => ticksExact(0, 1, resolution + 1).map((d) => levelInterp(d)),\r\n    [levelInterp, resolution]\r\n  );\r\n\r\n  const prevLiquidLevels = usePrevious(liquidLevels);\r\n\r\n  const innerWidth = width - LINE_WIDTH * 2;\r\n  const innerHeight = height - LINE_WIDTH;\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-container\")\r\n      .attr(\"transform\", `translate(${LINE_WIDTH}, ${LINE_WIDTH / 2})`);\r\n\r\n    svgContainer\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask-\" + id)\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-mask-path\");\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"clip-path\", `url(#bucket-mask-${id})`);\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-outline\")\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n  }, [id]); // id shouldn't change, basically empty dependency array\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .select(\".svg-container\");\r\n\r\n    svgContainer\r\n      .select(\".bucket-mask-path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight));\r\n\r\n    svgContainer\r\n      .select(\".bucket-outline\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight).split(\"z\")[0]);\r\n  }, [width, height, innerWidth, innerHeight]);\r\n\r\n  useLayoutEffect(() => {\r\n    const liquids = svgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\".bucketBox\")\r\n      .data(liquidLevels)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bucketBox\")\r\n      .attr(\"width\", innerWidth * 2)\r\n      .attr(\"height\", innerHeight * 2)\r\n      .attr(\"x\", -innerWidth / 2)\r\n      .attr(\"fill\", (_, i) => colorInterp(i / resolution));\r\n\r\n    liquids\r\n      .transition(\"liquidLevel\")\r\n      .ease(d3.easeElasticOut.period(0.6))\r\n      .delay((_, i) => i * (100 / resolution))\r\n      .duration(1000)\r\n      .attr(\"y\", (d) => innerHeight - d * innerHeight);\r\n\r\n    liquids\r\n      .transition(\"liquidSway\")\r\n      .duration(2000)\r\n      .delay((_, i) => i * 10)\r\n      .ease(d3.easeQuad)\r\n      .attrTween(\"transform\", function (d, i) {\r\n        const diff = prevLiquidLevels ? Math.abs(prevLiquidLevels[i] - d) : 0;\r\n        return (t) =>\r\n          `rotate(${\r\n            Math.sin(\r\n              Math.min((Math.PI * 4 * t) / (0.5 * diff + 0.5), Math.PI * 4)\r\n            ) *\r\n            diff *\r\n            DEGREE_SWAY *\r\n            (1 - t)\r\n          }, ${innerWidth / 2}, ${0})`;\r\n      });\r\n  }, [\r\n    liquidLevels,\r\n    prevLiquidLevels,\r\n    width,\r\n    height,\r\n    innerWidth,\r\n    innerHeight,\r\n    resolution,\r\n    colorInterp,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"bucket-wrapper\">\r\n      <svg ref={(e) => void (svgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { quantileBins, ticksExact } from \"./utils\";\r\n\r\nexport function getQuantileBins(data, domain, unitsPerQuantile, width, height) {\r\n  const numQuantiles = data.length / unitsPerQuantile;\r\n  let histBins = d3\r\n    .histogram()\r\n    .value((d) => d)\r\n    .domain(domain)\r\n    .thresholds(\r\n      ticksExact(...domain, Math.ceil(width / (height / numQuantiles)))\r\n    )(data);\r\n\r\n  let binnedQuantiles = quantileBins(histBins, unitsPerQuantile, numQuantiles);\r\n\r\n  let quantiles = [];\r\n\r\n  for (let b = 0; b < binnedQuantiles.length; b++) {\r\n    for (let y = 0; y < binnedQuantiles[b]; y++) {\r\n      quantiles.push([\r\n        (histBins[b].x1 + histBins[b].x0) / 2,\r\n        ((y + 0.5) / numQuantiles) * data.length,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  return quantiles;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"utils/common\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"data/objectivesData\";\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useId, useLayoutEffect, useMemo, useRef } from \"react\";\r\nimport {\r\n  interpolateWatercolorBlue,\r\n  ticksExact,\r\n  usePrevious,\r\n} from \"bucket-lib/utils\";\r\nimport { waterdropDeltaOutline } from \"./render-utils\";\r\nconst CIRC_RAD = Math.SQRT1_2;\r\n\r\nconst DROP_RAD = 1;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\n\r\nconst DEGREE_SWAY = 40;\r\nconst LEVELS = 10;\r\nconst LINE_WIDTH = 3;\r\n\r\nfunction dropPath(height, [x, y]) {\r\n  const points = waterdropDeltaOutline(0, 1, height, 20);\r\n\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d[0] + x;\r\n    })\r\n    .y(function (d) {\r\n      return d[1] + y;\r\n    });\r\n  return lineFunc(points) + \"z\";\r\n}\r\n\r\nexport default function WaterdropGlyph({\r\n  levelInterp,\r\n  colorInterp = interpolateWatercolorBlue,\r\n  width = 200,\r\n  height = 400,\r\n  resolution = LEVELS,\r\n}) {\r\n  const id = useId();\r\n  const svgSelector = useRef();\r\n\r\n  const liquidLevels = useMemo(\r\n    () => ticksExact(0, 1, resolution + 1).map((d) => levelInterp(d)),\r\n    [levelInterp, resolution]\r\n  );\r\n\r\n  const prevLiquidLevels = usePrevious(liquidLevels);\r\n\r\n  const innerWidth = width - LINE_WIDTH * 2;\r\n  const innerHeight = height - LINE_WIDTH;\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-container\")\r\n      .attr(\"transform\", `translate(${LINE_WIDTH}, ${LINE_WIDTH / 2})`);\r\n\r\n    svgContainer\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask-\" + id)\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-mask-path\");\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"clip-path\", `url(#bucket-mask-${id})`);\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-outline\")\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n  }, [id]); // id shouldn't change, basically empty dependency array\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .select(\".svg-container\");\r\n\r\n    const dropD = dropPath((innerHeight * (DROP_RAD * 2)) / DROP_HEIGHT, [\r\n      width / 2,\r\n      (height * DROP_RAD) / DROP_HEIGHT,\r\n    ]);\r\n\r\n    svgContainer.select(\".bucket-mask-path\").attr(\"d\", dropD);\r\n    svgContainer.select(\".bucket-outline\").attr(\"d\", dropD);\r\n  }, [width, height, innerWidth, innerHeight]);\r\n\r\n  useLayoutEffect(() => {\r\n    const liquids = svgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\".bucketBox\")\r\n      .data(liquidLevels)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bucketBox\")\r\n      .attr(\"width\", innerWidth * 2)\r\n      .attr(\"height\", innerHeight * 2)\r\n      .attr(\"x\", -innerWidth / 2)\r\n      .attr(\"fill\", (_, i) => colorInterp(i / resolution));\r\n\r\n    liquids\r\n      .transition(\"liquidLevel\")\r\n      .ease(d3.easeElasticOut.period(0.6))\r\n      .delay((_, i) => i * (100 / resolution))\r\n      .duration(1000)\r\n      .attr(\"y\", (d) => innerHeight - d * innerHeight);\r\n\r\n    liquids\r\n      .transition(\"liquidSway\")\r\n      .duration(2000)\r\n      .delay((_, i) => i * 10)\r\n      .ease(d3.easeQuad)\r\n      .attrTween(\"transform\", function (d, i) {\r\n        const diff = prevLiquidLevels ? Math.abs(prevLiquidLevels[i] - d) : 0;\r\n        return (t) =>\r\n          `rotate(${\r\n            Math.sin(\r\n              Math.min((Math.PI * 4 * t) / (0.5 * diff + 0.5), Math.PI * 4)\r\n            ) *\r\n            diff *\r\n            DEGREE_SWAY *\r\n            (1 - t)\r\n          }, ${innerWidth / 2}, ${0})`;\r\n      });\r\n  }, [\r\n    liquidLevels,\r\n    prevLiquidLevels,\r\n    width,\r\n    height,\r\n    innerWidth,\r\n    innerHeight,\r\n    resolution,\r\n    colorInterp,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"waterdrop-wrapper\">\r\n      <svg ref={(e) => void (svgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = (CIRC_RAD + DROP_RAD / 2) / DROP_HEIGHT;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2, subdivs = 10) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 1 / subdivs;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function showElems(elemStr, container, displayVal) {\r\n  (container || d3).selectAll(elemStr).style(\"display\", displayVal || \"block\");\r\n}\r\n\r\nexport function hideElems(elemStr, container) {\r\n  (container || d3).selectAll(elemStr).style(\"display\", \"none\");\r\n}\r\n\r\nexport function removeElems(elemStr, container) {\r\n  (container || d3).selectAll(elemStr).remove();\r\n}\r\n","export const isOffsetInPixels = offset => typeof offset === 'string' && offset.includes('px');\n","import React from 'react';\nimport { isOffsetInPixels } from './utils';\n\nconst markerStyles = {\n  position: 'fixed',\n  left: 0,\n  width: '100%',\n  height: 0,\n  borderTop: '2px dashed black',\n  zIndex: 9999,\n};\nconst offsetTextStyles = {\n  fontSize: '12px',\n  fontFamily: 'monospace',\n  margin: 0,\n  padding: 6,\n};\n\nconst useTop = offset => {\n  const offsetInPixels = isOffsetInPixels(offset);\n  if(offsetInPixels) {\n    return offset;\n  } else {\n    return `${offset * 100}%`\n  }\n}\n\nconst DebugOffset = ({ offset }) => {\n  const top = useTop(offset);\n  return (\n    <div style={{ ...markerStyles, top, }}>\n      <p style={offsetTextStyles}>trigger: {offset}</p>\n    </div>\n  );\n}\n\nexport default DebugOffset;\n","import React, { useMemo, useState } from 'react';\nimport DebugOffset from './DebugOffset';\nimport { isOffsetInPixels } from './utils';\n\nconst createThreshold = (theta, height) => {\n  const count = Math.ceil(height / theta);\n  const t = [];\n  const ratio = 1 / count;\n  for (let i = 0; i <= count; i += 1) {\n    t.push(i * ratio);\n  }\n  return t;\n};\n\nconst Scrollama = props => {\n  const {\n    debug,\n    children,\n    offset = 0.3,\n    onStepEnter = () => {},\n    onStepExit = () => {},\n    onStepProgress = null,\n    threshold = 4,\n  } = props;\n  const isOffsetDefinedInPixels = isOffsetInPixels(offset)\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [windowInnerHeight, setWindowInnerHeight] = useState(null);\n\n  const handleSetLastScrollTop = (scrollTop) => {\n    setLastScrollTop(scrollTop);\n  };\n\n  const handleWindowResize = (e) => {\n    setWindowInnerHeight(window.innerHeight)\n  }\n\n  React.useEffect(() => {\n    if(isOffsetDefinedInPixels) {\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }\n  }, []);\n\n  const isBrowser = typeof window !== \"undefined\";\n  const innerHeight = isBrowser ? (windowInnerHeight || window.innerHeight) : 0;\n\n  const offsetValue = isOffsetDefinedInPixels\n    ? (+offset.replace('px', '') / innerHeight)\n    : offset;\n\n  const progressThreshold = useMemo(() => createThreshold(threshold, innerHeight), [innerHeight]);\n\n  return (\n    <React.Fragment>\n      {debug && <DebugOffset offset={offset} />}\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          scrollamaId: `react-scrollama-${i}`,\n          offset: offsetValue,\n          onStepEnter,\n          onStepExit,\n          onStepProgress,\n          lastScrollTop,\n          handleSetLastScrollTop,\n          progressThreshold,\n          innerHeight\n        });\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default Scrollama;\n","import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  const unobserve = React.useRef();\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance inside the `useCallback`.\n\n  callback.current = onChange;\n  const setRef = React.useCallback(node => {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, (inView, entry) => {\n        setState({\n          inView,\n          entry\n        });\n        if (callback.current) callback.current(inView, entry);\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root,\n        rootMargin,\n        threshold,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  React.useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import React, { useState, useMemo, useCallback, useRef } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nconst useRootMargin = offset => {\n  return `-${offset * 100}% 0px -${100 - offset * 100}% 0px`;\n}\n\nconst useProgressRootMargin = (direction, offset, node, innerHeight) => {\n  if (!node.current) return '0px';\n  const offsetHeight = (node.current.offsetHeight / innerHeight);\n  if (direction === 'down') return `${(offsetHeight - offset) * 100}% 0px ${(offset * 100) - 100}% 0px`;\n  return `-${offset * 100}% 0px ${(offsetHeight * 100) - (100 - (offset * 100))}% 0px`;\n}\n\nconst Step = props => {\n  const {\n    children,\n    data,\n    handleSetLastScrollTop,\n    lastScrollTop,\n    onStepEnter = () => {},\n    onStepExit = () => {},\n    onStepProgress = null,\n    offset,\n    scrollamaId,\n    progressThreshold,\n    innerHeight,\n  } = props;\n\n  const isBrowser = typeof window !== \"undefined\";\n  const scrollTop = isBrowser ? document.documentElement.scrollTop : 0;\n  const direction = lastScrollTop < scrollTop ? 'down' : 'up';\n\n  const rootMargin = useRootMargin(offset);\n\n  const ref = useRef(null);\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  const {ref: inViewRef, entry} = useInView({\n    rootMargin,\n    threshold: 0,\n  });\n\n  const progressRootMargin = useMemo(\n    () => useProgressRootMargin(direction, offset, ref, innerHeight),\n    [direction, offset, ref, innerHeight]\n  );\n\n  const {ref: scrollProgressRef, entry: scrollProgressEntry} = useInView({\n    rootMargin: progressRootMargin,\n    threshold: progressThreshold,\n  });\n\n  const setRefs = useCallback(\n    (node) => {\n      ref.current = node;\n      inViewRef(node);\n      scrollProgressRef(node)\n    },\n    [inViewRef, scrollProgressRef],\n  );\n\n\n  React.useEffect(() => {\n    if (isIntersecting) {\n      const { height, top } = scrollProgressEntry.target.getBoundingClientRect();\n      const progress = Math.min(1, Math.max(0, (window.innerHeight * offset - top) / height));\n      onStepProgress &&\n      onStepProgress({\n        progress,\n        scrollamaId,\n        data,\n        element: scrollProgressEntry.target,\n        entry: scrollProgressEntry,\n        direction,\n      });\n    }\n  }, [scrollProgressEntry]);\n\n  React.useEffect(() => {\n    if (entry && !entry.isIntersecting && isIntersecting) {\n      onStepExit({ element: entry.target, scrollamaId, data, entry, direction });\n      setIsIntersecting(false);\n      handleSetLastScrollTop(scrollTop)\n    } else if (entry && entry.isIntersecting && !isIntersecting) {\n      setIsIntersecting(true);\n      onStepEnter({ element: entry.target, scrollamaId, data, entry, direction});\n      handleSetLastScrollTop(scrollTop)\n    }\n  }, [entry]);\n\n  return React.cloneElement(React.Children.only(children), {\n    'data-react-scrollama-id': scrollamaId,\n    ref: setRefs,\n    entry,\n  });\n};\n\nexport default Step;\n"],"names":["DEGREE_SWAY","LEVELS","LINE_WIDTH","BucketGlyph","_ref","levelInterp","colorInterp","interpolateWatercolorBlue","width","height","resolution","id","useId","svgSelector","useRef","liquidLevels","useMemo","ticksExact","map","d","prevLiquidLevels","usePrevious","innerWidth","innerHeight","useLayoutEffect","svgContainer","current","append","attr","concat","select","bucketPath","split","liquids","selectAll","data","join","_","i","transition","ease","d3","period","delay","duration","attrTween","diff","Math","abs","t","sin","min","PI","_jsx","className","children","ref","e","getQuantileBins","domain","unitsPerQuantile","numQuantiles","length","histBins","value","thresholds","ceil","binnedQuantiles","quantileBins","quantiles","b","y","push","x1","x0","start","stop","count","filled","arguments","undefined","taper","bottomRight","bottomLeft","x","lineFunc","numericBins","maxQuantiles","bin","round","sum","Infinity","isEqualFunc","prev","MAX_DELIVS","SCENARIO_KEY_STRING","DELIV_KEY_STRING","DELIV_KEY_STRING_UNORD","objectivesData","async","objs","fetch","json","obj","scen","unord","v","max","Array","from","sort","a","mapBy","name","console","log","_ref2","objectiveIDs","Object","keys","scenarioIDs","values","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","closePath","DROPLET_SHAPE","percentToRatioFilled","p","CIRC_RAD","SQRT1_2","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","yToSpriteY","spriteYToY","sy","waterdropDeltaOutline","yStart","yEnd","rad","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","v1","v2","v3","v4","reverse","waterdropDelta","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","random","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","nodes","AREA","r","floor","sqrt","placeDropsUsingPhysics","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","_ref4","useStickyScale","defaultVal","val","setVal","useState","useCallback","createInterps","obj_name","scen_name","maxDelivs","delivs","range","clamp","criteriaSort","criteria","objective","get","object","path","defaultValue","_object","part","pick","sortBy","array","va","vb","toRadians","Camera","constructor","_ref5","fov","near","far","domElement","zoomFn","raycaster","THREE","this","camera","set","zoom","scaleExtent","getScaleFromZ","on","d3ZoomHandler","curTransform","transform","view","call","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","intersectObject","mouseX","mouseY","mesh","setFromCamera","MeshGeometry","threeGeom","idx","addMeshCoords","meshCoords","color","indices","j","c","face","vertexColors","faces","mouseToThree","useStateRef","state","_setState","stateRef","useEffect","setState","WaterdropGlyph","dropD","dropPath","subdivs","showElems","elemStr","container","displayVal","style","hideElems","isOffsetInPixels","offset","includes","markerStyles","left","borderTop","zIndex","offsetTextStyles","fontSize","fontFamily","margin","padding","DebugOffset","top","useTop","React__default","_objectSpread2","Scrollama","props","debug","_props$offset","_props$onStepEnter","onStepEnter","_props$onStepExit","onStepExit","_props$onStepProgress","onStepProgress","_props$threshold","threshold","isOffsetDefinedInPixels","_useState2","_slicedToArray","lastScrollTop","setLastScrollTop","_useState4","windowInnerHeight","setWindowInnerHeight","handleSetLastScrollTop","scrollTop","handleWindowResize","window","addEventListener","removeEventListener","offsetValue","replace","progressThreshold","theta","ratio","createThreshold","child","scrollamaId","observerMap","Map","RootIds","WeakMap","unsupportedValue","rootId","optionsToId","options","filter","root","has","toString","observe","element","callback","fallbackInView","IntersectionObserver","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","isArray","createObserver","callbacks","splice","indexOf","delete","unobserve","disconnect","useInView","rootMargin","triggerOnce","skip","initialInView","onChange","React","setRef","node","result","Step","document","documentElement","direction","useRootMargin","setIsIntersecting","_useInView","inViewRef","_useInView2","offsetHeight","useProgressRootMargin","scrollProgressRef","scrollProgressEntry","setRefs","_scrollProgressEntry$","progress","only"],"sourceRoot":""}