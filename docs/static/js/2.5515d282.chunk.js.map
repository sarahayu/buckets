{"version":3,"file":"static/js/2.5515d282.chunk.js","mappings":"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","sources":["RecursiveDropletsBasicApp.jsx","RecursiveDropletsWatercolorApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport { objectivesData } from \"./data/objectivesData\";\r\nimport {\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\n\r\nconst LEVELS = 10;\r\nconst DEFAULT_OBJECTIVE_IDX = 0;\r\nconst RAD_PX = 15;\r\nconst DROPLET_SHAPE = \"M0,-10L5,-5A7.071,7.071,0,1,1,-5,-5L0,-10Z\";\r\nconst SVG_DROPLET_WIDTH_DONT_CHANGE = 4;\r\n\r\nexport default function RecursiveDropletsBasicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n  const [normalize, setNormalize] = useState(false);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () => criteriaSort(\"median\", objectivesData, objectiveIDs[curObjectiveIdx]),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      orderedScenIDs\r\n        .map((s) => {\r\n          const i = createInterps(\r\n            objectiveIDs[curObjectiveIdx],\r\n            s,\r\n            objectivesData\r\n          );\r\n          return ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n        })\r\n        .reverse(),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", window.innerWidth)\r\n      .attr(\"height\", window.innerHeight);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    const scale = 1 / (normalize ? d3.max(waterLevels.map((l) => l[0])) : 1);\r\n\r\n    const nodes_pos = placeDropsUsingPhysics(\r\n      width / 2,\r\n      height / 2,\r\n      waterLevels.map((levs, idx) => ({\r\n        r: levs[0] * scale * RAD_PX,\r\n        id: idx,\r\n      }))\r\n    );\r\n\r\n    const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n      levs: waterLevels[idx].map((w) => w * scale),\r\n      maxLev: waterLevels[idx][0] * scale,\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 500 + 1000,\r\n      startX: x,\r\n      startY: d3.scaleLinear([-RAD_PX * 2 - RAD_PX, -RAD_PX * 2])(\r\n        Math.random()\r\n      ),\r\n      endX: x,\r\n      endY: y,\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .selectAll(\".dropTranslateY\")\r\n      .data(nodes, (_, i) => i)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"dropTranslateY\")\r\n          .call((s) => {\r\n            s.append(\"g\")\r\n              .attr(\"class\", \"dropTranslateX\")\r\n              .each(function ({ levs, maxLev }, i) {\r\n                d3.select(this)\r\n                  .append(\"defs\")\r\n                  .append(\"clipPath\")\r\n                  .attr(\"id\", \"drop-mask-\" + i)\r\n                  .append(\"path\")\r\n                  .attr(\r\n                    \"transform\",\r\n                    `scale(${\r\n                      (maxLev * RAD_PX) / 2 / SVG_DROPLET_WIDTH_DONT_CHANGE\r\n                    })`\r\n                  )\r\n                  .attr(\"d\", DROPLET_SHAPE);\r\n                d3.select(this)\r\n                  .append(\"g\")\r\n                  .attr(\"clip-path\", `url(#drop-mask-${i})`)\r\n                  .selectAll(\"rect\")\r\n                  .data(levs, (_, i) => i)\r\n                  .join(\"rect\")\r\n                  .attr(\"width\", maxLev * RAD_PX * 2)\r\n                  .attr(\"height\", maxLev * RAD_PX * 2)\r\n                  .attr(\"x\", (-maxLev * RAD_PX * 2) / 2)\r\n                  .attr(\"y\", (-maxLev * RAD_PX * 2) / 2)\r\n                  .attr(\"fill\", (_, i) =>\r\n                    interpolateWatercolorBlue(i / LEVELS)\r\n                  );\r\n              });\r\n          });\r\n      })\r\n      .attr(\"transform\", ({ startY }) => `translate(0, ${startY})`)\r\n      .each(function ({ startX, tilt, levs, maxLev }) {\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .attr(\"transform\", `translate(${startX}, 0) rotate(${tilt})`)\r\n          .style(\"opacity\", 0.2);\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .selectAll(\"rect\")\r\n          .data(levs, (_, i) => i)\r\n          .attr(\"width\", maxLev * RAD_PX * 2)\r\n          .attr(\"height\", maxLev * RAD_PX * 2)\r\n          .attr(\"x\", (-maxLev * RAD_PX * 2) / 2)\r\n          .attr(\r\n            \"y\",\r\n            (l) =>\r\n              (maxLev * RAD_PX * 2) / 2 -\r\n              percentToRatioFilled(l / maxLev) * (maxLev * RAD_PX * 2)\r\n          );\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .select(\"path\")\r\n          .attr(\r\n            \"transform\",\r\n            `scale(${\r\n              (maxLev * RAD_PX) / 2 / Math.SQRT2 / SVG_DROPLET_WIDTH_DONT_CHANGE\r\n            })`\r\n          );\r\n      })\r\n      .call((s) => {\r\n        s.transition(\"y\")\r\n          .duration(({ dur }) => dur)\r\n          .delay((_, i) => Math.floor(i / 1) * 5)\r\n          .ease(d3.easeExpOut)\r\n          .attr(\"transform\", ({ endY }) => `translate(0, ${endY})`);\r\n      })\r\n      .call((s) => {\r\n        s.transition(\"trans\")\r\n          .duration(({ dur }) => dur * 0.5)\r\n          .delay((_, i) => Math.floor(i / 1) * 5)\r\n          .ease(d3.easeLinear)\r\n          .select(\".dropTranslateX\")\r\n          .attr(\r\n            \"transform\",\r\n            ({ endX, tilt }) => `translate(${endX}, 0) rotate(${tilt})`\r\n          )\r\n          .style(\"opacity\", 1);\r\n      });\r\n  }, [waterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <select\r\n        value={curObjectiveIdx}\r\n        onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n      >\r\n        {objectiveIDs.map((objectiveID, i) => (\r\n          <option name={i} value={i} key={i}>\r\n            {objectiveID}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"html\"\r\n        name=\"fav_language\"\r\n        value=\"HTML\"\r\n        checked={normalize}\r\n        onChange={() => void setNormalize((e) => !e)}\r\n      />\r\n      <label htmlFor=\"html\">normalize</label>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import RecursiveDropletsBasicApp from \"./RecursiveDropletsBasicApp\";\r\n\r\nexport default function RecusiveDropletsWatercolorApp() {\r\n  return <RecursiveDropletsBasicApp watercolor />;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    // obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING].slice(0, 100);\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.sqrt(2) / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nexport function percentToRatioFilled(p) {\r\n  return (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.4;\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 20;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(1.4);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 1; i++) {\r\n    coords.push([outer[i], outer[i + 1], inner[i + 1], inner[i]]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n  RANDO_CACHE =\r\n    RANDO_CACHE || generateRandoPoints(generateWaterdrop(1), nodes.length);\r\n\r\n  const DELTA = d3.mean(nodes.map(({ r }) => r * 2));\r\n  const WIDTH_AREA = DELTA * Math.floor(Math.sqrt(nodes.length));\r\n\r\n  const randoPoints = RANDO_CACHE.map(([x, y]) => [\r\n    (x * WIDTH_AREA) / 2,\r\n    (y * WIDTH_AREA) / 2,\r\n  ]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx + x, ny + y, r * 2, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.4, WIDTH_AREA * 1.4);\r\n  Matter.Body.translate(cage, { x, y: y + (WIDTH_AREA / 2) * 0.4 });\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for 1 second at 60 fps\r\n  for (let i = 0, FPS = 60; i < FPS * 1; i++) Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x,\r\n    y: position.y,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / 1200) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n}\r\n"],"names":["LEVELS","DEFAULT_OBJECTIVE_IDX","RAD_PX","DROPLET_SHAPE","SVG_DROPLET_WIDTH_DONT_CHANGE","RecursiveDropletsBasicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","curObjectiveIdx","setCurObjectiveIdx","useState","normalize","setNormalize","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","waterLevels","map","s","i","createInterps","ticksExact","d","reverse","useLayoutEffect","width","window","innerWidth","height","innerHeight","attr","scale","d3","l","nodes","placeDropsUsingPhysics","levs","idx","r","id","_ref2","x","y","w","maxLev","tilt","Math","random","dur","startX","startY","endX","endY","selectAll","data","_","join","enter","append","call","each","_ref3","this","concat","interpolateWatercolorBlue","_ref4","_ref5","select","style","percentToRatioFilled","SQRT2","transition","duration","_ref6","delay","floor","ease","_ref7","_ref8","_ref9","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","objectiveID","name","type","checked","htmlFor","ref","RecusiveDropletsWatercolorApp","start","stop","count","bucketPath","filled","arguments","length","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","MAX_DELIVS","SCENARIO_KEY_STRING","DELIV_KEY_STRING","async","objs","fetch","json","obj","scen","v","min","max","sort","a","b","mapBy","console","log","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","sqrt","PI","closePath","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","translate","add","world","FPS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}