{"version":3,"file":"static/js/746.28f8b962.chunk.js","mappings":"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","sources":["RecursiveDropletsBasicApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport { MAX_DELIVS, objectivesData } from \"./data/objectivesData\";\r\nimport {\r\n  DROPLET_SHAPE,\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst LEVELS = 5;\r\nconst DEFAULT_OBJECTIVE_IDX = 2;\r\nconst RAD_PX = 7;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst DROPLET_PAD_FACTOR = 2.5;\r\nconst PX_BIAS = 1;\r\n\r\nexport default function RecursiveDropletsBasicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n  const [normalize, setNormalize] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () =>\r\n      criteriaSort(\r\n        \"median\",\r\n        objectivesData,\r\n        objectiveIDs[curObjectiveIdx]\r\n      ).reverse(),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      orderedScenIDs.map((s) => {\r\n        const i = createInterps(\r\n          objectiveIDs[curObjectiveIdx],\r\n          s,\r\n          objectivesData,\r\n          MAX_DELIVS\r\n        );\r\n        return ticksExact(0, 1, LEVELS + 1).map((d, j) => i(d));\r\n      }),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const zoomRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    zoomRef.current = d3\r\n      .zoom()\r\n      .scaleExtent([1, 10])\r\n      .translateExtent([\r\n        [-winDim.current.width / 2, -winDim.current.height / 2],\r\n        [winDim.current.width * 1.5, winDim.current.height * 1.5],\r\n      ])\r\n      .on(\"zoom\", function (e) {\r\n        bucketSvgSelector.current\r\n          .select(\".svg-trans\")\r\n          .attr(\"transform\", e.transform);\r\n\r\n        bucketSvgSelector.current\r\n          .selectAll(\".text-scale\")\r\n          .attr(\"transform\", `scale(${1 / e.transform.k})`);\r\n      })\r\n      .on(\r\n        \"start\",\r\n        (e) =>\r\n          (e.sourceEvent || {}).type !== \"wheel\" &&\r\n          bucketSvgSelector.current.style(\"cursor\", \"grabbing\")\r\n      )\r\n      .on(\"end\", () => bucketSvgSelector.current.style(\"cursor\", \"grab\"));\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", winDim.current.width)\r\n      .attr(\"height\", winDim.current.height)\r\n      .style(\"cursor\", \"grab\")\r\n      .call((s) => s.append(\"g\").attr(\"class\", \"svg-trans\"))\r\n      .call(zoomRef.current);\r\n\r\n    if (\r\n      searchParams.get(\"obj\") &&\r\n      objectiveIDs.includes(searchParams.get(\"obj\"))\r\n    ) {\r\n      setCurObjectiveIdx(objectiveIDs.indexOf(searchParams.get(\"obj\")));\r\n      setNormalize(searchParams.get(\"norm\") == \"true\");\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    bucketSvgSelector.current.call(zoomRef.current.transform, d3.zoomIdentity);\r\n\r\n    const scale = 1;\r\n\r\n    const nodes_pos = placeDropsUsingPhysics(\r\n      width / 2,\r\n      height / 2,\r\n      waterLevels.map((levs, idx) => ({\r\n        r:\r\n          (normalize ? 1 : Math.max(levs[0], MIN_LEV_VAL)) *\r\n          scale *\r\n          RAD_PX *\r\n          DROPLET_PAD_FACTOR,\r\n        id: idx,\r\n      }))\r\n    );\r\n\r\n    const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n      levs: waterLevels[idx].map(\r\n        (w, i) =>\r\n          Math.max(w, i == 0 ? MIN_LEV_VAL : 0) *\r\n          scale *\r\n          (normalize ? 1 / Math.max(waterLevels[idx][0], MIN_LEV_VAL) : 1) *\r\n          RAD_PX\r\n      ),\r\n      maxLev:\r\n        (normalize ? 1 : Math.max(waterLevels[idx][0], MIN_LEV_VAL) * scale) *\r\n        RAD_PX,\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      startX: x,\r\n      startY: y - RAD_PX * 4 * Math.random(),\r\n      endX: x,\r\n      endY: y,\r\n      scen: orderedScenIDs[idx],\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".smallDrop\")\r\n      .data(nodes, (_, i) => i)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"smallDrop\")\r\n          .each(function ({ levs }, i) {\r\n            d3.select(this.parentNode)\r\n              .append(\"g\")\r\n              .attr(\"id\", `drop-${i}`)\r\n              .append(\"g\")\r\n              .attr(\"class\", \"text-scale\")\r\n              .append(\"text\")\r\n              .style(\"font-size\", 16)\r\n              .attr(\"text-anchor\", \"middle\");\r\n\r\n            const s = d3.select(this);\r\n            s.append(\"rect\")\r\n              .attr(\"class\", \"bbox\")\r\n              .style(\"visibility\", \"hidden\");\r\n\r\n            s.on(\"mouseover\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 0.5);\r\n              s.style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 1);\r\n            }).on(\"mouseout\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 0);\r\n            });\r\n\r\n            const stops = d3\r\n              .select(this)\r\n              .append(\"defs\")\r\n              .append(\"linearGradient\")\r\n              .attr(\"id\", `drop-fill-${i}`)\r\n              .attr(\"x1\", \"0%\")\r\n              .attr(\"x2\", \"0%\")\r\n              .attr(\"y1\", \"0%\")\r\n              .attr(\"y2\", \"100%\");\r\n\r\n            levs.forEach((_, i) => {\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n            });\r\n\r\n            d3.select(this)\r\n              .append(\"path\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"fill\", `url(#drop-fill-${i})`);\r\n          });\r\n      })\r\n      .attr(\r\n        \"transform\",\r\n        ({ startX, startY, tilt }) =>\r\n          `translate(${startX}, ${startY}) rotate(${tilt})`\r\n      )\r\n      .style(\"opacity\", 0)\r\n      .each(function ({ levs, maxLev, scen }, i) {\r\n        const s = d3.select(this);\r\n\r\n        d3.select(`#drop-${i}`).style(\"opacity\", 0).select(\"text\").text(scen);\r\n\r\n        s.selectAll(\"path\").attr(\"transform\", `scale(${maxLev})`);\r\n\r\n        s.selectAll(\"stop\").each(function (_, i) {\r\n          let actI = Math.floor(i / 2);\r\n          const isEnd = i % 2;\r\n\r\n          if (isEnd === 0) actI -= 1;\r\n\r\n          if (actI === -1) {\r\n            d3.select(this).attr(\"offset\", `${0}%`);\r\n          } else {\r\n            d3.select(this).attr(\r\n              \"offset\",\r\n              `${(1 - levs[actI] / maxLev) * 100}%`\r\n            );\r\n          }\r\n        });\r\n\r\n        s.transition()\r\n          .duration(({ dur }) => dur)\r\n          .ease(d3.easeLinear)\r\n          .attr(\r\n            \"transform\",\r\n            ({ endX, endY, tilt }) =>\r\n              `translate(${endX}, ${endY}) rotate(${tilt})`\r\n          )\r\n          .style(\"opacity\", 1)\r\n          .on(\"end\", () => {\r\n            const d = s.select(\"path\");\r\n\r\n            s.select(\".bbox\")\r\n              .attr(\"x\", d.node().getBBox().x)\r\n              .attr(\"y\", d.node().getBBox().y)\r\n              .attr(\"width\", d.node().getBBox().width)\r\n              .attr(\"height\", d.node().getBBox().height);\r\n\r\n            bucketSvgSelector.current\r\n              .select(`#drop-${i}`)\r\n              .attr(\r\n                \"transform\",\r\n                `translate(${\r\n                  d.node().getBoundingClientRect().x +\r\n                  d.node().getBoundingClientRect().width / 2\r\n                }, ${d.node().getBoundingClientRect().y})`\r\n              );\r\n          })\r\n          .call((s) => {});\r\n      })\r\n      .call((s) => {});\r\n  }, [waterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div className=\"bubbles-input-area\">\r\n        <select\r\n          value={curObjectiveIdx}\r\n          onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n        >\r\n          {objectiveIDs.map((objectiveID, i) => (\r\n            <option name={i} value={i} key={i}>\r\n              {objectiveID}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"norm\"\r\n          checked={normalize}\r\n          onChange={() => void setNormalize((e) => !e)}\r\n        />\r\n        <label htmlFor=\"norm\">normalize</label>\r\n      </div>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nexport function waterdrop(yFill) {\r\n  return {\r\n    draw: function (context, size) {\r\n      const realHeight = (size * (1 + Math.SQRT1_2)) / 2;\r\n      const yFromTop = realHeight * (1 - yFill);\r\n\r\n      if (yFill > 0.75) {\r\n        const topRightLine = d3.interpolateArray(\r\n          [0, -size / 2],\r\n          [size / 4, -size / 4]\r\n        );\r\n        const topLeftLine = d3.interpolateArray(\r\n          [0, -size / 2],\r\n          [-size / 4, -size / 4]\r\n        );\r\n\r\n        const start = topRightLine(1 - yFill),\r\n          end1 = topRightLine(1),\r\n          end2 = topLeftLine(1 - yFill);\r\n\r\n        context.moveTo(...start);\r\n        context.lineTo(...end1);\r\n\r\n        context.arc(\r\n          0,\r\n          0,\r\n          size / Math.SQRT2 / 2,\r\n          -Math.PI / 4,\r\n          (Math.PI * 5) / 4\r\n        );\r\n\r\n        context.lineTo(...end2);\r\n        context.closePath();\r\n      } else {\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => r ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.3; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.1,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data, maxDelivs) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n"],"names":["LEVELS","DEFAULT_OBJECTIVE_IDX","RAD_PX","MIN_LEV_VAL","DROPLET_PAD_FACTOR","RecursiveDropletsBasicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","curObjectiveIdx","setCurObjectiveIdx","useState","normalize","setNormalize","searchParams","useSearchParams","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","reverse","waterLevels","map","s","i","createInterps","MAX_DELIVS","ticksExact","d","j","zoomRef","useLayoutEffect","width","window","innerWidth","height","innerHeight","d3","scaleExtent","translateExtent","on","e","select","attr","transform","selectAll","concat","k","sourceEvent","type","style","call","append","get","includes","indexOf","nodes","placeDropsUsingPhysics","levs","idx","r","Math","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","endX","endY","scen","data","_","join","enter","each","_ref3","this","parentNode","stops","forEach","interpolateWatercolorBlue","DROPLET_SHAPE","_ref4","_ref5","text","actI","floor","transition","duration","_ref6","ease","_ref7","node","getBBox","getBoundingClientRect","_jsxs","className","children","_jsx","value","onChange","parseInt","target","objectiveID","name","checked","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","length","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","SCENARIO_KEY_STRING","DELIV_KEY_STRING","async","objs","fetch","json","obj","v","min","sort","a","b","mapBy","console","log","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","PI","closePath","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","AREA","WIDTH_AREA","sqrt","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","maxDelivs","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}