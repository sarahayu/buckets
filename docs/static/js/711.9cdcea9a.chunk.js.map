{"version":3,"file":"static/js/711.9cdcea9a.chunk.js","mappings":"oPASA,MAAMA,EAAS,GACTC,EAAa,EACbC,EAAwB,EAEf,SAASC,EAAYC,GAAiC,IAAhC,MAAEC,EAAQ,IAAG,OAAEC,EAAS,KAAKF,EAChE,MAAQG,QAASC,IAAiBC,EAAAA,EAAAA,QAAOC,OAAOC,KAAKC,EAAAA,MAC9CC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAASb,GAEjDc,GAAoBP,EAAAA,EAAAA,UAEpBQ,GAAiBC,EAAAA,EAAAA,UACrB,KAAMC,EAAAA,EAAAA,IAAa,SAAUP,EAAAA,GAAgBJ,EAAaK,KAC1D,CAACA,IAGGO,GAAqBF,EAAAA,EAAAA,UAAQ,IAC1BG,MAAMC,KAAKL,GAAgBM,QAAO,CAACC,EAAGC,KAC3CC,EAAAA,EAAAA,IAAW,EAAG,GAAK,IAChBC,KAAKC,GAAMC,KAAKC,OAAOF,EAAI,KAAQX,EAAec,UAClDC,SAASP,MAEb,CAACR,IAEEgB,GAAcf,EAAAA,EAAAA,UAClB,KACEQ,EAAAA,EAAAA,IAAW,EAAG,EAAG1B,EAAS,GAAG2B,KAAKC,GAChCR,EAAmBO,KAAKO,IACtBC,EAAAA,EAAAA,IACE3B,EAAaK,GACbqB,EACAtB,EAAAA,GACAwB,EAAAA,GAJFD,CAKEP,QAGR,CAACR,EAAoBP,IAGjBwB,EAAahC,EAAqB,EAAbJ,EACrBqC,EAAchC,EAASL,EAEvBsC,EAAIC,EAAAA,cAAiBC,MAAM,CAAC,EAAGJ,IAC/BK,EAAIF,EAAAA,cAAiBC,MAAM,CAACH,EAAa,IA6D/C,OA3DAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAe5B,EAAkBT,QACpCsC,KAAK,QAASxC,GACdwC,KAAK,SAAUvC,GACfwC,OAAO,KACPD,KAAK,QAAS,iBACdA,KAAK,YAAY,aAADE,OAAe9C,EAAU,MAAA8C,OAAK9C,EAAa,EAAC,MAE/D2C,EACGE,OAAO,QACPA,OAAO,YACPD,KAAK,KAAM,eACXC,OAAO,QACPD,KAAK,KAAKG,EAAAA,EAAAA,IAAWX,EAAYC,IAEpCM,EACGE,OAAO,KACPD,KAAK,QAAS,cACdA,KAAK,YAAY,qBAEpBD,EACGE,OAAO,QACPD,KAAK,KAAKG,EAAAA,EAAAA,IAAWX,EAAYC,GAAaW,MAAM,KAAK,IACzDJ,KAAK,SAAU,aACfA,KAAK,iBAAkB,SACvBA,KAAK,eAAgB5C,GACrB4C,KAAK,OAAQ,OAAO,GACtB,KAEHF,EAAAA,EAAAA,YAAU,KACR3B,EAAkBT,QACf2C,OAAO,eACPC,UAAU,QACVC,KAAKnB,GACLoB,KAAK,QACLR,KAAK,QAAQ,CAACrB,EAAGC,IAAMe,EAAAA,iBAAoBf,EAAIQ,EAAYF,UAC3DuB,aACAC,SAAS,KACTV,KAAK,KAAMW,IACV,MAAMC,EAAM,CAACD,EAAG,IAEhB,IAAK,IAAI/B,EAAI,EAAGA,EAAI+B,EAAGzB,OAAQN,IAC7BgC,EAAIC,KAAKF,EAAG/B,EAAI,IAChBgC,EAAIC,KAAKF,EAAG/B,IAGd,OACEe,EAAAA,OAGGD,GAAE,SAAUf,EAAGC,GACd,OAAOc,EAAEV,KAAK8B,KAAKlC,EAAI,IAAM+B,EAAGzB,OAAS,GAC3C,IACC6B,IAAIhC,GAAMc,EAAEd,KACZiC,IAAG,IAAMnB,EAAE,IAPdF,CAOkBiB,EAAI,GAExB,GACH,CAACxB,KAGF6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACEC,MAAOrD,EACPsD,SAAWC,GAAMtD,EAAmBuD,SAASD,EAAEE,OAAOJ,QAAQF,SAE7DxD,EAAamB,KAAI,CAAC4C,EAAa9C,KAC9BwC,EAAAA,EAAAA,KAAA,UAAQO,KAAM/C,EAAGyC,MAAOzC,EAAEuC,SACvBO,SAIPN,EAAAA,EAAAA,KAAA,OAAKQ,IAAML,IAAYpD,EAAkBT,QAAUiC,EAAAA,OAAU4B,EAAI,MAGvE,C,gHC3HO,SAAS1C,EAAWgD,EAAOC,EAAMC,GACtC,OAAOpC,EAAAA,MAASoC,GAAOjD,KAAKF,GAAOA,GAAKmD,EAAQ,IAAOD,EAAOD,GAASA,GACzE,CAEO,SAAS1B,EAAW3C,EAAOC,GAAoC,IAA5BuE,EAAMC,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAKE,EAAKF,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC1DG,EAAc5E,EAAQ2E,EAAS3E,GAAS,EAAI2E,GAAU,EACxDE,EAAc7E,GAAS,EAAI2E,GAAU,EACnC5B,EAAO,CACT,CACEb,EAAGC,EAAAA,YAAeyC,EAAa5E,EAA5BmC,CAAmCqC,GACtCnC,EAAGF,EAAAA,YAAelC,EAAQ,EAAvBkC,CAA0BqC,IAE/B,CAAEtC,EAAG0C,EAAavC,EAAGpC,GACrB,CAAEiC,EAAG2C,EAAYxC,EAAGpC,GACpB,CACEiC,EAAGC,EAAAA,YAAe0C,EAAY,EAA3B1C,CAA8BqC,GACjCnC,EAAGF,EAAAA,YAAelC,EAAQ,EAAvBkC,CAA0BqC,KAWjC,OARerC,EAAAA,OAEZD,GAAE,SAAUX,GACX,OAAOA,EAAEW,CACX,IACCG,GAAE,SAAUd,GACX,OAAOA,EAAEc,CACX,GACKyC,CAAS/B,GAAQ,GAC1B,CAEO,SAASgC,EAAaC,EAAaC,EAAkBC,GAC1D,IAAIH,EAAeC,EAAY1D,KAAK6D,GAClC3D,KAAK4D,MAAMD,EAAIzD,OAASuD,KAEtBI,EAAMlD,EAAAA,IAAO4C,GAEjB,KAAOM,EAAMH,GACXH,EACE5C,EAAAA,SAAY6C,GAAa,CAACzD,EAAGH,IACd,IAAbG,EAAEG,OACEH,EAAEG,OAASuD,EAAmBF,EAAa3D,GAC3CkE,QAEH,EAELD,EAAMlD,EAAAA,IAAO4C,GAGf,KAAOM,EAAMH,GACXH,EACE5C,EAAAA,SAAY6C,GAAa,CAACzD,EAAGH,IACd,IAAbG,EAAEG,OACEH,EAAEG,OAASuD,EAAmBF,EAAa3D,IAC1CkE,QAEJ,EAELD,EAAMlD,EAAAA,IAAO4C,GAGf,OAAOA,CACT,CAGO,SAASQ,EAAY1B,EAAO2B,GAEjC,MAAMpB,GAAMhE,EAAAA,EAAAA,QAAO,CACjByD,MAAOA,EACP4B,KAAM,OAGFvF,EAAUkE,EAAIlE,QAAQ2D,MAa5B,OARI2B,EAAeA,EAAY3B,EAAO3D,GAAW2D,IAAU3D,KACzDkE,EAAIlE,QAAU,CACZ2D,MAAOA,EACP4B,KAAMvF,IAKHkE,EAAIlE,QAAQuF,IACrB,CAEO,MAAMC,EAA6BtE,GACxCe,EAAAA,iBAAoBA,EAAAA,YAAe,CAAC,GAAK,GAArBA,CAA2Bf,G,iKC1F1C,MAAMW,EAAa,KACb4D,EAAsB,QACtBC,EAAmB,SACnBC,EAAyB,eAEzBtF,QAAwBuF,iBACnC,MAAMC,cAAoBC,MAAM,0BAA0BC,OAE1D,IAAK,MAAMC,KAAOH,EAAM,CACtBG,EAAIP,GAAuBO,EAAIP,GAC/B,IAAK,MAAMQ,KAAQD,EAAIP,GAAsB,CAE3C,MAAMS,EAAQD,EAAKP,GAAkBtE,KAAK+E,GACxC7E,KAAK8E,IAAI9E,KAAK+E,IAAI,EAAGF,GAAItE,KAG3BoE,EAAKN,GAA0BO,EAC/BD,EAAKP,GAAoB5E,MAAMC,KAAKmF,GAAOI,MAAK,CAACC,EAAGC,IAAMA,EAAID,GAChE,CACAP,EAAIP,IAAuBgB,EAAAA,EAAAA,IACzBT,EAAIP,IACJ5F,IAAA,IAAC,KAAEoE,GAAMpE,EAAA,OAAKoE,CAAI,GAEtB,CAIA,OAFAyC,QAAQC,IAAI,kCAELF,EAAAA,EAAAA,IAAMZ,GAAMe,IAAA,IAAC,IAAEZ,GAAKY,EAAA,OAAKZ,CAAG,GACrC,CAvBqCJ,GAyBxB3F,EAAeE,OAAOC,KAAKC,GAC3BwG,EAAc1G,OAAOC,KAChCD,OAAO2G,OAAOzG,GAAgB,GAAGoF,I,0SCH5B,SAASgB,EAAMZ,EAAMkB,GAC1B,MAAMC,EAAU7G,OAAO8G,QAAQpB,EAAMkB,GAErC,IAAK,MAAMG,KAAO/G,OAAOC,KAAK4G,GAC5BA,EAAQE,GAAOF,EAAQE,GAAK,GAG9B,OAAOF,CACT,C,4BAGO,MAAMG,EAAiB,CAC5BC,KAAM,SAAUC,EAASC,GACvBD,EAAQE,OAAO,GAAID,EAAO,GAC1BD,EAAQG,OAAOF,EAAO,GAAIA,EAAO,GAEjCD,EAAQI,IAAI,EAAG,EAAGH,EAAOhG,KAAKoG,MAAQ,GAAIpG,KAAKqG,GAAK,EAAc,EAAVrG,KAAKqG,GAAU,GACvEN,EAAQG,OAAO,GAAIF,EAAO,GAC1BD,EAAQO,WACV,GAIWC,EAAgB,mDAEtB,SAASC,EAAqBC,GAEnC,OADAA,GAAK,MACEzG,KAAK8E,IACV,EACA9E,KAAK+E,IACH,GACC,OAAS0B,GAAK,EAAI,OAASA,GAAK,EAAI,OAASA,EAAI,OAAU,QAGlE,CAEA,MAAMC,EAAW1G,KAAK2G,QAChBC,EAAW,EACXC,EAAcH,EAAWA,EACzBI,EAAcF,EAAWF,EACzBK,EAAY,IAGlB,SAASC,EAAanG,GACpB,GAAIA,GAAKkG,EAAW,CAGlB,OAFqB/G,KAAK2G,SAEF,EAAI9F,IAAO,EAAIkG,EACzC,CAGA,MAAME,EAAyB,GAAhB,EADiBpG,GAuBpBgG,EAAcC,IAtBS,EAE7BI,EAAQlH,KAAKmH,KAAKF,GAGxB,OAFcjH,KAAKoH,IAAIF,EAGzB,CAGA,SAASG,EAAWxG,GAClB,OAAQA,EAAI6F,EAAWI,IAAgB,EAAI9G,KAAKoG,MAClD,CAEA,SAASkB,EAAWC,GAClB,OAAOA,GAAM,EAAIvH,KAAKoG,OAASM,EAAWI,CAC5C,CAUO,SAASU,EAAsBC,EAAQC,GAAiB,IAAX1B,EAAI/C,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzD,GAAIjD,KAAK2H,IAAIF,EAASC,GAAQ,IAAM,MAAO,GAE3C,MAAME,EAAO5B,EAAO,EAAIY,EAAYF,EAE9BmB,EAAU,GAEVC,EAAc,GACdC,EAAa,GAEnB,IAAIC,EAAKC,EAAKC,EAAKC,EAEnB,IAAK,IAAIvI,EAAI,EAAGA,GAAKI,KAAK8B,KAAK,MAC7BkG,EAAMhB,EAAaS,GAAU7H,EAAI,GAAKiI,GACtCI,EAAMZ,EAAWI,GAAU7H,EAAI,GAAKiI,GACpCK,EAAMlB,EAAaS,EAAS7H,EAAIiI,GAChCM,EAAMd,EAAWI,EAAS7H,EAAIiI,KAE1BP,EAAWa,IAAQT,IANoB9H,IAAK,CAShD,MAAMwI,EAAK,EAAEJ,EAAMJ,GAAMK,EAAML,GAC7BS,EAAK,CAACL,EAAMJ,GAAMK,EAAML,GACxBU,EAAK,CAACJ,EAAMN,GAAMO,EAAMP,GACxBW,EAAK,EAAEL,EAAMN,GAAMO,EAAMP,GAE3BE,EAAYjG,KAAKwG,EAAIC,GACrBP,EAAWlG,KAAKuG,EAAIG,EACtB,CAEAL,EAAMlB,EAAaU,GACnBS,EAAMd,EAAWK,GAGjB,MAAMU,EAAK,EAAEJ,EAAMJ,GAAMK,EAAML,GAC7BS,EAAK,CAACL,EAAMJ,GAAMK,EAAML,GACxBU,EAAK,CAACJ,EAAMN,GAAMO,EAAMP,GACxBW,EAAK,EAAEL,EAAMN,GAAMO,EAAMP,GAO3B,OALAE,EAAYjG,KAAKwG,EAAIC,GACrBP,EAAWlG,KAAKuG,EAAIG,GAEpBT,EAAYjG,QAAQkG,EAAWS,WAExBV,CACT,CAEO,SAASW,EAAehB,EAAQC,GAAiB,IAAX1B,EAAI/C,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAClD,GAAIjD,KAAK2H,IAAIF,EAASC,GAAQ,IAAM,MAAO,GAE3C,MAAME,EAAO5B,EAAO,EAAIY,EAAYF,EAE9BmB,EAAU,GAEVa,EAAS,GAEf,IAAIV,EAAKC,EAAKC,EAAKC,EAEnB,IAAK,IAAIvI,EAAI,EAAGA,GAAKI,KAAK8B,KAAK,MAC7BkG,EAAMhB,EAAaS,GAAU7H,EAAI,GAAKiI,GACtCI,EAAMZ,EAAWI,GAAU7H,EAAI,GAAKiI,GACpCK,EAAMlB,EAAaS,EAAS7H,EAAIiI,GAChCM,EAAMd,EAAWI,EAAS7H,EAAIiI,KAE1BP,EAAWa,IAAQT,IANoB9H,IAAK,CAShD,MAAMwI,EAAK,EAAEJ,EAAMJ,GAAMK,EAAML,GAC7BS,EAAK,CAACL,EAAMJ,GAAMK,EAAML,GACxBU,EAAK,CAACJ,EAAMN,GAAMO,EAAMP,GACxBW,EAAK,EAAEL,EAAMN,GAAMO,EAAMP,GAE3Bc,EAAO7G,KAAK,CAACuG,EAAIC,EAAIC,IACrBI,EAAO7G,KAAK,CAACuG,EAAIE,EAAIC,GACvB,CAEAL,EAAMlB,EAAaU,GACnBS,EAAMd,EAAWK,GAGjB,MAAMU,EAAK,EAAEJ,EAAMJ,GAAMK,EAAML,GAC7BS,EAAK,CAACL,EAAMJ,GAAMK,EAAML,GACxBU,EAAK,CAACJ,EAAMN,GAAMO,EAAMP,GACxBW,EAAK,EAAEL,EAAMN,GAAMO,EAAMP,GAK3B,OAHAc,EAAO7G,KAAK,CAACuG,EAAIC,EAAIC,IACrBI,EAAO7G,KAAK,CAACuG,EAAIE,EAAIC,IAEdG,CACT,CAQO,SAASC,EAAuBC,EAAQC,GAC7C,OAAO,SAAUC,GACf,OAAOD,EAAE/I,KAAI,SAAUY,GACrB,MAAO,CACLA,EACAC,EAAAA,KAAQmI,GAAG,SAAUjE,GACnB,OAAO+D,EAAOlI,EAAImE,EACpB,IAEJ,GACF,CACF,CAEO,SAASkE,EAAmBC,GACjC,OAAO,SAAUnE,GACf,OAAO7E,KAAK2H,IAAK9C,GAAKmE,IAAO,EAAK,KAAQ,EAAInE,EAAIA,GAAMmE,EAAI,CAC9D,CACF,CAEA,SAASC,EAAkBzK,GACzB,MAAMoJ,EAAMpJ,EAAQ,EAEd0K,EAAmB,EAAVlJ,KAAKqG,GAAU,EADX,GAGb8C,EAAQ,CACZ,CACEzI,EAAGV,KAAKoJ,IAAe,EAAVpJ,KAAKqG,GAAU,GAAKuB,EACjC/G,EAAGb,KAAKoH,IAAe,EAAVpH,KAAKqG,GAAU,GAAKuB,GAEnC,CACElH,EAAG,EACHG,GAAIb,KAAKoG,MAAQwB,IAIrB,IAAK,IAAIhI,EAAI,EAAGA,GAdG,GAccA,IAC/BuJ,EAAMtH,KAAK,CACTnB,EAAGV,KAAKoJ,IAAIxJ,EAAIsJ,EAAQlJ,KAAKqG,GAAK,GAAKuB,EACvC/G,EAAGb,KAAKoH,IAAIxH,EAAIsJ,EAAQlJ,KAAKqG,GAAK,GAAKuB,IAI3C,OAAOuB,CACT,CAEO,SAASE,EAAoBC,EAAOvG,GACzC,MAAMwG,EAASC,IAAAA,OAAcC,OAAOH,GAE9BI,EAAOH,EAAOzE,IAAIpE,EACtBiJ,EAAOJ,EAAOxE,IAAIrE,EAClBkJ,EAAOL,EAAOzE,IAAIjE,EAClBgJ,EAAON,EAAOxE,IAAIlE,EAEdiJ,EAAOnJ,EAAAA,YAAe,CAAC+I,EAAMC,IAC7BI,EAAOpJ,EAAAA,YAAe,CAACiJ,EAAMC,IAE7BG,EAAS,GAEf,IAAK,IAAIpK,EAAI,EAAGA,EAAImD,EAAOnD,IACzB,OAAa,CACX,MAAMc,EAAIoJ,EAAK9J,KAAKiK,UACdpJ,EAAIkJ,EAAK/J,KAAKiK,UAEpB,GAAIT,IAAAA,SAAgBU,SAASZ,EAAO,CAAE5I,IAAGG,MAAM,CAC7CmJ,EAAOnI,KAAK,CAACnB,EAAGG,IAChB,KACF,CACF,CAGF,OAAOmJ,CACT,CAGO,MAAMG,EAAyB,WACpC,MAAMhB,EAAQF,EAAkB,GAC1BmB,EAAQnB,EAAkB,GAE1BP,EAAS,GAEf,IAAK,IAAI9I,EAAI,EAAGA,EAAIuJ,EAAMjJ,OAAS,EAAGN,IACpC8I,EAAO7G,KAAK,CACVsH,EAAMvJ,GACNuJ,EAAMvJ,GAAKA,EAAI,EAAI,EAAI,IACvBwK,EAAMxK,GAAKA,EAAI,EAAI,EAAI,IACvBwK,EAAMxK,KAIV,OAAO8I,CACT,CAhBsC,GAkBtC,IAAI2B,EACAC,EAEAC,EACAC,EAEG,SAASC,EAAgBC,GAC9B,MAAMC,EAAOhK,EAAAA,IAAO+J,EAAM5K,KAAK8K,GAAMA,GAAK,EAAI,QAC9C,OAAO5K,KAAKC,MAAgC,EAAzBD,KAAK6K,KAAKF,EAAO,MAAa,EACnD,CAGO,SAASG,EAAuBpK,EAAGG,EAAG6J,GAAuB,IAAhBK,EAAK9H,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,IAAAA,UAAA,GACvD,GAAI8H,GAASR,GAAaG,EAAMxK,SAAWsK,EAAiB,OAAOD,EAI9DF,GAAeK,EAAMxK,SAAWoK,IACnCD,EAAc1J,EAAAA,MACL,GACNb,KAAI,IACHuJ,EAAoBJ,EAAkB,GAAKqB,EAAeI,EAAMxK,WAGtE,MAAM8K,EAAaP,EAAgBC,EAAM5K,KAAIvB,IAAA,IAAC,EAAEqM,GAAGrM,EAAA,OAAKqM,CAAC,KAEnDK,EAAcZ,EAClBrK,KAAKC,MAAMD,KAAKiK,SAAWI,EAAYnK,SACvCJ,KAAIwF,IAAA,IAAE5E,EAAGG,GAAEyE,EAAA,MAAK,CAAC5E,EAAIsK,EAAYnK,EAAImK,EAAW,IAG5CE,EAAS1B,IAAAA,OACb2B,EAAS3B,IAAAA,OACT4B,EAAY5B,IAAAA,UAER6B,EAASH,EAAOzB,SAEhB6B,EAAUL,EAAYjG,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAE9CsG,EAAcb,EAAM5K,KAAI,CAAA0L,EAAY5L,KAAO,IAAlB,EAAEgL,EAAC,GAAEa,GAAID,EACtC,MAAOE,EAAIC,GAAML,EAAQ1L,GACzB,OAAOuL,EAAOS,OAAOF,EAAIC,EAAIf,EAAG,CAC9BiB,YAAa,EACbJ,GAAIA,GACJ,IAGEK,EAAQ3B,EAAsBrK,KAAKiM,GACvCvC,IAAAA,KAAYC,OAAO,CACjBuC,SAAUxC,IAAAA,SAAgByC,OAAOF,GACjCG,SAAUH,EACVI,UAAU,MAIRC,EAAO5C,IAAAA,KAAYC,OAAO,CAC9B0C,UAAU,IAGZ3C,IAAAA,KAAY6C,SAASD,EAAMN,GAE3BtC,IAAAA,KAAY8C,UAAUF,EAAM,CAAE1L,EAAG,EAAGG,EAAG,IACvC2I,IAAAA,KAAY+C,MAAMH,EAAMpB,EAAYA,GAEpCI,EAAUoB,IAAInB,EAAOoB,MAAO,IAAIlB,EAAaa,IAG7C,IAAK,IAAIxM,EAAI,EAAG8M,EAAM,GAAIC,EAAO,GAAK/M,EAAI8M,EAAMC,EAAM/M,IACpDsL,EAAO0B,OAAOvB,EAAQ,IAAOqB,GAE/B,MAAMG,EAAStB,EAAYzL,KAAIgN,IAAA,IAAC,SAAEd,EAAQ,GAAEP,GAAIqB,EAAA,MAAM,CACpDrB,KACA/K,EAAGsL,EAAStL,EAAIA,EAChBG,EAAGmL,EAASnL,EAAIA,EACjB,IASD,OAPAgM,EAAOpO,OAAUuM,EAAa,EAAItE,EAAYI,GAE1CiE,GAAWR,GAAasC,EAAO3M,SAAWsK,IAC5CD,EAAYsC,EACZrC,EAAkBqC,EAAO3M,QAGpB2M,CACT,CAmCO,SAASE,EAAeC,EAAYT,GACzC,MAAOU,EAAKC,IAAUhO,EAAAA,EAAAA,UAAS8N,GAK/B,MAAO,EAHW3N,EAAAA,EAAAA,UAAQ,IAAMkN,EAAMU,IAAM,CAACA,KACxBE,EAAAA,EAAAA,cAAatI,IAAWqI,EAAOX,EAAM1H,GAAG,GAAE,IAGjE,CAEO,SAASvE,EAAc8M,EAAUC,EAAW9L,EAAM+L,GACvD,MAAMC,EACJhM,EAAK6L,GAAUjJ,EAAAA,IAAqBkJ,GAAWjJ,EAAAA,IACjD,OAAOzD,EAAAA,cAEJ6M,QAAO3N,EAAAA,EAAAA,IAAW,EAAG,EAAG0N,EAAOrN,SAC/BU,MAAM2M,EAAOzN,KAAK+E,GAAM7E,KAAK8E,IAAI,EAAGD,EAAIyI,MACxCG,OAAM,EACX,CAEO,SAASnO,EAAaoO,EAAUnM,EAAMoM,GAC3C,MAAiB,WAAbD,EACK7O,OAAOC,KAAKyC,EAAKoM,GAAWxJ,EAAAA,KAAsBa,MACvD,CAACC,EAAGC,IACFvE,EAAAA,KAAQY,EAAKoM,GAAWxJ,EAAAA,IAAqBc,GAAGb,EAAAA,KAChDzD,EAAAA,KAAQY,EAAKoM,GAAWxJ,EAAAA,IAAqBe,GAAGd,EAAAA,OAGrC,eAAbsJ,EACK7O,OAAOC,KAAKyC,EAAKoM,GAAWxJ,EAAAA,KAAsBa,MACvD,CAACC,EAAGC,IACFvE,EAAAA,IAAOY,EAAKoM,GAAWxJ,EAAAA,IAAqBc,GAAGb,EAAAA,KAC/CzD,EAAAA,IAAOY,EAAKoM,GAAWxJ,EAAAA,IAAqBe,GAAGd,EAAAA,OAGpC,iBAAbsJ,EACK7O,OAAOC,KAAKyC,EAAKoM,GAAWxJ,EAAAA,KAAsBa,YAD3D,CAGF,CAEA,SAAS4I,EAAIC,EAAQC,EAAMC,GAAe,IAADC,EACvC,MAAMlC,EAAQgC,EAAK1M,MAAM,KACzB,IAAK,IAAI6M,KAAQnC,EAAO,CACtB,IAAK+B,EAAQ,OAAOE,EACpBF,EAASA,EAAOI,EAClB,CACA,OAAa,QAAbD,EAAOH,SAAM,IAAAG,EAAAA,EAAID,CACnB,CAEA,SAASG,EAAKzI,GACZ,MAAqB,kBAAPA,EAAmBZ,GAAM+I,EAAI/I,EAAGY,GAAMA,CACtD,CAEO,SAAS0I,EAAOC,EAAO3I,GAE5B,OADAA,EAAKyI,EAAKzI,GACH2I,EAAMpJ,MAAK,CAACC,EAAGC,KACpB,MAAMmJ,EAAK5I,EAAGR,GACRqJ,EAAK7I,EAAGP,GACd,OAAImJ,EAAKC,GAAY,EACjBD,EAAKC,EAAW,EACb,CAAC,GAEZ,CAEO,SAASC,EAAUtJ,GACxB,OAAQA,EAAIjF,KAAKqG,GAAM,GACzB,CAEO,MAAMmI,EAaXC,WAAAA,CAAWC,GAAyD,IAAxD,IAAEC,EAAG,KAAEC,EAAI,IAAEC,EAAG,MAAErQ,EAAK,OAAEC,EAAM,WAAEqQ,EAAU,OAAEC,GAAQL,EAAA,KAFjEM,UAAY,IAAIC,EAAAA,IAGdC,KAAKP,IAAMA,EACXO,KAAKN,KAAOA,EACZM,KAAKL,IAAMA,EACXK,KAAK1Q,MAAQA,EACb0Q,KAAKzQ,OAASA,EAEdyQ,KAAKC,OAAS,IAAIF,EAAAA,IAChBN,EACAnQ,EAAQC,EACRmQ,EACAC,EAAM,GAGRK,KAAKC,OAAOnD,SAASoD,IAAI,EAAG,EAAGF,KAAKL,KAEpCK,KAAKG,KAAO1O,EAAAA,OAET2O,YAAY,CACXJ,KAAKK,cAAcL,KAAKL,KACxBK,KAAKK,cAAcL,KAAKN,QAEzBY,GAAG,QAASjN,IACX2M,KAAKO,cAAclN,GACnB2M,KAAKQ,aAAenN,EAAEoN,UAEtBZ,GAAUA,EAAOxM,EAAE,IAGvB2M,KAAKU,KAAOjP,EAAAA,OAAUmO,GACtBI,KAAKU,KAAKC,KAAKX,KAAKG,MACpBH,KAAKG,KAAKM,UACRT,KAAKU,KACLjP,EAAAA,aACGmP,UAAUZ,KAAK1Q,MAAQ,EAAG0Q,KAAKzQ,OAAS,GACxC8N,MAAM2C,KAAKK,cAAcL,KAAKL,MAErC,CAEAY,aAAAA,CAAclN,GACZ,MAAMgK,EAAQhK,EAAEoN,UAAU3G,EACpBtI,IAAM6B,EAAEoN,UAAUjP,EAAIwO,KAAK1Q,MAAQ,GAAK+N,EACxC1L,GAAK0B,EAAEoN,UAAU9O,EAAIqO,KAAKzQ,OAAS,GAAK8N,EACxCwD,EAAIb,KAAKc,cAAczD,GAC7B2C,KAAKC,OAAOnD,SAASoD,IAAI1O,EAAGG,EAAGkP,EACjC,CAEAR,aAAAA,CAAcU,GACZ,MACMC,EAAmB3B,EADRW,KAAKP,IAAM,GAGtBwB,EAA+B,GADbnQ,KAAKoQ,IAAIF,GAAoBD,GAGrD,OADcf,KAAKzQ,OAAS0R,CAE9B,CAEAH,aAAAA,CAAczD,GACZ,MACM2D,EAAmB3B,EADRW,KAAKP,IAAM,GAI5B,OAFqBO,KAAKzQ,OAAS8N,GACO,EAAIvM,KAAKoQ,IAAIF,GAEzD,CAEAG,eAAAA,CAAgBC,EAAQC,EAAQC,GAS9B,OARAtB,KAAKF,UAAUyB,cACb,CACE/P,EAAG4P,EACHzP,EAAG0P,GAELrB,KAAKC,QAGAD,KAAKF,UAAUqB,gBAAgBG,EACxC,EAGK,MAAME,EAAajC,WAAAA,GAAA,KACxBkC,UAAY,IAAI1B,EAAAA,IAAiB,KACjC2B,IAAM,CAAE,CAERC,aAAAA,CAAcC,EAAYnB,EAAWoB,GAAe,IAARhB,EAAC9M,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9C,MAAM+N,EAAU,GAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAW5Q,OAAQ+Q,IAAK,CAC1C,MAAO7I,EAAIC,EAAIC,GAAMwI,EAAWG,GAE1BhM,EAAI,IAAIgK,EAAAA,IAAcU,EAAUjP,EAAI0H,EAAG,GAAIuH,EAAU9O,EAAIuH,EAAG,GAAI2H,GAChE7K,EAAI,IAAI+J,EAAAA,IAAcU,EAAUjP,EAAI2H,EAAG,GAAIsH,EAAU9O,EAAIwH,EAAG,GAAI0H,GAChEmB,EAAI,IAAIjC,EAAAA,IAAcU,EAAUjP,EAAI4H,EAAG,GAAIqH,EAAU9O,EAAIyH,EAAG,GAAIyH,GACtEb,KAAKyB,UAAUzE,SAASrK,KAAKoD,EAAGC,EAAGgM,GAEnC,MAAMC,EAAO,IAAIlC,EAAAA,IACJ,EAAXC,KAAK0B,IAAU,EACJ,EAAX1B,KAAK0B,IAAU,EACJ,EAAX1B,KAAK0B,IAAU,GAGbG,IACFI,EAAKC,aAAavP,KAAKkP,GACvBI,EAAKC,aAAavP,KAAKkP,GACvBI,EAAKC,aAAavP,KAAKkP,IAGzB7B,KAAKyB,UAAUU,MAAMxP,KAAKsP,GAE1BH,EAAQnP,KAAKqN,KAAK0B,MACpB,CAEA,OAAOI,CACT,EAGK,SAASM,EAAahB,EAAQC,EAAQ/R,EAAOC,GAClD,MAAO,CACLiC,EAAI4P,EAAS9R,EAAS,EAAI,EAC1BqC,GAAK0P,EAAS9R,EAAU,EAAI,EAEhC,CAEO,SAAS8S,EAAYtE,GAC1B,MAAOuE,EAAOC,IAAavS,EAAAA,EAAAA,UAAS+N,GAC9ByE,GAAW9S,EAAAA,EAAAA,QAAOqO,IAExBnM,EAAAA,EAAAA,YAAU,KAAY4Q,EAAShT,QAAU8S,CAAM,GAAE,CAACA,IAElD,MAAMG,GAAWxE,EAAAA,EAAAA,cAAatI,IAC5B4M,EAAWC,EAAShT,QAAUmG,EAAG,GAChC,IAEH,MAAO,CAAC2M,EAAOG,EAAUD,EAC3B,C","sources":["BigBucketApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils/utils.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\nimport { MAX_DELIVS, objectivesData } from \"./data/objectivesData\";\r\n\r\nimport { bucketPath } from \"./bucket-lib/utils\";\r\nimport { createInterps, criteriaSort } from \"./utils/utils\";\r\n\r\nconst LEVELS = 10;\r\nconst LINE_WIDTH = 3;\r\nconst DEFAULT_OBJECTIVE_IDX = 0;\r\n\r\nexport default function BigBucketApp({ width = 600, height = 600 }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () => criteriaSort(\"median\", objectivesData, objectiveIDs[curObjectiveIdx]),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const curPercentileScens = useMemo(() => {\r\n    return Array.from(orderedScenIDs).filter((_, i) =>\r\n      ticksExact(0, 0.9, 20)\r\n        .map((d) => Math.floor((d + 0.05) * orderedScenIDs.length))\r\n        .includes(i)\r\n    );\r\n  }, [orderedScenIDs]);\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      ticksExact(0, 1, LEVELS + 1).map((d) =>\r\n        curPercentileScens.map((s) =>\r\n          createInterps(\r\n            objectiveIDs[curObjectiveIdx],\r\n            s,\r\n            objectivesData,\r\n            MAX_DELIVS\r\n          )(d)\r\n        )\r\n      ),\r\n    [curPercentileScens, curObjectiveIdx]\r\n  );\r\n\r\n  const innerWidth = width - LINE_WIDTH * 2;\r\n  const innerHeight = height - LINE_WIDTH;\r\n\r\n  const x = d3.scaleLinear().range([0, innerWidth]);\r\n  const y = d3.scaleLinear().range([innerHeight, 0]);\r\n\r\n  useEffect(() => {\r\n    const svgContainer = bucketSvgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-container\")\r\n      .attr(\"transform\", `translate(${LINE_WIDTH}, ${LINE_WIDTH / 2})`);\r\n\r\n    svgContainer\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask\")\r\n      .append(\"path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight));\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"clip-path\", `url(#bucket-mask)`);\r\n\r\n    svgContainer\r\n      .append(\"path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight).split(\"z\")[0])\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    bucketSvgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\"path\")\r\n      .data(waterLevels)\r\n      .join(\"path\")\r\n      .attr(\"fill\", (_, i) => d3.interpolateBlues(i / waterLevels.length))\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"d\", (dd) => {\r\n        const ddd = [dd[0]];\r\n\r\n        for (let i = 1; i < dd.length; i++) {\r\n          ddd.push(dd[i - 1]);\r\n          ddd.push(dd[i]);\r\n        }\r\n\r\n        return (\r\n          d3\r\n            .area()\r\n            // .curve(d3.curveBasis)\r\n            .x(function (_, i) {\r\n              return x(Math.ceil(i / 2) / (dd.length - 1));\r\n            })\r\n            .y1((d) => y(d))\r\n            .y0(() => y(0))(ddd)\r\n        );\r\n      });\r\n  }, [waterLevels]);\r\n\r\n  return (\r\n    <div className=\"big-bucket-wrapper\">\r\n      <select\r\n        value={curObjectiveIdx}\r\n        onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n      >\r\n        {objectiveIDs.map((objectiveID, i) => (\r\n          <option name={i} value={i}>\r\n            {objectiveID}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <svg ref={(e) => void (bucketSvgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils/utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"../data/objectivesData\";\r\nimport { ticksExact } from \"../bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n"],"names":["LEVELS","LINE_WIDTH","DEFAULT_OBJECTIVE_IDX","BigBucketApp","_ref","width","height","current","objectiveIDs","useRef","Object","keys","objectivesData","curObjectiveIdx","setCurObjectiveIdx","useState","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","curPercentileScens","Array","from","filter","_","i","ticksExact","map","d","Math","floor","length","includes","waterLevels","s","createInterps","MAX_DELIVS","innerWidth","innerHeight","x","d3","range","y","useEffect","svgContainer","attr","append","concat","bucketPath","split","select","selectAll","data","join","transition","duration","dd","ddd","push","ceil","y1","y0","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","objectiveID","name","ref","start","stop","count","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","interpolateWatercolorBlue","SCENARIO_KEY_STRING","DELIV_KEY_STRING","DELIV_KEY_STRING_UNORD","async","objs","fetch","json","obj","scen","unord","v","min","max","sort","a","b","mapBy","console","log","_ref2","scenarioIDs","values","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","PI","closePath","DROPLET_SHAPE","percentToRatioFilled","p","CIRC_RAD","SQRT1_2","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","sin","yToSpriteY","spriteYToY","sy","waterdropDeltaOutline","yStart","yEnd","abs","rad","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","v1","v2","v3","v4","reverse","waterdropDelta","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","random","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","nodes","AREA","r","sqrt","placeDropsUsingPhysics","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","id","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","_ref4","useStickyScale","defaultVal","val","setVal","useCallback","obj_name","scen_name","maxDelivs","delivs","domain","clamp","criteria","objective","get","object","path","defaultValue","_object","part","pick","sortBy","array","va","vb","toRadians","Camera","constructor","_ref5","fov","near","far","domElement","zoomFn","raycaster","THREE","this","camera","set","zoom","scaleExtent","getScaleFromZ","on","d3ZoomHandler","curTransform","transform","view","call","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","intersectObject","mouseX","mouseY","mesh","setFromCamera","MeshGeometry","threeGeom","idx","addMeshCoords","meshCoords","color","indices","j","c","face","vertexColors","faces","mouseToThree","useStateRef","state","_setState","stateRef","setState"],"sourceRoot":""}