{"version":3,"file":"static/js/864.a0c363b5.chunk.js","mappings":"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","sources":["ScenarioDropletsApp.jsx","bucket-lib/bucket-glyph.js","bucket-lib/utils.js","data/objectivesData.jsx","utils/common.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"bucket-lib/utils\";\r\nimport { MAX_DELIVS, objectivesData } from \"data/objectivesData\";\r\nimport {\r\n  DROPLET_SHAPE,\r\n  createInterps,\r\n  criteriaSort,\r\n  placeDropsUsingPhysics,\r\n} from \"utils/common\";\r\n\r\nconst LEVELS = 5;\r\nconst DEFAULT_OBJECTIVE_IDX = 2;\r\nconst RAD_PX = 8;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst DROPLET_PAD_FACTOR = 2.5;\r\n\r\nexport default function ScenarioDropletsApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n  const [normalize, setNormalize] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () =>\r\n      criteriaSort(\r\n        \"median\",\r\n        objectivesData,\r\n        objectiveIDs[curObjectiveIdx]\r\n      ).reverse(),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      orderedScenIDs.map((s) => {\r\n        const i = createInterps(\r\n          objectiveIDs[curObjectiveIdx],\r\n          s,\r\n          objectivesData,\r\n          MAX_DELIVS\r\n        );\r\n        return ticksExact(0, 1, LEVELS + 1).map((d, j) => i(d));\r\n      }),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const zoomRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    zoomRef.current = d3\r\n      .zoom()\r\n      .scaleExtent([1, 10])\r\n      .translateExtent([\r\n        [-width / 2, -height / 2],\r\n        [width * 1.5, height * 1.5],\r\n      ])\r\n      .on(\"zoom\", function (e) {\r\n        bucketSvgSelector.current\r\n          .select(\".svg-trans\")\r\n          .attr(\"transform\", e.transform);\r\n\r\n        bucketSvgSelector.current\r\n          .selectAll(\".text-scale\")\r\n          .attr(\"transform\", `scale(${1 / e.transform.k})`);\r\n      })\r\n      .on(\r\n        \"start\",\r\n        (e) =>\r\n          (e.sourceEvent || {}).type !== \"wheel\" &&\r\n          bucketSvgSelector.current.style(\"cursor\", \"grabbing\")\r\n      )\r\n      .on(\"end\", () => bucketSvgSelector.current.style(\"cursor\", \"grab\"));\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .style(\"cursor\", \"grab\")\r\n      .call((s) => s.append(\"g\").attr(\"class\", \"svg-trans\"))\r\n      .call(zoomRef.current);\r\n\r\n    if (\r\n      searchParams.get(\"obj\") &&\r\n      objectiveIDs.includes(searchParams.get(\"obj\"))\r\n    ) {\r\n      setCurObjectiveIdx(objectiveIDs.indexOf(searchParams.get(\"obj\")));\r\n      setNormalize(searchParams.get(\"norm\") == \"true\");\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    bucketSvgSelector.current.call(zoomRef.current.transform, d3.zoomIdentity);\r\n\r\n    const nodes_pos = placeDropsUsingPhysics(\r\n      width / 2,\r\n      (height / 2) * 1.1,\r\n      waterLevels.map((levs, idx) => ({\r\n        r:\r\n          (normalize ? 1 : Math.max(levs[0], MIN_LEV_VAL)) *\r\n          RAD_PX *\r\n          DROPLET_PAD_FACTOR,\r\n        id: idx,\r\n      }))\r\n    );\r\n\r\n    const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n      levs: waterLevels[idx].map(\r\n        (w, i) => Math.max(w, i == 0 ? MIN_LEV_VAL : 0) * RAD_PX\r\n      ),\r\n      maxLev:\r\n        (normalize ? 1 : Math.max(waterLevels[idx][0], MIN_LEV_VAL)) * RAD_PX,\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 100 + 400,\r\n      startX: x,\r\n      startY: y - RAD_PX * 4 * Math.random(),\r\n      endX: x,\r\n      endY: y,\r\n      scen: orderedScenIDs[idx],\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".smallDrop\")\r\n      .data(nodes, (_, i) => i)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"smallDrop\")\r\n          .each(function ({ levs }, i) {\r\n            d3.select(this.parentNode)\r\n              .append(\"g\")\r\n              .attr(\"id\", `drop-${i}`)\r\n              .append(\"g\")\r\n              .attr(\"class\", \"text-scale\")\r\n              .append(\"text\")\r\n              .style(\"font-size\", 1)\r\n              .attr(\"text-anchor\", \"middle\");\r\n\r\n            const s = d3.select(this);\r\n            s.append(\"rect\")\r\n              .attr(\"class\", \"bbox\")\r\n              .style(\"visibility\", \"hidden\");\r\n\r\n            s.on(\"mouseover\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 0.5);\r\n              s.style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 1);\r\n            }).on(\"mouseout\", function () {\r\n              bucketSvgSelector.current\r\n                .selectAll(\".smallDrop\")\r\n                .style(\"opacity\", 1);\r\n              bucketSvgSelector.current\r\n                .select(`#drop-${i}`)\r\n                .style(\"opacity\", 0);\r\n            });\r\n\r\n            const stops = d3\r\n              .select(this)\r\n              .append(\"defs\")\r\n              .append(\"linearGradient\")\r\n              .attr(\"id\", `drop-fill-${i}`)\r\n              .attr(\"x1\", \"0%\")\r\n              .attr(\"x2\", \"0%\")\r\n              .attr(\"y1\", \"0%\")\r\n              .attr(\"y2\", \"100%\");\r\n            stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n            stops.append(\"stop\").attr(\"stop-color\", \"transparent\");\r\n\r\n            levs.forEach((_, i) => {\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n              stops\r\n                .append(\"stop\")\r\n                .attr(\"stop-color\", interpolateWatercolorBlue(i / LEVELS));\r\n            });\r\n\r\n            d3.select(this)\r\n              .append(\"path\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"class\", \"outline\")\r\n              .attr(\"fill\", \"none\")\r\n              .attr(\"stroke\", \"lightgray\")\r\n              .attr(\"stroke-width\", 0.05);\r\n\r\n            d3.select(this)\r\n              .append(\"path\")\r\n              .attr(\"class\", \"fill\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"fill\", `url(#drop-fill-${i})`);\r\n          });\r\n      })\r\n      .attr(\r\n        \"transform\",\r\n        ({ startX, startY, tilt }) =>\r\n          `translate(${startX}, ${startY}) rotate(${tilt})`\r\n      )\r\n      .style(\"opacity\", 0)\r\n      .each(function ({ levs, maxLev, scen }, i) {\r\n        const s = d3.select(this);\r\n\r\n        d3.select(`#drop-${i}`).style(\"opacity\", 0).select(\"text\").text(scen);\r\n\r\n        s.select(\".outline\").attr(\"transform\", `scale(${maxLev * 0.95})`);\r\n        s.select(\".fill\").attr(\"transform\", `scale(${maxLev})`);\r\n\r\n        if (normalize) s.select(\".outline\").style(\"display\", \"initial\");\r\n        else s.select(\".outline\").style(\"display\", \"none\");\r\n\r\n        s.selectAll(\"stop\").each(function (_, i) {\r\n          let actI = Math.floor(i / 2);\r\n          const isEnd = i % 2;\r\n\r\n          if (isEnd === 0) actI -= 1;\r\n\r\n          if (actI === -1) {\r\n            d3.select(this).attr(\"offset\", `${0}%`);\r\n          } else {\r\n            d3.select(this).attr(\r\n              \"offset\",\r\n              `${(1 - levs[actI] / maxLev) * 100}%`\r\n            );\r\n          }\r\n        });\r\n\r\n        s.transition()\r\n          .duration(({ dur }) => dur)\r\n          .ease(d3.easeLinear)\r\n          .attr(\r\n            \"transform\",\r\n            ({ endX, endY, tilt }) =>\r\n              `translate(${endX}, ${endY}) rotate(${tilt})`\r\n          )\r\n          .style(\"opacity\", 1)\r\n          .on(\"end\", () => {\r\n            const d = s.select(\".fill\");\r\n\r\n            s.select(\".bbox\")\r\n              .attr(\"x\", d.node().getBBox().x)\r\n              .attr(\"y\", d.node().getBBox().y)\r\n              .attr(\"width\", d.node().getBBox().width)\r\n              .attr(\"height\", d.node().getBBox().height);\r\n\r\n            bucketSvgSelector.current\r\n              .select(`#drop-${i}`)\r\n              .attr(\r\n                \"transform\",\r\n                `translate(${\r\n                  d.node().getBoundingClientRect().x +\r\n                  d.node().getBoundingClientRect().width / 2\r\n                }, ${d.node().getBoundingClientRect().y})`\r\n              );\r\n          });\r\n      });\r\n  }, [waterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div className=\"bubbles-input-area\">\r\n        <select\r\n          value={curObjectiveIdx}\r\n          onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n        >\r\n          {objectiveIDs.map((objectiveID, i) => (\r\n            <option name={i} value={i} key={i}>\r\n              {objectiveID}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"norm\"\r\n          checked={normalize}\r\n          onChange={() => void setNormalize((e) => !e)}\r\n        />\r\n        <label htmlFor=\"norm\">normalize</label>\r\n      </div>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nconst DEGREE_SWAY = 40;\r\nconst LINE_WIDTH = 3;\r\n\r\nlet maskCounter = 0;\r\n\r\n// ensures every mask id is unique\r\nfunction getMaskId() {\r\n  return maskCounter++;\r\n}\r\n\r\nfunction bucketGlyph(width, height, valueToLevelFn = d3.scaleLinear()) {\r\n  return function (data) {\r\n    return data.map((d) => ({\r\n      x: -width,\r\n      y: height - valueToLevelFn(d) * height - height / 2,\r\n      width: width * 2,\r\n      height: height * 2,\r\n    }));\r\n  };\r\n}\r\n\r\nfunction transitionSway(rects, multiplier = 1) {\r\n  // save previous value; we'll need it to calculate how much to sway between renders\r\n  rects.each(function (d) {\r\n    const s = d3.select(this);\r\n    const prevLevel = s.attr(\"cur-level\") || 0;\r\n\r\n    s.attr(\"prev-level\", prevLevel);\r\n    s.attr(\"cur-level\", d.y);\r\n  });\r\n\r\n  rects\r\n    .transition(\"liquidSway\")\r\n    .duration(2000)\r\n    .delay((_, i) => i * 10)\r\n    .ease(d3.easeQuad)\r\n    .attrTween(\"transform\", function (d, i) {\r\n      const s = d3.select(this);\r\n      const prevLiquidLevel = parseFloat(s.attr(\"prev-level\"));\r\n      const diff = (Math.abs(prevLiquidLevel - d.y) / 200) * multiplier;\r\n      return (t) =>\r\n        `rotate(${\r\n          Math.sin(\r\n            Math.min((Math.PI * 4 * t) / (0.5 * diff + 0.5), Math.PI * 4)\r\n          ) *\r\n          diff *\r\n          DEGREE_SWAY *\r\n          (1 - t)\r\n        }, ${0}, ${0})`;\r\n    });\r\n\r\n  const levelTransition = rects\r\n    .transition(\"liquidLevel\")\r\n    .ease(d3.easeElasticOut.period(0.6))\r\n    .delay((_, i) => i * (100 / rects.size()))\r\n    .duration(1000);\r\n\r\n  return levelTransition;\r\n}\r\n\r\nfunction bucketShape(\r\n  width,\r\n  height,\r\n  shapeFunc = drawBucketMask,\r\n  shapeOutlineFunc = shapeFunc\r\n) {\r\n  return function (s) {\r\n    const id = getMaskId();\r\n\r\n    s.append(\"defs\")\r\n      .attr(\"class\", \"clip-def\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask-\" + id)\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-mask-path\");\r\n\r\n    s.append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`)\r\n      .attr(\"clip-path\", `url(#bucket-mask-${id})`);\r\n\r\n    s.append(\"path\")\r\n      .attr(\"class\", \"bucket-outline\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`)\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n\r\n    s.call(\r\n      bucketShapeMask({\r\n        drawFunc: shapeFunc,\r\n        drawOutlineFunc: shapeOutlineFunc,\r\n        width,\r\n        height,\r\n      })\r\n    );\r\n  };\r\n}\r\n\r\nfunction bucketShapeMask({\r\n  drawFunc,\r\n  drawOutlineFunc = drawFunc,\r\n  width,\r\n  height,\r\n}) {\r\n  return function (s) {\r\n    const getPath = (fn) => {\r\n      const path = d3.path();\r\n      fn(path, width, height);\r\n      return path.toString();\r\n    };\r\n\r\n    s.select(\".bucket-mask-path\").attr(\"d\", getPath(drawFunc));\r\n    s.select(\".bucket-outline\").attr(\"d\", getPath(drawOutlineFunc));\r\n  };\r\n}\r\n\r\nfunction drawBucketMask(context, width, height) {\r\n  drawBucket(context, width, height, true);\r\n}\r\n\r\nfunction drawBucketOutline(context, width, height) {\r\n  drawBucket(context, width, height, false);\r\n}\r\n\r\nfunction drawBucket(context, width, height, closed) {\r\n  const taper = 0.8;\r\n  const bottomRight = (width * taper) / 2,\r\n    bottomLeft = -(width * taper) / 2;\r\n\r\n  context.moveTo(width / 2, -height / 2);\r\n  context.lineTo(bottomRight, height / 2);\r\n  context.lineTo(bottomLeft, height / 2);\r\n  context.lineTo(-width / 2, -height / 2);\r\n\r\n  if (closed) context.closePath();\r\n}\r\n\r\nfunction drawDroplet(context, width, height) {\r\n  const hypToRad = Math.SQRT2;\r\n\r\n  // dimensions in \"rad\" units\r\n  const dropHeight = 1 + 1 * hypToRad;\r\n\r\n  const radToHeight = 1 / dropHeight;\r\n\r\n  const rad = Math.min(width / 2, height * radToHeight);\r\n  const hyp = rad / (1 / hypToRad);\r\n  const heightActual = rad + hyp;\r\n\r\n  context.moveTo(0, -heightActual / 2);\r\n  context.lineTo(hyp / 2, -heightActual / 2 + hyp / 2);\r\n  context.arc(0, -heightActual / 2 + hyp, rad, -Math.PI / 4, (Math.PI * 5) / 4);\r\n  context.closePath();\r\n}\r\n\r\nexport {\r\n  bucketGlyph,\r\n  transitionSway,\r\n  bucketShape,\r\n  bucketShapeMask,\r\n  drawBucketMask,\r\n  drawBucketOutline,\r\n  drawDroplet,\r\n};\r\n","import * as d3 from \"d3\";\r\nimport { drawBucketMask } from \"./bucket-glyph\";\r\n\r\nfunction distributeQuantiles(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\nconst interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n\r\nfunction levelToDropletLevel(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nfunction ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nfunction bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  const getPath = (fn) => {\r\n    const path = d3.path();\r\n    fn(path, width, height);\r\n    return path.toString();\r\n  };\r\n\r\n  return getPath(drawBucketMask);\r\n}\r\n\r\nexport {\r\n  distributeQuantiles,\r\n  interpolateWatercolorBlue,\r\n  levelToDropletLevel,\r\n  WATERDROP_ICON,\r\n  ticksExact,\r\n  bucketPath,\r\n};\r\n","import { mapBy } from \"utils/common\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"data/objectivesData\";\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  raycaster = new THREE.Raycaster();\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n\r\n  intersectObject(mouseX, mouseY, mesh) {\r\n    this.raycaster.setFromCamera(\r\n      {\r\n        x: mouseX,\r\n        y: mouseY,\r\n      },\r\n      this.camera\r\n    );\r\n\r\n    return this.raycaster.intersectObject(mesh);\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return {\r\n    x: (mouseX / width) * 2 - 1,\r\n    y: -(mouseY / height) * 2 + 1,\r\n  };\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n"],"names":["LEVELS","DEFAULT_OBJECTIVE_IDX","RAD_PX","MIN_LEV_VAL","DROPLET_PAD_FACTOR","ScenarioDropletsApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","curObjectiveIdx","setCurObjectiveIdx","useState","normalize","setNormalize","searchParams","useSearchParams","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","reverse","waterLevels","map","s","i","createInterps","MAX_DELIVS","ticksExact","d","j","zoomRef","useLayoutEffect","width","window","innerWidth","height","innerHeight","d3","scaleExtent","translateExtent","on","e","select","attr","transform","selectAll","concat","k","sourceEvent","type","style","call","append","get","includes","indexOf","nodes","placeDropsUsingPhysics","levs","idx","r","Math","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","endX","endY","scen","data","_","join","enter","each","_ref3","this","parentNode","stops","forEach","interpolateWatercolorBlue","DROPLET_SHAPE","_ref4","_ref5","text","actI","floor","transition","duration","_ref6","ease","_ref7","node","getBBox","getBoundingClientRect","_jsxs","className","children","_jsx","value","onChange","parseInt","target","objectiveID","name","checked","htmlFor","ref","DEGREE_SWAY","LINE_WIDTH","maskCounter","bucketGlyph","valueToLevelFn","arguments","length","undefined","transitionSway","rects","multiplier","prevLevel","delay","attrTween","prevLiquidLevel","parseFloat","diff","abs","t","sin","min","PI","period","size","bucketShape","shapeFunc","drawBucketMask","shapeOutlineFunc","drawFunc","drawOutlineFunc","getPath","fn","path","toString","bucketShapeMask","context","drawBucket","drawBucketOutline","closed","bottomRight","bottomLeft","moveTo","lineTo","closePath","drawDroplet","hypToRad","SQRT2","radToHeight","rad","hyp","heightActual","arc","distributeQuantiles","numericBins","unitsPerQuantile","maxQuantiles","quantileBins","bin","round","sum","Infinity","levelToDropletLevel","p","start","stop","count","bucketPath","SCENARIO_KEY_STRING","DELIV_KEY_STRING","DELIV_KEY_STRING_UNORD","async","objs","fetch","json","obj","unord","v","Array","from","sort","a","b","mapBy","console","log","scenarioIDs","values","newObjs","groupBy","key","WATERDROP_ICON","draw","percentToRatioFilled","CIRC_RAD","SQRT1_2","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","yToSpriteY","spriteYToY","sy","waterdropDeltaOutline","yStart","yEnd","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","push","waterdropDelta","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","AREA","sqrt","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","retVal","useStickyScale","defaultVal","val","setVal","useCallback","obj_name","scen_name","maxDelivs","delivs","domain","range","clamp","criteria","objective","object","defaultValue","_object","split","part","pick","sortBy","array","va","vb","toRadians","Camera","constructor","fov","near","far","domElement","zoomFn","raycaster","THREE","camera","set","zoom","getScaleFromZ","d3ZoomHandler","curTransform","view","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","intersectObject","mouseX","mouseY","mesh","setFromCamera","MeshGeometry","threeGeom","addMeshCoords","meshCoords","color","indices","c","face","vertexColors","faces","mouseToThree","useStateRef","state","_setState","stateRef","useEffect","setState"],"sourceRoot":""}