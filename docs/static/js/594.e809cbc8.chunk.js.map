{"version":3,"file":"static/js/594.e809cbc8.chunk.js","mappings":"6PAkBA,MAAMA,EAAS,EACTC,EAAS,EACTC,EAAc,GACdC,EAAe,GACfC,EAA2B,IAC3BC,EAAU,EAED,SAASC,EAAqBC,GAA0B,IAAzB,WAAEC,GAAa,GAAOD,EAClE,MAAQE,QAASC,IAAiBC,EAAAA,EAAAA,QAAOC,OAAOC,KAAKC,EAAAA,KAC/CC,GAAWC,EAAAA,EAAAA,MACXC,GAASN,EAAAA,EAAAA,WACRO,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAErCC,GAAoBV,EAAAA,EAAAA,UACpBW,GAAaX,EAAAA,EAAAA,UAEbY,GAAoBC,EAAAA,EAAAA,UAAQ,KAChC,MAAMC,EAAsB,CAAC,EACvBC,EAAY,CAAC,EAGnBhB,EAAaiB,SACVC,GACEH,EAAoBG,IAAOC,EAAAA,EAAAA,IAAa,SAAUf,EAAAA,GAAgBc,GAChEE,QAAO,CAACC,EAAGC,IAAMA,EAAI7B,GAAgB,IACrC8B,YAGP,MAAMC,EAAMC,KAAKC,MAAMX,EAAoBf,EAAa,IAAI2B,OAAS,GAmBrE,OAlBmB3B,EAAa4B,MAAK,CAACC,EAAGC,IAErCC,EAAAA,IACE3B,EAAAA,GAAeyB,GAAGG,EAAAA,IAAqBjB,EAAoBc,GAAGL,IAC5DS,EAAAA,KAGJF,EAAAA,IACE3B,EAAAA,GAAe0B,GAAGE,EAAAA,IAAqBjB,EAAoBe,GAAGN,IAC5DS,EAAAA,OAMGhB,SACRC,IAAcF,EAAUE,GAAOH,EAAoBG,EACtD,IACOF,CAAS,GACf,IAEGkB,GAAmBpB,EAAAA,EAAAA,UAAQ,KAC/B,MAAMqB,EAAS,CAAC,EAShB,OAPAnC,EAAaiB,SAASC,IACpBiB,EAAOjB,GAAOL,EAAkBK,GAAKkB,KAAKC,IACxC,MAAMf,GAAIgB,EAAAA,EAAAA,IAAcpB,EAAKmB,EAAGjC,EAAAA,GAAgBmC,EAAAA,IAChD,OAAOC,EAAAA,EAAAA,IAAW,EAAG,EAAGlD,EAAS,GAAG8C,KAAKK,GAAMnB,EAAEmB,IAAG,GACpD,IAGGN,CAAM,GACZ,IAkNH,OAhNAO,EAAAA,EAAAA,kBAAgB,KACdnC,EAAOR,QAAU,CACf4C,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAGjBpC,EAAkBZ,QACfiD,KAAK,QAASzC,EAAOR,QAAQ4C,OAC7BK,KAAK,SAAUzC,EAAOR,QAAQ+C,OAAO,GACvC,KAEHJ,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAQpC,EAAOR,QAAQ4C,MAC3BG,EAASvC,EAAOR,QAAQ+C,OAEpBG,EAAW/C,OAAOC,KAAK+B,GAC1BE,KAAKlB,IAGagC,EAAAA,EAAAA,IACf,EACA,EACAhB,EAAiBhB,GAAKkB,KAAI,CAACe,EAAMC,KAAG,CAClCC,EAAG5B,KAAK6B,IACN,EAPQ,GAQP9C,EAAY,EAAIiB,KAAK6B,IAAIH,EAAK,GAAI3D,IAEjCD,EACAG,GAEJ6D,GAAIH,OAIehB,KAAIoB,IAAA,IAAGD,GAAIH,EAAG,EAAEK,EAAC,EAAEC,GAAGF,EAAA,MAAM,CACjDL,KAAMjB,EAAiBhB,GAAKkC,GAAKhB,KAC/B,CAACuB,EAAGrC,IAnBM,EAoBRG,KAAK6B,IAAIK,EAAQ,GAALrC,EAAS9B,EAAc,IAElCgB,EACG,EAAIiB,KAAK6B,IAAIpB,EAAiBhB,GAAKkC,GAAK,GAAI5D,GAC5C,GACJD,IAEJqE,QACGpD,EACG,EA7BM,EA8BNiB,KAAK6B,IAAIpB,EAAiBhB,GAAKkC,GAAK,GAAI5D,IAC5CD,EACFsE,KAAsB,GAAhBpC,KAAKqC,SAAgB,GAC3BC,IAAqB,IAAhBtC,KAAKqC,SAAiB,IAC3BE,OAAQP,EACRQ,OAAQP,EACRxC,MACD,MAIFK,UAEG2C,EAAiB,CAAC,EAElBC,GAAgBjB,EAAAA,EAAAA,IACpB,EACA,EACAD,EAASb,KAAI,CAACgC,EAAWhB,KAAG,CAC1BC,EAAIa,EAAed,GAAO3B,KAAK6B,IAC7B,EAC8D,EAA9D7B,KAAK4C,KAAKtC,EAAAA,IAAOqC,EAAUhC,KAAKK,GAAMA,EAAEmB,UAAWnC,KAAK6C,KAE1Df,GAAIH,OAENhB,KAAI,CAAAmC,EAAWjD,KAAC,IAAX,EAAEmC,EAAC,EAAEC,GAAGa,EAAA,MAAS,CACtBd,IACAC,IACAG,KAAsB,GAAhBpC,KAAKqC,SAAgB,GAC3BT,EAAGa,EAAe5C,GACnB,IAEDV,EAAWb,QAAUY,EAAkBZ,QACpCyE,UAAU,cACVC,KAAKxB,GAAU,CAACyB,EAAGpD,IAAMoD,EAAE,GAAGxD,MAC9ByD,MAAMC,GACLA,EAAMC,OAAO,KAAKC,MAAK,SAAUrC,EAAGnB,GAClC,MAAMe,EAAIN,EAAAA,IAAUgD,MAEX,GAALzD,GACFX,EAAkBZ,QACf8E,OAAO,QACP7B,KAAK,KAAM,WACXA,KAAK,iBAAkB,QACvBA,KAAK,QAASzC,EAAOR,QAAQ4C,OAC7BK,KAAK,SAAUzC,EAAOR,QAAQ+C,QAC9BE,KAAK,OAAQ,SACbA,KAAK,UAAW,IAChBA,KAAK,aAAc,UAGxBjB,EAAAA,IAAUgD,KAAKC,YACZH,OAAO,QACP7B,KAAK,cAAe,UACpBA,KAAK,KAAK,QAADiC,OAAU3D,IACtBe,EAAEwC,OAAO,KAAK7B,KAAK,QAAS,eAE5BX,EAAEwC,OAAO,QAAQ7B,KAAK,QAAS,QAAQkC,MAAM,aAAc,UAE3D7C,EAAE8C,GAAG,aAAa,WAChBpD,EAAAA,IAAU,SAADkD,OAAU3D,IAAK4D,MAAM,UAAW,GACzCnD,EAAAA,IAAU,YAAYmD,MAAM,aAAc,WAC1CnD,EAAAA,IAAUgD,MAAMK,OAClB,IAAGD,GAAG,YAAY,WAChBpD,EAAAA,IAAU,SAADkD,OAAU3D,IAAK4D,MAAM,UAAW,GACzCnD,EAAAA,IAAUgD,MAAMM,QAChBtD,EAAAA,IAAU,YAAYmD,MAAM,aAAc,SAC5C,GACF,MAEDlC,KAAK,QAAS,aACdA,KACC,aACA,CAAC3B,EAAGC,IAAC,aAAA2D,OACUd,EAAc7C,GAAGmC,EAAId,EAAQ,EAAC,MAAAsC,OACzCd,EAAc7C,GAAGoC,EAAIZ,EAAS,EAAC,OAGpCgC,MAAK,SAAUQ,EAAOC,GACrB,MAAMlD,EAAIN,EAAAA,IAAUgD,MAEpBhD,EAAAA,IAAU,SAADkD,OAAUM,IAAMC,KAAKF,EAAM,GAAGpE,KAAKgE,MAAM,UAAW,GAC7DnD,EAAAA,IAAUgD,MACPU,OAAO,gBACPzC,KAAK,YAAY,UAADiC,OAAYd,EAAcoB,GAAI1B,KAAI,MAClDW,UAAU,cACVC,KAAKa,GAAO,CAACjE,EAAGC,IAAMA,IACtBqD,MAAMC,GACEA,EACJC,OAAO,KACP7B,KAAK,QAAS,aACd8B,MAAK,SAAAY,EAAoBC,GAAK,IAAf,KAAExC,GAAMuC,EACtB3D,EAAAA,IAAUgD,MACPF,OAAO,QACPA,OAAO,YACP7B,KAAK,KAAK,aAADiC,OAAeM,EAAE,KAAAN,OAAIU,IAC9Bd,OAAO,QACP7B,KAAK,IAAK4C,EAAAA,IACb7D,EAAAA,IAAUgD,MACPF,OAAO,KACP7B,KAAK,YAAY,kBAADiC,OAAoBM,EAAE,KAAAN,OAAIU,EAAE,MAC5CnB,UAAU,QACVC,KAAKtB,GAAM,CAAC9B,EAAGC,IAAMA,IACrBqD,KAAK,QACL3B,KAAK,QAAQ,CAAC3B,EAAGC,KAChBuE,EAAAA,EAAAA,IAA0BvE,EAAIhC,IAEpC,MAEH0D,KACC,aACA8C,IAAA,IAAC,OAAE9B,EAAM,OAAEC,EAAM,KAAEJ,GAAMiC,EAAA,mBAAAb,OACVjB,EAAM,MAAAiB,OAAKhB,EAAM,aAAAgB,OAAYpB,EAAI,QAEjDiB,MAAK,SAAAiB,GAA6B,IAAnB,KAAE5C,EAAI,OAAES,GAAQmC,EAC9BhE,EAAAA,IAAUgD,MACPP,UAAU,QACVC,KAAKtB,GAAM,CAAC9B,EAAGC,IAAMA,IACrB0B,KAAK,QAAkB,EAATY,GACdZ,KAAK,SAAmB,EAATY,GACfZ,KAAK,KAAMY,GACXZ,KACC,KACCgD,GACCpC,EAASnC,KAAKwE,SACdC,EAAAA,EAAAA,IAAqBF,EAAIpC,IACtBA,GAAU,EAAInC,KAAKwE,WACf,IAAND,EAAUrG,EAAU,KAE3BoC,EAAAA,IAAUgD,MACPU,OAAO,QACPzC,KAAK,YAAY,SAADiC,OAAWrB,EAAM,KACtC,IAEF,MAAMnB,EAAIJ,EAAEoD,OAAO,gBAEnBpD,EAAE8C,GAAG,SAAS,WACZ9E,EAAS,kCAAD4E,OAC4BK,EAAM,GAAGpE,IAAG,UAAA+D,OAC5CzE,EAAY,OAAS,SAG3B,IAEA6B,EAAEoD,OAAO,SACNzC,KAAK,IAAKP,EAAE0D,OAAOC,UAAU3C,GAC7BT,KAAK,IAAKP,EAAE0D,OAAOC,UAAU1C,GAC7BV,KAAK,QAASP,EAAE0D,OAAOC,UAAUzD,OACjCK,KAAK,SAAUP,EAAE0D,OAAOC,UAAUtD,QAErCnC,EAAkBZ,QACf0F,OAAO,SAADR,OAAUM,IAChBvC,KACC,IACAP,EAAE0D,OAAOE,wBAAwB5C,EAC/BhB,EAAE0D,OAAOE,wBAAwB1D,MAAQ,GAE5CK,KAAK,IAAKP,EAAE0D,OAAOE,wBAAwB3C,EAChD,GAAE,GACH,CAACxB,EAAkB1B,KAGpB8F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLnD,GAAG,OACHoD,QAASnG,EACToG,SAAUA,KAAWnG,GAAcoG,IAAOA,GAAG,KAE/CJ,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,OAAMN,SAAC,kBAExBC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,uBAAyBzG,EAAa,WAAa,IAAI0G,UACrEC,EAAAA,EAAAA,KAAA,OACEF,UAAW,eAAiBzG,EAAa,WAAa,IACtDiH,IAAMF,IAAYlG,EAAkBZ,QAAUgC,EAAAA,IAAU8E,EAAI,QAKtE,C,gHChTO,SAASrE,EAAWwE,EAAOC,EAAMC,GACtC,OAAOnF,EAAAA,IAASmF,GAAO9E,KAAKd,GAAOA,GAAK4F,EAAQ,IAAOD,EAAOD,GAASA,GACzE,CAEO,SAASG,EAAWxE,EAAOG,GAAoC,IAA5BsE,EAAMC,UAAA1F,OAAA,QAAA2F,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAKE,EAAKF,UAAA1F,OAAA,QAAA2F,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC1DG,EAAc7E,EAAQ4E,EAAS5E,GAAS,EAAI4E,GAAU,EACxDE,EAAc9E,GAAS,EAAI4E,GAAU,EACnC9C,EAAO,CACT,CACEhB,EAAG1B,EAAAA,IAAeyF,EAAa7E,EAA5BZ,CAAmCqF,GACtC1D,EAAG3B,EAAAA,IAAee,EAAQ,EAAvBf,CAA0BqF,IAE/B,CAAE3D,EAAG+D,EAAa9D,EAAGZ,GACrB,CAAEW,EAAGgE,EAAY/D,EAAGZ,GACpB,CACEW,EAAG1B,EAAAA,IAAe0F,EAAY,EAA3B1F,CAA8BqF,GACjC1D,EAAG3B,EAAAA,IAAee,EAAQ,EAAvBf,CAA0BqF,KAWjC,OARerF,EAAAA,MAEZ0B,GAAE,SAAUhB,GACX,OAAOA,EAAEgB,CACX,IACCC,GAAE,SAAUjB,GACX,OAAOA,EAAEiB,CACX,GACKgE,CAASjD,GAAQ,GAC1B,CAEO,SAASkD,EAAaC,EAAaC,EAAkBC,GAC1D,IAAIH,EAAeC,EAAYxF,KAAK2F,GAClCtG,KAAKuG,MAAMD,EAAIpG,OAASkG,KAEtBI,EAAMlG,EAAAA,IAAO4F,GAEjB,KAAOM,EAAMH,GACXH,EACE5F,EAAAA,IAAY6F,GAAa,CAACnF,EAAGnB,IACd,IAAbmB,EAAEd,OACEc,EAAEd,OAASkG,EAAmBF,EAAarG,GAC3C4G,QAEH,EAELD,EAAMlG,EAAAA,IAAO4F,GAGf,KAAOM,EAAMH,GACXH,EACE5F,EAAAA,IAAY6F,GAAa,CAACnF,EAAGnB,IACd,IAAbmB,EAAEd,OACEc,EAAEd,OAASkG,EAAmBF,EAAarG,IAC1C4G,QAEJ,EAELD,EAAMlG,EAAAA,IAAO4F,GAGf,OAAOA,CACT,CAGO,SAASQ,EAAYC,EAAOC,GAEjC,MAAMtB,GAAM9G,EAAAA,EAAAA,QAAO,CACjBmI,MAAOA,EACPE,KAAM,OAGFvI,EAAUgH,EAAIhH,QAAQqI,MAa5B,OARIC,EAAeA,EAAYD,EAAOrI,GAAWqI,IAAUrI,KACzDgH,EAAIhH,QAAU,CACZqI,MAAOA,EACPE,KAAMvI,IAKHgH,EAAIhH,QAAQuI,IACrB,CAEO,MAAMzC,EAA6BvE,GACxCS,EAAAA,GAAoBA,EAAAA,IAAe,CAAC,GAAK,GAArBA,CAA2BT,G,sIC1F1C,MAAMiB,EAAa,KACbP,EAAsB,QACtBC,EAAmB,SAEnB7B,QAAwBmI,iBACnC,MAAMC,cAAoBC,MAAM,0BAA0BC,OAE1D,IAAK,MAAMxH,KAAOsH,EAAM,CACtBtH,EAAIc,GAAuBd,EAAIc,GAC/B,IAAK,MAAM2G,KAAQzH,EAAIc,GACrB2G,EAAK1G,GAAoB0G,EAAK1G,GAAkBG,KAAKwG,GACnDnH,KAAKoH,IAAIpH,KAAK6B,IAAI,EAAGsF,GAAIrG,KACzBX,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAEvBX,EAAIc,IAAuB8G,EAAAA,EAAAA,IACzB5H,EAAIc,IACJnC,IAAA,IAAC,KAAEkJ,GAAMlJ,EAAA,OAAKkJ,CAAI,GAEtB,CAIA,OAFAC,QAAQC,IAAI,kCAELH,EAAAA,EAAAA,IAAMN,GAAMhF,IAAA,IAAC,IAAEtC,GAAKsC,EAAA,OAAKtC,CAAG,GACrC,CAnBqCqH,G,mOCa9B,SAASO,EAAMN,EAAMU,GAC1B,MAAMC,EAAUjJ,OAAOkJ,QAAQZ,EAAMU,GAErC,IAAK,MAAMG,KAAOnJ,OAAOC,KAAKgJ,GAC5BA,EAAQE,GAAOF,EAAQE,GAAK,GAG9B,OAAOF,CACT,C,4BAGO,MAAMG,EAAiB,CAC5BC,KAAM,SAAUC,EAASC,GACvBD,EAAQE,OAAO,GAAID,EAAO,GAC1BD,EAAQG,OAAOF,EAAO,GAAIA,EAAO,GAEjCD,EAAQI,IAAI,EAAG,EAAGH,EAAOhI,KAAKoI,MAAQ,GAAIpI,KAAK6C,GAAK,EAAc,EAAV7C,KAAK6C,GAAU,GACvEkF,EAAQG,OAAO,GAAIF,EAAO,GAC1BD,EAAQM,WACV,GAIWlE,EAAgB,mDAEtB,SAASM,EAAqB6D,GAEnC,OADAA,GAAK,MACEtI,KAAKoH,IACV,EACApH,KAAK6B,IACH,GACC,OAASyG,GAAK,EAAI,OAASA,GAAK,EAAI,OAASA,EAAI,OAAU,QAGlE,CAEO,SAASC,EAAuBC,EAAQC,GAC7C,OAAO,SAAUC,GACf,OAAOD,EAAE9H,KAAI,SAAUqB,GACrB,MAAO,CACLA,EACA1B,EAAAA,IAAQoI,GAAG,SAAUvB,GACnB,OAAOqB,EAAOxG,EAAImF,EACpB,IAEJ,GACF,CACF,CAEO,SAASwB,EAAmBC,GACjC,OAAO,SAAUzB,GACf,OAAOnH,KAAK6I,IAAK1B,GAAKyB,IAAO,EAAK,KAAQ,EAAIzB,EAAIA,GAAMyB,EAAI,CAC9D,CACF,CAEA,SAASE,EAAkB5H,GACzB,MAAM6H,EAAM7H,EAAQ,EAEd8H,EAAmB,EAAVhJ,KAAK6C,GAAU,EADX,GAGboG,EAAQ,CACZ,CACEjH,EAAGhC,KAAKkJ,IAAe,EAAVlJ,KAAK6C,GAAU,GAAKkG,EACjC9G,EAAGjC,KAAKmJ,IAAe,EAAVnJ,KAAK6C,GAAU,GAAKkG,GAEnC,CACE/G,EAAG,EACHC,GAAIjC,KAAKoI,MAAQW,IAIrB,IAAK,IAAIlJ,EAAI,EAAGA,GAdG,GAccA,IAC/BoJ,EAAMG,KAAK,CACTpH,EAAGhC,KAAKkJ,IAAIrJ,EAAImJ,EAAQhJ,KAAK6C,GAAK,GAAKkG,EACvC9G,EAAGjC,KAAKmJ,IAAItJ,EAAImJ,EAAQhJ,KAAK6C,GAAK,GAAKkG,IAI3C,OAAOE,CACT,CAEO,SAASI,EAAoBC,EAAO7D,GACzC,MAAM8D,EAASC,IAAAA,OAAcC,OAAOH,GAE9BI,EAAOH,EAAOnC,IAAIpF,EACtB2H,EAAOJ,EAAO1H,IAAIG,EAClB4H,EAAOL,EAAOnC,IAAInF,EAClB4H,EAAON,EAAO1H,IAAII,EAEd6H,EAAOxJ,EAAAA,IAAe,CAACoJ,EAAMC,IAC7BI,EAAOzJ,EAAAA,IAAe,CAACsJ,EAAMC,IAE7BG,EAAS,GAEf,IAAK,IAAInK,EAAI,EAAGA,EAAI4F,EAAO5F,IACzB,OAAa,CACX,MAAMmC,EAAI8H,EAAK9J,KAAKqC,UACdJ,EAAI8H,EAAK/J,KAAKqC,UAEpB,GAAImH,IAAAA,SAAgBS,SAASX,EAAO,CAAEtH,IAAGC,MAAM,CAC7C+H,EAAOZ,KAAK,CAACpH,EAAGC,IAChB,KACF,CACF,CAGF,OAAO+H,CACT,CAGO,MAAME,EAAyB,WACpC,MAAMjB,EAAQH,EAAkB,GAC1BqB,EAAQrB,EAAkB,GAE1BsB,EAAS,GAEf,IAAK,IAAIvK,EAAI,EAAGA,EAAIoJ,EAAM/I,OAAS,EAAGL,IACpCuK,EAAOhB,KAAK,CACVH,EAAMpJ,GACNoJ,EAAMpJ,GAAKA,EAAI,EAAI,EAAI,IACvBsK,EAAMtK,GAAKA,EAAI,EAAI,EAAI,IACvBsK,EAAMtK,KAIV,OAAOuK,CACT,CAhBsC,GAkBtC,IAAIC,EACAC,EAGG,SAAS7I,EAAuBO,EAAGC,EAAG4B,GAGtCwG,GAAexG,EAAM3D,SAAWoK,IACnCD,EAAc/J,EAAAA,IACL,GACNK,KAAI,IACH0I,EAAoBP,EAAkB,GAAKwB,EAAezG,EAAM3D,WAGtE,MAAMqK,EAAOjK,EAAAA,IAAOuD,EAAMlD,KAAIvC,IAAA,IAAC,EAAEwD,GAAGxD,EAAA,OAAKwD,GAAK,EAAI,IAAI,KAChD4I,EAAaxK,KAAKC,MAAgC,EAAzBD,KAAK4C,KAAK2H,EAAO,MAAa,GAEvDE,EAAcJ,EAClBrK,KAAKC,MAAMD,KAAKqC,SAAWgI,EAAYnK,SACvCS,KAAIoB,IAAA,IAAEC,EAAGC,GAAEF,EAAA,MAAK,CAACC,EAAIwI,EAAYvI,EAAIuI,EAAW,IAG5CE,EAASlB,IAAAA,OACbmB,EAASnB,IAAAA,OACToB,EAAYpB,IAAAA,UAERqB,EAASH,EAAOjB,SAEhBqB,EAAUL,EAAYtK,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAE9C2K,EAAclH,EAAMlD,KAAI,CAAAmC,EAAYjD,KAAO,IAAlB,EAAE+B,EAAC,GAAEE,GAAIgB,EACtC,MAAOkI,EAAIC,GAAMH,EAAQjL,GACzB,OAAO8K,EAAOO,OAAOF,EAAIC,EAAIrJ,EAAG,CAC9BuJ,YAAa,EACbrJ,GAAIA,GACJ,IAGEsJ,EAAQlB,EAAsBvJ,KAAK0K,GACvC7B,IAAAA,KAAYC,OAAO,CACjB6B,SAAU9B,IAAAA,SAAgB+B,OAAOF,GACjCG,SAAUH,EACVI,UAAU,MAIRC,EAAOlC,IAAAA,KAAYC,OAAO,CAC9BgC,UAAU,IAGZjC,IAAAA,KAAYmC,SAASD,EAAMN,GAE3B5B,IAAAA,KAAYoC,UAAUF,EAAM,CAAE1J,EAAG,EAAGC,EAAG,IACvCuH,IAAAA,KAAYqC,MAAMH,EAAmB,IAAblB,EAA+B,IAAbA,GAE1CI,EAAUkB,IAAIjB,EAAOkB,MAAO,IAAIhB,EAAaW,IAG7C,IAAK,IAAI7L,EAAI,EAAGmM,EAAM,GAAIC,EAAO,GAAKpM,EAAImM,EAAMC,EAAMpM,IACpD6K,EAAOwB,OAAOrB,EAAQ,IAAOmB,GAE/B,OAAOjB,EAAYpK,KAAIsD,IAAA,IAAC,SAAEqH,EAAQ,GAAExJ,GAAImC,EAAA,MAAM,CAC5CnC,KACAE,EAAGsJ,EAAStJ,EAAIA,EAChBC,EAAGqJ,EAASrJ,EAAIA,EAAiB,GAAbuI,EACrB,GACH,CAmCO,SAAS2B,EAAeC,EAAYP,GACzC,MAAOQ,EAAKC,IAAUrN,EAAAA,EAAAA,UAASmN,GAK/B,MAAO,EAHW/M,EAAAA,EAAAA,UAAQ,IAAMwM,EAAMQ,IAAM,CAACA,KACxBE,EAAAA,EAAAA,cAAapF,IAAWmF,EAAOT,EAAM1E,GAAG,GAAE,IAGjE,CAEO,SAAStG,EAAcyG,EAAMkF,EAASxJ,EAAMyJ,GACjD,MAAMC,EAAS1J,EAAKsE,GAAM/G,EAAAA,IAAqBiM,GAAShM,EAAAA,IACxD,OAAOF,EAAAA,MAEJqM,QAAO5L,EAAAA,EAAAA,IAAW,EAAG,EAAG2L,EAAOxM,SAC/B0M,MAAMF,EAAO/L,KAAKwG,GAAMnH,KAAKoH,IAAI,EAAGD,EAAIsF,IAAc,KACtDI,OAAM,EACX,CAEO,SAASnN,EAAaoN,EAAU9J,EAAM+J,GAC3C,MAAiB,WAAbD,EACKrO,OAAOC,KAAKsE,EAAK+J,GAAWxM,EAAAA,KAAsBJ,MACvD,CAACC,EAAGC,IACFC,EAAAA,IAAQ0C,EAAK+J,GAAWxM,EAAAA,IAAqBH,GAAGI,EAAAA,KAChDF,EAAAA,IAAQ0C,EAAK+J,GAAWxM,EAAAA,IAAqBF,GAAGG,EAAAA,OAGrC,eAAbsM,EACKrO,OAAOC,KAAKsE,EAAK+J,GAAWxM,EAAAA,KAAsBJ,MACvD,CAACC,EAAGC,IACFC,EAAAA,IAAO0C,EAAK+J,GAAWxM,EAAAA,IAAqBH,GAAGI,EAAAA,KAC/CF,EAAAA,IAAO0C,EAAK+J,GAAWxM,EAAAA,IAAqBF,GAAGG,EAAAA,OAGpC,iBAAbsM,EACKrO,OAAOC,KAAKsE,EAAK+J,GAAWxM,EAAAA,KAAsBJ,YAD3D,CAGF,C","sources":["LargeDropletMosaicApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  MAX_DELIVS,\r\n  SCENARIO_KEY_STRING,\r\n  objectivesData,\r\n} from \"./data/objectivesData\";\r\nimport {\r\n  DROPLET_SHAPE,\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LEVELS = 5;\r\nconst RAD_PX = 3;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst SCEN_DIVISOR = 20;\r\nconst LARGE_DROPLET_PAD_FACTOR = 1.5;\r\nconst PX_BIAS = 1;\r\n\r\nexport default function LargeDropletMosaicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const navigate = useNavigate();\r\n  const winDim = useRef();\r\n  const [normalize, setNormalize] = useState(false);\r\n\r\n  const bucketSvgSelector = useRef();\r\n  const largeDrops = useRef();\r\n\r\n  const orderedObjToScens = useMemo(() => {\r\n    const unorderedObjToScens = {};\r\n    const mapSorted = {};\r\n\r\n    // don't process all scenes, too many small drops causes lag\r\n    objectiveIDs.forEach(\r\n      (obj) =>\r\n        (unorderedObjToScens[obj] = criteriaSort(\"median\", objectivesData, obj)\r\n          .filter((_, i) => i % SCEN_DIVISOR == 0)\r\n          .reverse())\r\n    );\r\n\r\n    const mid = Math.floor(unorderedObjToScens[objectiveIDs[0]].length / 2);\r\n    const sortedObjs = objectiveIDs.sort((a, b) => {\r\n      return (\r\n        d3.median(\r\n          objectivesData[a][SCENARIO_KEY_STRING][unorderedObjToScens[a][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        ) -\r\n        d3.median(\r\n          objectivesData[b][SCENARIO_KEY_STRING][unorderedObjToScens[b][mid]][\r\n            DELIV_KEY_STRING\r\n          ]\r\n        )\r\n      );\r\n    });\r\n\r\n    sortedObjs.forEach(\r\n      (obj) => void (mapSorted[obj] = unorderedObjToScens[obj])\r\n    );\r\n    return mapSorted;\r\n  }, []);\r\n\r\n  const objToWaterLevels = useMemo(() => {\r\n    const retVal = {};\r\n\r\n    objectiveIDs.forEach((obj) => {\r\n      retVal[obj] = orderedObjToScens[obj].map((s) => {\r\n        const i = createInterps(obj, s, objectivesData, MAX_DELIVS);\r\n        return ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n      });\r\n    });\r\n\r\n    return retVal;\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", winDim.current.width)\r\n      .attr(\"height\", winDim.current.height);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    const nodesArr = Object.keys(objToWaterLevels)\r\n      .map((obj) => {\r\n        const scale = 1;\r\n\r\n        const nodesPos = placeDropsUsingPhysics(\r\n          0,\r\n          0,\r\n          objToWaterLevels[obj].map((levs, idx) => ({\r\n            r: Math.max(\r\n              2,\r\n              (normalize ? 1 : Math.max(levs[0], MIN_LEV_VAL)) *\r\n                scale *\r\n                RAD_PX *\r\n                LARGE_DROPLET_PAD_FACTOR\r\n            ),\r\n            id: idx,\r\n          }))\r\n        );\r\n\r\n        const nodes = nodesPos.map(({ id: idx, x, y }) => ({\r\n          levs: objToWaterLevels[obj][idx].map(\r\n            (w, i) =>\r\n              Math.max(w, i == 0 ? MIN_LEV_VAL : 0) *\r\n              scale *\r\n              (normalize\r\n                ? 1 / Math.max(objToWaterLevels[obj][idx][0], MIN_LEV_VAL)\r\n                : 1) *\r\n              RAD_PX\r\n          ),\r\n          maxLev:\r\n            (normalize\r\n              ? 1\r\n              : Math.max(objToWaterLevels[obj][idx][0], MIN_LEV_VAL) * scale) *\r\n            RAD_PX,\r\n          tilt: Math.random() * 50 - 25,\r\n          dur: Math.random() * 100 + 400,\r\n          startX: x,\r\n          startY: y,\r\n          obj,\r\n        }));\r\n\r\n        return nodes;\r\n      })\r\n      .reverse();\r\n\r\n    const largeNodesRads = {};\r\n\r\n    const largeNodesPos = placeDropsUsingPhysics(\r\n      0,\r\n      0,\r\n      nodesArr.map((largeDrop, idx) => ({\r\n        r: (largeNodesRads[idx] = Math.max(\r\n          1,\r\n          Math.sqrt(d3.sum(largeDrop.map((d) => d.maxLev)) / Math.PI) * 8\r\n        )),\r\n        id: idx,\r\n      }))\r\n    ).map(({ x, y }, i) => ({\r\n      x,\r\n      y,\r\n      tilt: Math.random() * 50 - 25,\r\n      r: largeNodesRads[i],\r\n    }));\r\n\r\n    largeDrops.current = bucketSvgSelector.current\r\n      .selectAll(\".largeDrop\")\r\n      .data(nodesArr, (n, i) => n[0].obj)\r\n      .join((enter) =>\r\n        enter.append(\"g\").each(function (d, i) {\r\n          const s = d3.select(this);\r\n\r\n          if (i == 0) {\r\n            bucketSvgSelector.current\r\n              .append(\"rect\")\r\n              .attr(\"id\", \"overlay\")\r\n              .attr(\"pointer-events\", \"none\")\r\n              .attr(\"width\", winDim.current.width)\r\n              .attr(\"height\", winDim.current.height)\r\n              .attr(\"fill\", \"white\")\r\n              .attr(\"opacity\", 0.5)\r\n              .attr(\"visibility\", \"hidden\");\r\n          }\r\n\r\n          d3.select(this.parentNode)\r\n            .append(\"text\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"id\", `drop-${i}`);\r\n          s.append(\"g\").attr(\"class\", \"rotateClass\");\r\n\r\n          s.append(\"rect\").attr(\"class\", \"bbox\").style(\"visibility\", \"hidden\");\r\n\r\n          s.on(\"mouseover\", function () {\r\n            d3.select(`#drop-${i}`).style(\"opacity\", 1);\r\n            d3.select(\"#overlay\").style(\"visibility\", \"visible\");\r\n            d3.select(this).raise();\r\n          }).on(\"mouseout\", function () {\r\n            d3.select(`#drop-${i}`).style(\"opacity\", 0);\r\n            d3.select(this).lower();\r\n            d3.select(\"#overlay\").style(\"visibility\", \"hidden\");\r\n          });\r\n        })\r\n      )\r\n      .attr(\"class\", \"largeDrop\")\r\n      .attr(\r\n        \"transform\",\r\n        (_, i) =>\r\n          `translate(${largeNodesPos[i].x + width / 2}, ${\r\n            largeNodesPos[i].y + height / 2\r\n          })`\r\n      )\r\n      .each(function (nodes, i1) {\r\n        const s = d3.select(this);\r\n\r\n        d3.select(`#drop-${i1}`).text(nodes[0].obj).style(\"opacity\", 0);\r\n        d3.select(this)\r\n          .select(\".rotateClass\")\r\n          .attr(\"transform\", `rotate(${largeNodesPos[i1].tilt})`)\r\n          .selectAll(\".smallDrop\")\r\n          .data(nodes, (_, i) => i)\r\n          .join((enter) => {\r\n            return enter\r\n              .append(\"g\")\r\n              .attr(\"class\", \"smallDrop\")\r\n              .each(function ({ levs }, i2) {\r\n                d3.select(this)\r\n                  .append(\"defs\")\r\n                  .append(\"clipPath\")\r\n                  .attr(\"id\", `drop-mask-${i1}-${i2}`)\r\n                  .append(\"path\")\r\n                  .attr(\"d\", DROPLET_SHAPE);\r\n                d3.select(this)\r\n                  .append(\"g\")\r\n                  .attr(\"clip-path\", `url(#drop-mask-${i1}-${i2})`)\r\n                  .selectAll(\"rect\")\r\n                  .data(levs, (_, i) => i)\r\n                  .join(\"rect\")\r\n                  .attr(\"fill\", (_, i) =>\r\n                    interpolateWatercolorBlue(i / LEVELS)\r\n                  );\r\n              });\r\n          })\r\n          .attr(\r\n            \"transform\",\r\n            ({ startX, startY, tilt }) =>\r\n              `translate(${startX}, ${startY}) rotate(${tilt})`\r\n          )\r\n          .each(function ({ levs, maxLev }) {\r\n            d3.select(this)\r\n              .selectAll(\"rect\")\r\n              .data(levs, (_, i) => i)\r\n              .attr(\"width\", maxLev * 2)\r\n              .attr(\"height\", maxLev * 2)\r\n              .attr(\"x\", -maxLev)\r\n              .attr(\r\n                \"y\",\r\n                (l) =>\r\n                  maxLev * Math.SQRT1_2 -\r\n                  percentToRatioFilled(l / maxLev) *\r\n                    (maxLev * (1 + Math.SQRT1_2)) +\r\n                  (l === 0 ? PX_BIAS : 0)\r\n              );\r\n            d3.select(this)\r\n              .select(\"path\")\r\n              .attr(\"transform\", `scale(${maxLev})`);\r\n          });\r\n\r\n        const d = s.select(\".rotateClass\");\r\n\r\n        s.on(\"click\", function () {\r\n          navigate(\r\n            `/RecursiveDropletsBasicApp?obj=${nodes[0].obj}&norm=${\r\n              normalize ? \"true\" : \"false\"\r\n            }`\r\n          );\r\n        });\r\n\r\n        s.select(\".bbox\")\r\n          .attr(\"x\", d.node().getBBox().x)\r\n          .attr(\"y\", d.node().getBBox().y)\r\n          .attr(\"width\", d.node().getBBox().width)\r\n          .attr(\"height\", d.node().getBBox().height);\r\n\r\n        bucketSvgSelector.current\r\n          .select(`#drop-${i1}`)\r\n          .attr(\r\n            \"x\",\r\n            d.node().getBoundingClientRect().x +\r\n              d.node().getBoundingClientRect().width / 2\r\n          )\r\n          .attr(\"y\", d.node().getBoundingClientRect().y);\r\n      });\r\n  }, [objToWaterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div className=\"bubbles-input-area\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"norm\"\r\n          checked={normalize}\r\n          onChange={() => void setNormalize((e) => !e)}\r\n        />\r\n        <label htmlFor=\"norm\">normalize</label>\r\n      </div>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => r ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.3; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.1,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data, maxDelivs) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n"],"names":["LEVELS","RAD_PX","MIN_LEV_VAL","SCEN_DIVISOR","LARGE_DROPLET_PAD_FACTOR","PX_BIAS","LargeDropletMosaicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","navigate","useNavigate","winDim","normalize","setNormalize","useState","bucketSvgSelector","largeDrops","orderedObjToScens","useMemo","unorderedObjToScens","mapSorted","forEach","obj","criteriaSort","filter","_","i","reverse","mid","Math","floor","length","sort","a","b","d3","SCENARIO_KEY_STRING","DELIV_KEY_STRING","objToWaterLevels","retVal","map","s","createInterps","MAX_DELIVS","ticksExact","d","useLayoutEffect","width","window","innerWidth","height","innerHeight","attr","nodesArr","placeDropsUsingPhysics","levs","idx","r","max","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","largeNodesRads","largeNodesPos","largeDrop","sqrt","PI","_ref3","selectAll","data","n","join","enter","append","each","this","parentNode","concat","style","on","raise","lower","nodes","i1","text","select","_ref4","i2","DROPLET_SHAPE","interpolateWatercolorBlue","_ref5","_ref6","l","SQRT1_2","percentToRatioFilled","node","getBBox","getBoundingClientRect","_jsxs","className","children","_jsx","type","checked","onChange","e","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","value","isEqualFunc","prev","async","objs","fetch","json","scen","v","min","mapBy","name","console","log","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","SQRT2","closePath","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","AREA","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","maxDelivs","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}