{"version":3,"file":"static/js/711.20f1f847.chunk.js","mappings":"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","sources":["BigBucketApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\nimport { MAX_DELIVS, objectivesData } from \"./data/objectivesData\";\r\n\r\nimport { bucketPath } from \"./bucket-lib/utils\";\r\nimport { createInterps, criteriaSort } from \"./utils\";\r\n\r\nconst LEVELS = 10;\r\nconst LINE_WIDTH = 3;\r\nconst DEFAULT_OBJECTIVE_IDX = 0;\r\n\r\nexport default function BigBucketApp({ width = 600, height = 600 }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () => criteriaSort(\"median\", objectivesData, objectiveIDs[curObjectiveIdx]),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const curPercentileScens = useMemo(() => {\r\n    return Array.from(orderedScenIDs).filter((_, i) =>\r\n      ticksExact(0, 0.9, 20)\r\n        .map((d) => Math.floor((d + 0.05) * orderedScenIDs.length))\r\n        .includes(i)\r\n    );\r\n  }, [orderedScenIDs]);\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      ticksExact(0, 1, LEVELS + 1).map((d) =>\r\n        curPercentileScens.map((s) =>\r\n          createInterps(\r\n            objectiveIDs[curObjectiveIdx],\r\n            s,\r\n            objectivesData,\r\n            MAX_DELIVS\r\n          )(d)\r\n        )\r\n      ),\r\n    [curPercentileScens, curObjectiveIdx]\r\n  );\r\n\r\n  const innerWidth = width - LINE_WIDTH * 2;\r\n  const innerHeight = height - LINE_WIDTH;\r\n\r\n  const x = d3.scaleLinear().range([0, innerWidth]);\r\n  const y = d3.scaleLinear().range([innerHeight, 0]);\r\n\r\n  useEffect(() => {\r\n    const svgContainer = bucketSvgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-container\")\r\n      .attr(\"transform\", `translate(${LINE_WIDTH}, ${LINE_WIDTH / 2})`);\r\n\r\n    svgContainer\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask\")\r\n      .append(\"path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight));\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"clip-path\", `url(#bucket-mask)`);\r\n\r\n    svgContainer\r\n      .append(\"path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight).split(\"z\")[0])\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    bucketSvgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\"path\")\r\n      .data(waterLevels)\r\n      .join(\"path\")\r\n      .attr(\"fill\", (_, i) => d3.interpolateBlues(i / waterLevels.length))\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"d\", (dd) => {\r\n        const ddd = [dd[0]];\r\n\r\n        for (let i = 1; i < dd.length; i++) {\r\n          ddd.push(dd[i - 1]);\r\n          ddd.push(dd[i]);\r\n        }\r\n\r\n        return (\r\n          d3\r\n            .area()\r\n            // .curve(d3.curveBasis)\r\n            .x(function (_, i) {\r\n              return x(Math.ceil(i / 2) / (dd.length - 1));\r\n            })\r\n            .y1((d) => y(d))\r\n            .y0(() => y(0))(ddd)\r\n        );\r\n      });\r\n  }, [waterLevels]);\r\n\r\n  return (\r\n    <div className=\"big-bucket-wrapper\">\r\n      <select\r\n        value={curObjectiveIdx}\r\n        onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n      >\r\n        {objectiveIDs.map((objectiveID, i) => (\r\n          <option name={i} value={i}>\r\n            {objectiveID}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <svg ref={(e) => void (bucketSvgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.sqrt(2) / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nexport function percentToRatioFilled(p) {\r\n  return (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.4;\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => r ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.3; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.1,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data, maxDelivs) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n}\r\n"],"names":["LEVELS","LINE_WIDTH","DEFAULT_OBJECTIVE_IDX","BigBucketApp","_ref","width","height","current","objectiveIDs","useRef","Object","keys","objectivesData","curObjectiveIdx","setCurObjectiveIdx","useState","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","curPercentileScens","Array","from","filter","_","i","ticksExact","map","d","Math","floor","length","includes","waterLevels","s","createInterps","MAX_DELIVS","innerWidth","innerHeight","x","d3","range","y","useEffect","svgContainer","attr","append","concat","bucketPath","split","select","selectAll","data","join","transition","duration","dd","ddd","push","ceil","y1","y0","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","objectiveID","name","ref","start","stop","count","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","interpolateWatercolorBlue","SCENARIO_KEY_STRING","DELIV_KEY_STRING","async","objs","fetch","json","obj","scen","v","min","max","sort","a","b","mapBy","console","log","_ref2","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","sqrt","PI","closePath","percentToRatioFilled","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","abs","generateWaterdrop","rad","delta","outer","cos","sin","SQRT2","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","random","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","lastNodesLen","placeDropsUsingPhysics","nodes","AREA","r","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","id","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","scale","add","world","FPS","SECS","update","_ref4","useStickyScale","defaultVal","val","setVal","useCallback","curScen","maxDelivs","delivs","domain","clamp","criteria","objective"],"sourceRoot":""}