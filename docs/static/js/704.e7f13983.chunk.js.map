{"version":3,"file":"static/js/704.e7f13983.chunk.js","mappings":"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","sources":["SliderApp.jsx","bucket-lib/BucketGlyph.jsx","bucket-lib/utils.js","data/factorsData.jsx","data/objectivesData.jsx","utils.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  MAX_DELIVS,\r\n  SCENARIO_KEY_STRING,\r\n  objectivesData,\r\n} from \"./data/objectivesData\";\r\nimport { factorsData } from \"./data/factorsData\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport BucketGlyph from \"./bucket-lib/BucketGlyph\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\nconst DEFAULT_SCENARIO = \"expl0000\";\r\nconst DEFAULT_OBJECTIVE_IDX = 0;\r\nconst DEFAULT_SLIDER_VALS = 0.25;\r\nconst LEVELS = 10;\r\n\r\nconst DOMAINS = {\r\n  demand: d3.scaleLinear([1, 4]),\r\n  carryover: d3.scaleLinear([1, 3]),\r\n  priority: d3.scaleLinear([1, 2]),\r\n  regs: d3.scaleLinear([1, 4]),\r\n  minflow: d3.scaleLinear([1, 4]),\r\n};\r\n\r\nexport default function SliderApp() {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n\r\n  const [curScenID, setCurScenID] = useState(DEFAULT_SCENARIO);\r\n  const [objectiveIdx, setObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n\r\n  const [demand, setDemand] = useState(DEFAULT_SLIDER_VALS);\r\n  const [carryover, setCarryover] = useState(DEFAULT_SLIDER_VALS);\r\n  const [priority, setPriority] = useState(DEFAULT_SLIDER_VALS);\r\n  const [regs, setRegs] = useState(DEFAULT_SLIDER_VALS);\r\n  const [minflow, setMinflow] = useState(DEFAULT_SLIDER_VALS);\r\n\r\n  const curInterp = useMemo(\r\n    () => createInterps(objectiveIDs[objectiveIdx], curScenID),\r\n    [curScenID, objectiveIdx]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      void setCurScenID(\r\n        factorsData[\r\n          getKey(\r\n            Math.round(DOMAINS[\"demand\"](demand)),\r\n            Math.round(DOMAINS[\"carryover\"](carryover)),\r\n            Math.round(DOMAINS[\"priority\"](priority)),\r\n            Math.round(DOMAINS[\"regs\"](regs)),\r\n            Math.round(DOMAINS[\"minflow\"](minflow))\r\n          )\r\n        ]\r\n      ),\r\n    [demand, carryover, priority, regs, minflow]\r\n  );\r\n\r\n  const variables = [\r\n    {\r\n      label: \"demand [1, 0.9, 0.8, 0.7]\",\r\n      controlVar: \"demand\",\r\n      val: demand,\r\n      setter: setDemand,\r\n    },\r\n    {\r\n      label: \"carryover [1.0, 1.1, 1.2]\",\r\n      controlVar: \"carryover\",\r\n      val: carryover,\r\n      setter: setCarryover,\r\n    },\r\n    {\r\n      label: \"priority [0, 1]\",\r\n      controlVar: \"priority\",\r\n      val: priority,\r\n      setter: setPriority,\r\n    },\r\n    {\r\n      label: \"regs [1, 2, 3, 4]\",\r\n      controlVar: \"regs\",\r\n      val: regs,\r\n      setter: setRegs,\r\n    },\r\n    {\r\n      label: \"minflow [0, 0.4, 0.6, 0.8]\",\r\n      controlVar: \"minflow\",\r\n      val: minflow,\r\n      setter: setMinflow,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"editor\">\r\n        <div className=\"sliders\">\r\n          <select\r\n            value={objectiveIdx}\r\n            onChange={(e) => setObjectiveIdx(parseInt(e.target.value))}\r\n          >\r\n            {objectiveIDs.map((objectiveID, i) => (\r\n              <option name={i} value={i}>\r\n                {objectiveID}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {variables.map(({ label, controlVar, val, setter }) => (\r\n            <div>\r\n              <span>{label}</span>\r\n              <LineSlider\r\n                data={getLocalProbs(\r\n                  { demand, carryover, priority, regs, minflow },\r\n                  controlVar,\r\n                  objectiveIDs[objectiveIdx]\r\n                )}\r\n                val={val}\r\n                setVal={setter}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <BucketGlyph\r\n            levelInterp={curInterp}\r\n            width={300}\r\n            height={400}\r\n            resolution={LEVELS}\r\n          />\r\n          <span\r\n            style={{\r\n              display: \"block\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {curScenID}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MARGIN = { top: 0, right: 0, bottom: 0, left: 0 };\r\n\r\nfunction LineSlider({ data, val, setVal, width = 400, height = 50 }) {\r\n  const svgElem = useRef();\r\n  const x = d3.scaleLinear().range([0, width]);\r\n  const y = d3.scaleLinear().range([height, 0]);\r\n\r\n  useEffect(() => {\r\n    svgElem.current\r\n      .attr(\"width\", width + MARGIN.left + MARGIN.right)\r\n      .attr(\"height\", height + MARGIN.top + MARGIN.bottom)\r\n      .style(\"border\", \"1px solid lightgrey\")\r\n      .call((s) =>\r\n        s.node().addEventListener(\"mousedown\", (e) =>\r\n          setVal(\r\n            d3\r\n              .scaleLinear()\r\n              .domain([MARGIN.left, width + MARGIN.left])\r\n              .clamp(true)(e.offsetX)\r\n          )\r\n        )\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`)\r\n      .call((s) =>\r\n        s\r\n          .selectAll(\"path\")\r\n          .data(data)\r\n          .join(\"path\")\r\n          .attr(\"fill\", (_, i) => d3.interpolateBlues(i / data.length))\r\n      )\r\n      .append(\"rect\")\r\n      .attr(\"fill\", \"red\")\r\n      .attr(\"width\", 5)\r\n      .attr(\"height\", height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    svgElem.current\r\n      .selectAll(\"path\")\r\n      .data(data)\r\n      .attr(\"d\", (dd) =>\r\n        d3\r\n          .area()\r\n          .x((_, i) => x(i / (dd.length - 1)))\r\n          .y1((d) => y(d))\r\n          .y0(y(0))(dd)\r\n      );\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    svgElem.current.select(\"rect\").attr(\"x\", x(val));\r\n  }, [val]);\r\n\r\n  return (\r\n    <svg\r\n      className=\"line-slider\"\r\n      ref={(e) => void (svgElem.current = d3.select(e))}\r\n    ></svg>\r\n  );\r\n}\r\n\r\nfunction getKey(demand, carryover, priority, regs, minflow) {\r\n  return `${demand}${carryover}${priority}${regs}${minflow}`;\r\n}\r\n\r\nfunction createInterps(name, curScen) {\r\n  const delivs =\r\n    objectivesData[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / MAX_DELIVS) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nfunction getLocalProbs(\r\n  { demand, carryover, priority, regs, minflow },\r\n  variable,\r\n  objective\r\n) {\r\n  let localProbs = [];\r\n  for (const _demand of variable !== \"demand\"\r\n    ? [Math.round(DOMAINS[\"demand\"](demand))]\r\n    : d3.range(\r\n        DOMAINS[\"demand\"].range()[0],\r\n        DOMAINS[\"demand\"].range()[1] + 1\r\n      )) {\r\n    for (const _carryover of variable !== \"carryover\"\r\n      ? [Math.round(DOMAINS[\"carryover\"](carryover))]\r\n      : d3.range(\r\n          DOMAINS[\"carryover\"].range()[0],\r\n          DOMAINS[\"carryover\"].range()[1] + 1\r\n        )) {\r\n      for (const _priority of variable !== \"priority\"\r\n        ? [Math.round(DOMAINS[\"priority\"](priority))]\r\n        : d3.range(\r\n            DOMAINS[\"priority\"].range()[0],\r\n            DOMAINS[\"priority\"].range()[1] + 1\r\n          )) {\r\n        for (const _regs of variable !== \"regs\"\r\n          ? [Math.round(DOMAINS[\"regs\"](regs))]\r\n          : d3.range(\r\n              DOMAINS[\"regs\"].range()[0],\r\n              DOMAINS[\"regs\"].range()[1] + 1\r\n            )) {\r\n          for (const _minflow of variable !== \"minflow\"\r\n            ? [Math.round(DOMAINS[\"minflow\"](minflow))]\r\n            : d3.range(\r\n                DOMAINS[\"minflow\"].range()[0],\r\n                DOMAINS[\"minflow\"].range()[1] + 1\r\n              )) {\r\n            localProbs.push(\r\n              factorsData[\r\n                getKey(_demand, _carryover, _priority, _regs, _minflow)\r\n              ]\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const interps = [];\r\n\r\n  for (const scen of localProbs) {\r\n    interps.push(createInterps(objective, scen));\r\n  }\r\n\r\n  return ticksExact(0, 1, LEVELS + 1).map((t) => interps.map((d) => d(t)));\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useId, useLayoutEffect, useMemo, useRef } from \"react\";\r\nimport { bucketPath, ticksExact, usePrevious } from \"./utils\";\r\n\r\nconst DEGREE_SWAY = 40;\r\nconst LEVELS = 10;\r\nconst LINE_WIDTH = 3;\r\n\r\nexport default function BucketGlyph({\r\n  levelInterp,\r\n  colorInterp = d3.interpolateBlues,\r\n  width = 200,\r\n  height = 400,\r\n  resolution = LEVELS,\r\n}) {\r\n  const id = useId();\r\n  const svgSelector = useRef();\r\n\r\n  const liquidLevels = useMemo(\r\n    () => ticksExact(0, 1, resolution + 1).map((d) => levelInterp(d)),\r\n    [levelInterp, resolution]\r\n  );\r\n\r\n  const prevLiquidLevels = usePrevious(liquidLevels);\r\n\r\n  const innerWidth = width - LINE_WIDTH * 2;\r\n  const innerHeight = height - LINE_WIDTH;\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-container\")\r\n      .attr(\"transform\", `translate(${LINE_WIDTH}, ${LINE_WIDTH / 2})`);\r\n\r\n    svgContainer\r\n      .append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\", \"bucket-mask-\" + id)\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-mask-path\");\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"clip-path\", `url(#bucket-mask-${id})`);\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .append(\"path\")\r\n      .attr(\"class\", \"bucket-outline\")\r\n      .attr(\"stroke\", \"lightgray\")\r\n      .attr(\"stroke-linecap\", \"round\")\r\n      .attr(\"stroke-width\", LINE_WIDTH)\r\n      .attr(\"fill\", \"none\");\r\n  }, [id]); // id shouldn't change, basically empty dependency array\r\n\r\n  useLayoutEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .select(\".svg-container\");\r\n\r\n    svgContainer\r\n      .select(\".bucket-mask-path\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight));\r\n\r\n    svgContainer\r\n      .select(\".bucket-outline\")\r\n      .attr(\"d\", bucketPath(innerWidth, innerHeight).split(\"z\")[0]);\r\n  }, [width, height, innerWidth, innerHeight]);\r\n\r\n  useLayoutEffect(() => {\r\n    const liquids = svgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\".bucketBox\")\r\n      .data(liquidLevels)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bucketBox\")\r\n      .attr(\"width\", innerWidth * 2)\r\n      .attr(\"height\", innerHeight * 2)\r\n      .attr(\"x\", -innerWidth / 2)\r\n      .attr(\"fill\", (_, i) => colorInterp(i / LEVELS));\r\n\r\n    liquids\r\n      .transition(\"liquidLevel\")\r\n      .ease(d3.easeElasticOut.period(0.6))\r\n      .delay((_, i) => i * (100 / resolution))\r\n      .duration(1000)\r\n      .attr(\"y\", (d) => innerHeight - d * innerHeight);\r\n\r\n    liquids\r\n      .transition(\"liquidSway\")\r\n      .duration(2000)\r\n      .delay((_, i) => i * 10)\r\n      .ease(d3.easeQuad)\r\n      .attrTween(\"transform\", function (d, i) {\r\n        const diff = prevLiquidLevels ? Math.abs(prevLiquidLevels[i] - d) : 0;\r\n        return (t) =>\r\n          `rotate(${\r\n            Math.sin(\r\n              Math.min((Math.PI * 4 * t) / (0.5 * diff + 0.5), Math.PI * 4)\r\n            ) *\r\n            diff *\r\n            DEGREE_SWAY *\r\n            (1 - t)\r\n          }, ${innerWidth / 2}, ${0})`;\r\n      });\r\n  }, [\r\n    liquidLevels,\r\n    prevLiquidLevels,\r\n    width,\r\n    height,\r\n    innerWidth,\r\n    innerHeight,\r\n    resolution,\r\n    colorInterp,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"bucket-wrapper\">\r\n      <svg ref={(e) => void (svgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n","export const factorsData = await (async function () {\r\n  const objs = await (await fetch(\"./factors.json\")).json();\r\n\r\n  console.log(\"DATA: loading factors data\");\r\n\r\n  return objs;\r\n})();\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    // obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING].slice(0, 100);\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.sqrt(2) / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nexport function percentToRatioFilled(p) {\r\n  return (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.4;\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 20;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(1.4);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 1; i++) {\r\n    coords.push([outer[i], outer[i + 1], inner[i + 1], inner[i]]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n  RANDO_CACHE =\r\n    RANDO_CACHE || generateRandoPoints(generateWaterdrop(1), nodes.length);\r\n\r\n  const DELTA = d3.mean(nodes.map(({ r }) => r * 2));\r\n  const WIDTH_AREA = DELTA * Math.floor(Math.sqrt(nodes.length));\r\n\r\n  const randoPoints = RANDO_CACHE.map(([x, y]) => [\r\n    (x * WIDTH_AREA) / 2,\r\n    (y * WIDTH_AREA) / 2,\r\n  ]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx + x, ny + y, r * 2, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.4, WIDTH_AREA * 1.4);\r\n  Matter.Body.translate(cage, { x, y: y + (WIDTH_AREA / 2) * 0.4 });\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for 1 second at 60 fps\r\n  for (let i = 0, FPS = 60; i < FPS * 1; i++) Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x,\r\n    y: position.y,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n"],"names":["DEFAULT_SCENARIO","DEFAULT_OBJECTIVE_IDX","DEFAULT_SLIDER_VALS","LEVELS","DOMAINS","demand","d3","carryover","priority","regs","minflow","SliderApp","current","objectiveIDs","useRef","Object","keys","objectivesData","curScenID","setCurScenID","useState","objectiveIdx","setObjectiveIdx","setDemand","setCarryover","setPriority","setRegs","setMinflow","curInterp","useMemo","createInterps","useEffect","factorsData","getKey","Math","round","variables","label","controlVar","val","setter","_jsx","_Fragment","children","_jsxs","className","value","onChange","e","parseInt","target","map","objectiveID","i","name","_ref","LineSlider","data","getLocalProbs","setVal","BucketGlyph","levelInterp","width","height","resolution","style","display","textAlign","MARGIN","top","right","bottom","left","_ref2","svgElem","x","range","y","attr","call","s","node","addEventListener","domain","clamp","offsetX","append","concat","selectAll","join","_","length","dd","y1","d","y0","select","ref","curScen","delivs","SCENARIO_KEY_STRING","DELIV_KEY_STRING","ticksExact","v","min","MAX_DELIVS","_ref3","variable","objective","localProbs","_demand","_carryover","_priority","_regs","_minflow","push","interps","scen","t","DEGREE_SWAY","LINE_WIDTH","colorInterp","id","useId","svgSelector","liquidLevels","prevLiquidLevels","usePrevious","innerWidth","innerHeight","useLayoutEffect","svgContainer","bucketPath","split","liquids","transition","ease","period","delay","duration","attrTween","diff","abs","sin","PI","start","stop","count","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","sum","Infinity","isEqualFunc","prev","async","objs","fetch","json","console","log","obj","max","sort","a","b","mapBy","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","sqrt","closePath","percentToRatioFilled","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","generateWaterdrop","rad","delta","outer","cos","SQRT2","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","placeDropsUsingPhysics","nodes","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","random","contains","generateRandoPoints","WIDTH_AREA","r","floor","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","scale","translate","add","world","FPS","update","_ref4"],"sourceRoot":""}