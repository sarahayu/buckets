{"version":3,"file":"static/js/91.b894a901.chunk.js","mappings":"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","sources":["OldMainApp.jsx","utils/main/DotHistogram.jsx","utils/main/DotHistogramSmall.jsx","../node_modules/classnames/index.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {\r\n  DELIV_KEY_STRING,\r\n  MAX_DELIVS,\r\n  SCENARIO_KEY_STRING,\r\n  objectivesData,\r\n} from \"data/objectivesData\";\r\nimport { ticksExact } from \"bucket-lib/utils\";\r\nimport BucketGlyph from \"bucket-lib/BucketGlyph\";\r\nimport DotHistogram from \"utils/main/DotHistogram\";\r\nimport DotHistogramSmall from \"utils/main/DotHistogramSmall\";\r\nimport classNames from \"classnames\";\r\nimport { criteriaSort } from \"utils/common\";\r\n\r\nconst DEFAULT_GOAL = 200;\r\nconst DEFAULT_OBJECTIVE_NAME = \"DEL_CVP_PAG_N\";\r\nconst DEFAULT_SCEN_NAME = \"expl0000\";\r\nconst DEFAULT_SORT_MODE = \"median\";\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport default function OldMainApp({ data = objectivesData }) {\r\n  const { current: objectiveNames } = useRef(Object.keys(data));\r\n\r\n  const {\r\n    goal,\r\n    showScens,\r\n    sortMode,\r\n    curObjectiveName,\r\n    curScenName,\r\n    curScenNamePreview,\r\n\r\n    setGoal,\r\n    setShowScens,\r\n    setSortMode,\r\n    setCurObjectiveName,\r\n    setCurScenName,\r\n    setCurScenNamePreview,\r\n  } = useInterface();\r\n\r\n  // calculating these often is laggy. cache.\r\n  const { curDelivInterps, curOrderedScenNames } = useCaches(\r\n    data,\r\n    objectiveNames,\r\n    curObjectiveName,\r\n    curScenName,\r\n    curScenNamePreview,\r\n    sortMode\r\n  );\r\n\r\n  // gotta memoize so bucket animations trigger\r\n  const curMainInterp = useMemo(\r\n    () => curDelivInterps[curObjectiveName],\r\n    [curObjectiveName, curDelivInterps]\r\n  );\r\n\r\n  const curScenNameDisplayed = curScenNamePreview || curScenName;\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        data,\r\n        goal,\r\n        curObjectiveName,\r\n        curScenName,\r\n        curScenNamePreview,\r\n        curOrderedScenNames,\r\n      }}\r\n    >\r\n      <div className=\"old-dashboard\">\r\n        <div className=\"old-slider-container\">\r\n          <InputArea\r\n            setCurScenName={setCurScenName}\r\n            setShowScens={setShowScens}\r\n          />\r\n        </div>\r\n        <div className=\"old-bucket-map-container\">\r\n          <MainBucket levelInterp={curMainInterp} />\r\n\r\n          <div className=\"old-other-buckets-container\">\r\n            {objectiveNames.map((objectiveName) => (\r\n              <SmallBucketTile\r\n                key={objectiveName}\r\n                label={objectiveName}\r\n                active={objectiveName !== curObjectiveName}\r\n                onClick={() => {\r\n                  setCurObjectiveName(objectiveName);\r\n                }}\r\n              >\r\n                <BucketGlyph\r\n                  levelInterp={curDelivInterps[objectiveName]}\r\n                  width={50}\r\n                  height={50}\r\n                />\r\n              </SmallBucketTile>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"old-pdf-container\">\r\n          <DotHistogram\r\n            data={\r\n              data[curObjectiveName][SCENARIO_KEY_STRING][curScenNameDisplayed][\r\n                DELIV_KEY_STRING\r\n              ]\r\n            }\r\n            goal={goal}\r\n            setGoal={setGoal}\r\n          />\r\n        </div>\r\n      </div>\r\n      {showScens && (\r\n        <Overlay\r\n          sortMode={sortMode}\r\n          setSortMode={setSortMode}\r\n          setCurScenName={setCurScenName}\r\n          setCurScenNamePreview={setCurScenNamePreview}\r\n        />\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\n//\r\n// custom hooks\r\n//\r\n\r\nfunction useInterface() {\r\n  const [goal, setGoal] = useState(DEFAULT_GOAL);\r\n  const [showScens, setShowScens] = useState(false);\r\n  const [sortMode, setSortMode] = useState(DEFAULT_SORT_MODE);\r\n\r\n  const [curObjectiveName, setCurObjectiveName] = useState(\r\n    DEFAULT_OBJECTIVE_NAME\r\n  );\r\n\r\n  const [curScenName, setCurScenName] = useState(DEFAULT_SCEN_NAME);\r\n  const [curScenNamePreview, setCurScenNamePreview] = useState(null);\r\n\r\n  return {\r\n    goal,\r\n    setGoal,\r\n    showScens,\r\n    setShowScens,\r\n    sortMode,\r\n    setSortMode,\r\n    curObjectiveName,\r\n    setCurObjectiveName,\r\n    curScenName,\r\n    setCurScenName,\r\n    curScenNamePreview,\r\n    setCurScenNamePreview,\r\n  };\r\n}\r\n\r\nfunction useCaches(\r\n  data,\r\n  objectiveNames,\r\n  curObjectiveName,\r\n  curScenName,\r\n  curScenNamePreview,\r\n  sortMode\r\n) {\r\n  const curOrderedScenNames = useMemo(\r\n    () => criteriaSort(sortMode, data, curObjectiveName),\r\n    [sortMode, curObjectiveName]\r\n  );\r\n\r\n  const curDelivInterps = useMemo(\r\n    () =>\r\n      createInterps(data, objectiveNames, curScenNamePreview || curScenName),\r\n    [curScenName, curScenNamePreview]\r\n  );\r\n\r\n  return {\r\n    curDelivInterps,\r\n    curOrderedScenNames,\r\n  };\r\n}\r\n\r\n//\r\n// some components\r\n//\r\n\r\nfunction SmallBucketTile({ label, active, onClick, children }) {\r\n  return (\r\n    <div\r\n      className={classNames(\"old-bucket-and-label\", {\r\n        \"old-cur-obj\": !active,\r\n      })}\r\n      onClick={onClick}\r\n      title={label}\r\n    >\r\n      <span>{label}</span>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InputArea({ setCurScenName, setShowScens }) {\r\n  const { curScenName, curScenNamePreview, curOrderedScenNames } =\r\n    useContext(AppContext);\r\n\r\n  const curScenNameDisplayed = curScenNamePreview || curScenName;\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"old-input-range\"\r\n        orient=\"vertical\"\r\n        type=\"range\"\r\n        value={curOrderedScenNames.indexOf(curScenNameDisplayed)}\r\n        min=\"0\"\r\n        max={curOrderedScenNames.length - 1}\r\n        onChange={(e) =>\r\n          void setCurScenName(curOrderedScenNames[parseInt(e.target.value)])\r\n        }\r\n      />\r\n      <div className=\"old-scen-name\">\r\n        <span>Current Scenario</span>\r\n        <span>{curScenNameDisplayed}</span>\r\n        <span\r\n          className={classNames(\"old-preview-indic\", {\r\n            \"old-visible\": curScenNamePreview !== null,\r\n          })}\r\n        >\r\n          Previewing\r\n        </span>\r\n        <button onClick={() => void setShowScens((d) => !d)}>\r\n          See Overview\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MainBucket({ levelInterp }) {\r\n  const { curObjectiveName, goal } = useContext(AppContext);\r\n  return (\r\n    <div className=\"old-bucket-viz\">\r\n      <div className=\"old-bucket-viz-container\">\r\n        <span className=\"old-main-bucket-label\">{curObjectiveName}</span>\r\n        <BucketGlyph levelInterp={levelInterp} width={100} height={100} />\r\n        <div\r\n          className=\"old-bucket-razor\"\r\n          style={{\r\n            top:\r\n              d3.scaleLinear().domain([0, MAX_DELIVS]).range([100, 0])(goal) +\r\n              \"px\",\r\n          }}\r\n        >\r\n          <p>Goal</p>\r\n          <p>\r\n            {d3.format(\".0f\")(goal)} <span>TAF</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Overlay({\r\n  sortMode,\r\n  setSortMode,\r\n  setCurScenName,\r\n  setCurScenNamePreview,\r\n}) {\r\n  const {\r\n    data,\r\n    curObjectiveName,\r\n    curScenName,\r\n    curScenNamePreview,\r\n    curOrderedScenNames,\r\n    goal,\r\n  } = useContext(AppContext);\r\n\r\n  const curPercentileScens = useMemo(() => {\r\n    return Array.from(curOrderedScenNames)\r\n      .reverse()\r\n      .filter(\r\n        (scenID, i) =>\r\n          scenID === curScenName ||\r\n          ticksExact(0, 0.9, 20)\r\n            .map((d) => Math.floor((d + 0.05) * curOrderedScenNames.length))\r\n            .includes(i)\r\n      );\r\n  }, [curOrderedScenNames, curScenName]);\r\n\r\n  return (\r\n    <div className=\"old-ridgeline-overlay\">\r\n      <div className=\"old-sort-types\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sort-type\"\r\n          value=\"median\"\r\n          id=\"median\"\r\n          checked={sortMode === \"median\"}\r\n          onChange={() => void setSortMode(\"median\")}\r\n        />\r\n        <label htmlFor=\"median\">Median</label>\r\n\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sort-type\"\r\n          value=\"deliveries\"\r\n          id=\"deliveries\"\r\n          checked={sortMode === \"deliveries\"}\r\n          onChange={() => void setSortMode(\"deliveries\")}\r\n        />\r\n        <label htmlFor=\"deliveries\">Max. Deliveries</label>\r\n\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sort-type\"\r\n          value=\"alphabetical\"\r\n          id=\"alphabetical\"\r\n          checked={sortMode === \"alphabetical\"}\r\n          onChange={() => void setSortMode(\"alphabetical\")}\r\n        />\r\n        <label htmlFor=\"alphabetical\">Alphabetical</label>\r\n      </div>\r\n      <div\r\n        className={classNames(\"old-overlay-container\", {\r\n          \"old-previewing\": curScenNamePreview !== null,\r\n        })}\r\n        onMouseLeave={() => setCurScenNamePreview(null)}\r\n      >\r\n        <AnimateList keyList={curPercentileScens}>\r\n          {curPercentileScens.map((scenID) => (\r\n            <div\r\n              key={scenID}\r\n              className={classNames({\r\n                \"old-previewing\": scenID === curScenNamePreview,\r\n                \"old-current-scene\": scenID === curScenName,\r\n              })}\r\n              onMouseEnter={() => setCurScenNamePreview(scenID)}\r\n              onClick={() => {\r\n                setCurScenName(scenID);\r\n              }}\r\n            >\r\n              <DotHistogramSmall\r\n                data={\r\n                  data[curObjectiveName][SCENARIO_KEY_STRING][scenID][\r\n                    DELIV_KEY_STRING\r\n                  ]\r\n                }\r\n                goal={goal}\r\n                width={300}\r\n                height={200}\r\n              />\r\n              <span>{scenID}</span>\r\n            </div>\r\n          ))}\r\n        </AnimateList>\r\n        <div\r\n          className=\"old-dot-overlay-razor\"\r\n          style={{\r\n            left:\r\n              d3.scaleLinear().domain([0, MAX_DELIVS]).range([0, 300])(goal) +\r\n              \"px\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AnimateList({ keyList, children }) {\r\n  const currBBoxes = useRef({});\r\n\r\n  const prevBBoxes = useRef({});\r\n  const domRefs = useRef({});\r\n\r\n  useLayoutEffect(() => {\r\n    prevBBoxes.current = {};\r\n\r\n    for (const k in currBBoxes.current) {\r\n      prevBBoxes.current[k] = currBBoxes.current[k];\r\n    }\r\n\r\n    currBBoxes.current = {};\r\n\r\n    for (const k in domRefs.current) {\r\n      currBBoxes.current[k] = domRefs.current[k].getBoundingClientRect();\r\n    }\r\n\r\n    const hasPrevBoundingBox = Object.keys(prevBBoxes.current).length;\r\n\r\n    if (hasPrevBoundingBox) {\r\n      React.Children.forEach(children, (child) => {\r\n        const firstBox = currBBoxes.current[child.key];\r\n        const lastBox = prevBBoxes.current[child.key];\r\n\r\n        if (lastBox === undefined || firstBox === undefined) return;\r\n        const changeInX = firstBox.top - lastBox.top;\r\n\r\n        if (changeInX) {\r\n          requestAnimationFrame(() => {\r\n            domRefs.current[\r\n              child.key\r\n            ].style.transform = `translateY(${-changeInX}px)`;\r\n            domRefs.current[child.key].style.transition = \"transform 0s\";\r\n\r\n            requestAnimationFrame(() => {\r\n              domRefs.current[child.key].style.transform = \"\";\r\n              domRefs.current[child.key].style.transition = \"transform 500ms\";\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [keyList]);\r\n\r\n  domRefs.current = {};\r\n\r\n  return React.Children.map(children, (child) => {\r\n    return React.cloneElement(child, {\r\n      ref: (el) => {\r\n        if (el) {\r\n          domRefs.current[child.key] = el;\r\n        }\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\n//\r\n// some util functions\r\n//\r\n\r\nfunction createInterps(data, objectives, scenID) {\r\n  const mapFunc = {};\r\n  objectives.forEach((name) => {\r\n    const delivs = data[name][SCENARIO_KEY_STRING][scenID][DELIV_KEY_STRING];\r\n    mapFunc[name] = d3\r\n      .scaleLinear()\r\n      .domain(ticksExact(0, 1, delivs.length))\r\n      .range(delivs.map((v) => Math.min(1, v / MAX_DELIVS) || 0))\r\n      .clamp(true);\r\n  });\r\n  return mapFunc;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useMemo, useRef } from \"react\";\r\nimport { quantileBins } from \"bucket-lib/quantile-bins\";\r\nimport { WATERDROP_ICON } from \"utils/common\";\r\nimport { MAX_DELIVS } from \"data/objectivesData\";\r\n\r\nconst NUM_CIRCLES = 20;\r\nconst MARGIN = { top: 10, right: 30, bottom: 50, left: 50 };\r\nconst DOMAIN = [0, MAX_DELIVS];\r\n\r\nexport default function DotHistogram({\r\n  data,\r\n  goal,\r\n  setGoal,\r\n  width = 600,\r\n  height = 400,\r\n}) {\r\n  const svgSelector = useRef();\r\n  const circles = useMemo(\r\n    () => quantileBins(width, height, data.length / NUM_CIRCLES, DOMAIN)(data),\r\n    [data]\r\n  );\r\n\r\n  const dataRange = [0, data.length];\r\n  const x = d3.scaleLinear().domain(DOMAIN).range([0, width]);\r\n  const y = d3.scaleLinear().domain(dataRange).range([height, 0]);\r\n  const count = circles.filter((d) => d[0] > goal).length;\r\n\r\n  useEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .attr(\"width\", width + MARGIN.left + MARGIN.right)\r\n      .attr(\"height\", height + MARGIN.top + MARGIN.bottom)\r\n      .style(\"pointer-events\", \"none\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`);\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .call(\r\n        d3.axisBottom().scale(d3.scaleLinear().domain(DOMAIN).range([0, width]))\r\n      )\r\n      .call((s) => {\r\n        s.selectAll(\"line\").attr(\"stroke\", \"gray\");\r\n        s.selectAll(\"path\").attr(\"stroke\", \"gray\");\r\n        s.selectAll(\"text\").attr(\"fill\", \"gray\");\r\n      })\r\n      .append(\"text\")\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${30})`)\r\n      .text(\"Delivery (TAF)\");\r\n\r\n    const razor = document.querySelector(\"#pdf-razor\");\r\n    razor.style.transform = `translateX(${d3\r\n      .scaleLinear()\r\n      .domain(DOMAIN)\r\n      .range([MARGIN.left, width + MARGIN.left])\r\n      .clamp(true)(goal)}px)`;\r\n\r\n    const ignoreFn = (e) => e.preventDefault();\r\n    let dragging = false;\r\n\r\n    document.querySelector(\"#pdf-razor\").addEventListener(\"mousedown\", () => {\r\n      dragging = true;\r\n      window.addEventListener(\"selectstart\", ignoreFn);\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", () => {\r\n      dragging = false;\r\n      window.removeEventListener(\"selectstart\", ignoreFn);\r\n    });\r\n\r\n    document\r\n      .querySelector(\"#pdf-wrapper\")\r\n      .addEventListener(\"mousemove\", (e) => {\r\n        if (dragging && e.target.id === \"pdf-wrapper\") {\r\n          razor.style.transform = `translateX(${Math.min(\r\n            Math.max(e.offsetX, MARGIN.left),\r\n            MARGIN.left + width\r\n          )}px)\r\n            `;\r\n\r\n          setGoal(\r\n            d3\r\n              .scaleLinear()\r\n              .domain([MARGIN.left, width + MARGIN.left])\r\n              .range(DOMAIN)\r\n              .clamp(true)(e.offsetX)\r\n          );\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const svgCircles = svgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\".icons\")\r\n      .data(circles)\r\n      .join((enter) => enter.append(\"g\").call((s) => s.append(\"path\")))\r\n      .attr(\"class\", \"icons\")\r\n      .call((s) => {\r\n        s.selectAll(\"path\").attr(\r\n          \"d\",\r\n          d3.symbol(WATERDROP_ICON, height / NUM_CIRCLES)\r\n        );\r\n      });\r\n\r\n    svgCircles\r\n      .transition(\"position\")\r\n      .delay((d) => d3.scaleLinear(dataRange).invert(d[1]) * 100)\r\n      .duration(500)\r\n      .attr(\"transform\", (d) => `translate(${x(d[0])},${y(d[1])})`);\r\n\r\n    svgCircles\r\n      .transition(\"color\")\r\n      .delay((d) => d3.scaleLinear(dataRange).invert(d[1]) * 100)\r\n      .duration(0)\r\n      .attr(\"fill\", (d) => (d[0] > goal ? \"steelblue\" : \"black\"));\r\n  }, [goal, circles]);\r\n\r\n  return (\r\n    <div className=\"dot-pdf-wrapper\" id=\"pdf-wrapper\">\r\n      <div className=\"pdf-razor\" id=\"pdf-razor\">\r\n        <div>\r\n          <span>\r\n            {circles.length - count} out of {NUM_CIRCLES} years WILL NOT meet\r\n            demand\r\n          </span>\r\n          <span>\r\n            {count} out of {NUM_CIRCLES} years WILL meet demand\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <svg ref={(e) => void (svgSelector.current = d3.select(e))}></svg>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useMemo, useRef } from \"react\";\r\nimport { quantileBins } from \"bucket-lib/quantile-bins\";\r\nimport {\r\n  WATERDROP_ICON,\r\n  kernelDensityEstimator,\r\n  kernelEpanechnikov,\r\n} from \"utils/common\";\r\nimport { MAX_DELIVS } from \"data/objectivesData\";\r\n\r\nconst NUM_CIRCLES = 20;\r\nconst MARGIN = { top: 10, right: 10, bottom: 3, left: 0 };\r\nconst DOMAIN = [0, MAX_DELIVS];\r\n\r\nexport default function DotHistogramSmall({\r\n  data,\r\n  goal,\r\n  width = 600,\r\n  height = 400,\r\n}) {\r\n  const svgSelector = useRef();\r\n  const circles = useMemo(\r\n    () => quantileBins(width, height, data.length / NUM_CIRCLES, DOMAIN)(data),\r\n    [data]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const svgContainer = svgSelector.current\r\n      .attr(\"width\", width + MARGIN.left + MARGIN.right)\r\n      .attr(\"height\", height + MARGIN.top + MARGIN.bottom)\r\n      .style(\"pointer-events\", \"none\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"graph-area\")\r\n      .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`);\r\n\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .call((s) => {\r\n        s.selectAll(\"line\").attr(\"stroke\", \"gray\");\r\n        s.selectAll(\"path\").attr(\"stroke\", \"gray\");\r\n      });\r\n\r\n    svgContainer\r\n      .append(\"path\")\r\n      .attr(\"class\", \"ridgeline\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"steelblue\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const x = d3.scaleLinear().domain(DOMAIN).range([0, width]);\r\n    const y = d3.scaleLinear().domain([0, 0.05]).range([height, 0]).clamp(true);\r\n\r\n    const kde = kernelDensityEstimator(\r\n      kernelEpanechnikov(20),\r\n      x.ticks(MAX_DELIVS / 4)\r\n    );\r\n\r\n    svgSelector.current\r\n      .select(\".graph-area\")\r\n      .select(\".ridgeline\")\r\n      .datum(kde(data))\r\n      .attr(\r\n        \"d\",\r\n        d3\r\n          .line()\r\n          .curve(d3.curveBasis)\r\n          .x((d) => x(d[0]))\r\n          .y((d) => y(d[1]))\r\n      );\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const x = d3.scaleLinear().domain(DOMAIN).range([0, width]);\r\n    const y = d3.scaleLinear().domain([0, data.length]).range([height, 0]);\r\n\r\n    svgSelector.current\r\n      .select(\".graph-area\")\r\n      .selectAll(\".icons\")\r\n      .data(circles)\r\n      .join((enter) =>\r\n        enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"icons\")\r\n          .call((s) => s.append(\"path\"))\r\n      )\r\n      .call((s) => {\r\n        s.select(\"path\").attr(\r\n          \"d\",\r\n          d3.symbol(WATERDROP_ICON, height / NUM_CIRCLES)\r\n        );\r\n      })\r\n      .attr(\"transform\", (d) => `translate(${x(d[0])},${y(d[1])})`)\r\n      .attr(\"fill\", (d) => (d[0] > goal ? \"steelblue\" : \"black\"));\r\n  }, [goal, circles]);\r\n\r\n  return (\r\n    <svg\r\n      className=\"dot-pdf-shadowed\"\r\n      ref={(e) => void (svgSelector.current = d3.select(e))}\r\n    ></svg>\r\n  );\r\n}\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["DEFAULT_GOAL","DEFAULT_OBJECTIVE_NAME","DEFAULT_SCEN_NAME","DEFAULT_SORT_MODE","AppContext","createContext","OldMainApp","_ref","data","objectivesData","current","objectiveNames","useRef","Object","keys","goal","showScens","sortMode","curObjectiveName","curScenName","curScenNamePreview","setGoal","setShowScens","setSortMode","setCurObjectiveName","setCurScenName","setCurScenNamePreview","useInterface","curDelivInterps","curOrderedScenNames","useCaches","curMainInterp","useMemo","curScenNameDisplayed","_jsxs","Provider","value","children","className","_jsx","InputArea","MainBucket","levelInterp","map","objectiveName","SmallBucketTile","label","active","onClick","BucketGlyph","width","height","DotHistogram","SCENARIO_KEY_STRING","DELIV_KEY_STRING","Overlay","useState","criteriaSort","createInterps","_ref2","classNames","title","_ref3","useContext","_Fragment","orient","type","indexOf","min","max","length","onChange","e","parseInt","target","d","_ref4","style","top","d3","domain","MAX_DELIVS","range","_ref5","curPercentileScens","Array","from","reverse","filter","scenID","i","ticksExact","Math","floor","includes","name","id","checked","htmlFor","onMouseLeave","AnimateList","keyList","onMouseEnter","DotHistogramSmall","left","_ref6","currBBoxes","prevBBoxes","domRefs","useLayoutEffect","k","getBoundingClientRect","React","forEach","child","firstBox","key","lastBox","undefined","changeInX","requestAnimationFrame","transform","concat","transition","ref","el","objectives","mapFunc","delivs","v","clamp","NUM_CIRCLES","MARGIN","right","bottom","DOMAIN","svgSelector","circles","quantileBins","dataRange","x","y","count","useEffect","attr","append","call","scale","s","selectAll","text","razor","document","querySelector","ignoreFn","preventDefault","dragging","addEventListener","window","removeEventListener","offsetX","svgCircles","select","join","enter","WATERDROP_ICON","delay","invert","duration","svgContainer","kde","kernelDensityEstimator","kernelEpanechnikov","ticks","datum","curve","hasOwn","hasOwnProperty","classes","arguments","arg","appendClass","parseValue","isArray","apply","toString","prototype","newClass","module","exports","default"],"sourceRoot":""}