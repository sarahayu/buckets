{"version":3,"file":"static/js/746.aebda96d.chunk.js","mappings":"oPAWA,MAAMA,EAAS,GACTC,EAAwB,EACxBC,EAAS,EACTC,EAAgB,6CAChBC,EAAgC,EAEvB,SAASC,EAAyBC,GAA0B,IAAzB,WAAEC,GAAa,GAAOD,EACtE,MAAQE,QAASC,IAAiBC,EAAAA,EAAAA,QAAOC,OAAOC,KAAKC,EAAAA,KAC/CC,GAASJ,EAAAA,EAAAA,WACRK,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAShB,IAChDiB,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAErCG,GAAoBV,EAAAA,EAAAA,UAEpBW,GAAiBC,EAAAA,EAAAA,UACrB,KAAMC,EAAAA,EAAAA,IAAa,SAAUV,EAAAA,GAAgBJ,EAAaM,KAC1D,CAACA,IAGGS,GAAcF,EAAAA,EAAAA,UAClB,IACED,EACGI,KAAKC,IACJ,MAAMC,GAAIC,EAAAA,EAAAA,IACRnB,EAAaM,GACbW,EACAb,EAAAA,IAEF,OAAOgB,EAAAA,EAAAA,IAAW,EAAG,EAAG7B,EAAS,GAAGyB,KAAI,CAACK,EAAGC,IAC1CC,KAAKC,IAAIN,EAAEG,GAAS,GAALC,EAAS,IAAO,IAChC,IAEFG,WACL,CAACnB,IAyIH,OAtIAoB,QAAQC,IAAIf,EAAegB,SAE3BC,EAAAA,EAAAA,kBAAgB,KACdxB,EAAON,QAAU,CACf+B,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAGjBvB,EAAkBZ,QACfoC,KAAK,QAASJ,OAAOC,YACrBG,KAAK,SAAUJ,OAAOG,YAAY,GACpC,KAEHL,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAQzB,EAAON,QAAQ+B,MAC3BG,EAAS5B,EAAON,QAAQkC,OAEpBG,EACJ,GACC3B,EACG4B,EAAAA,IAAOtB,EAAYC,KAAKsB,GAAMA,EAAE,OAA6B,EAArBvB,EAAYa,QACpD,GAWAW,GATYC,EAAAA,EAAAA,IAChBV,EAAQ,EACRG,EAAS,EACTlB,EAAYC,KAAI,CAACyB,EAAMC,KAAG,CACxBC,EAAGF,EAAK,GAAKL,EAAQ3C,EACrBmD,GAAIF,OAIgB1B,KAAI6B,IAAA,IAAGD,GAAIF,EAAG,EAAEI,EAAC,EAAEC,GAAGF,EAAA,MAAM,CAClDJ,KAAM1B,EAAY2B,GAAK1B,KAAKgC,GAAMA,EAAIZ,IACtCa,OAAQlC,EAAY2B,GAAK,GAAKN,EAC9Bc,KAAsB,GAAhB3B,KAAK4B,SAAgB,GAC3BC,IAAqB,IAAhB7B,KAAK4B,SAAiB,IAC3BE,OAAQP,EACRQ,OAAQjB,EAAAA,IAAe,CAAW,GAAT5C,EAAaA,EAAkB,GAATA,GAAvC4C,CACNd,KAAK4B,UAEPI,KAAMT,EACNU,KAAMT,EACP,IAEDpC,EAAkBZ,QACf0D,UAAU,mBACVC,KAAKnB,GAAO,CAACoB,EAAGzC,IAAMA,IACtB0C,MAAMC,GACEA,EACJC,OAAO,KACP3B,KAAK,QAAS,kBACd4B,MAAM9C,IACLA,EAAE6C,OAAO,KACN3B,KAAK,QAAS,kBACd6B,MAAK,SAAAC,EAA4B/C,GAAI,IAAtB,KAAEuB,EAAI,OAAEQ,GAAQgB,EAC9B5B,EAAAA,IAAU6B,MACPJ,OAAO,QACPA,OAAO,YACP3B,KAAK,KAAM,aAAejB,GAC1B4C,OAAO,QACP3B,KACC,YAAY,SAADgC,OAERlB,EAASxD,EAAU,EAAIE,EAA6B,MAGxDwC,KAAK,IAAKzC,GACb2C,EAAAA,IAAU6B,MACPJ,OAAO,KACP3B,KAAK,YAAY,kBAADgC,OAAoBjD,EAAC,MACrCuC,UAAU,QACVC,KAAKjB,GAAM,CAACkB,EAAGzC,IAAMA,IACrB0C,KAAK,QACLzB,KAAK,QAASc,EAASxD,EAAS,GAChC0C,KAAK,SAAUc,EAASxD,EAAS,GACjC0C,KAAK,KAAOc,EAASxD,EAAS,EAAK,GACnC0C,KAAK,KAAOc,EAASxD,EAAS,EAAK,GACnC0C,KAAK,QAAQ,CAACwB,EAAGzC,KAChBkD,EAAAA,EAAAA,IAA0BlD,EAAI3B,IAEpC,GAAE,MAGT4C,KAAK,aAAakC,IAAA,IAAC,OAAEf,GAAQe,EAAA,sBAAAF,OAAqBb,EAAM,QACxDU,MAAK,SAAAM,GAA2C,IAAjC,OAAEjB,EAAM,KAAEH,EAAI,KAAET,EAAI,OAAEQ,GAAQqB,EAC5CjC,EAAAA,IAAU6B,MACPK,OAAO,mBACPpC,KAAK,YAAY,aAADgC,OAAed,EAAM,gBAAAc,OAAejB,EAAI,MACxDsB,MAAM,UAAW,IACpBnC,EAAAA,IAAU6B,MACPK,OAAO,mBACPd,UAAU,QACVC,KAAKjB,GAAM,CAACkB,EAAGzC,IAAMA,IACrBiB,KAAK,QAASc,EAASxD,EAAS,GAChC0C,KAAK,SAAUc,EAASxD,EAAS,GACjC0C,KAAK,KAAOc,EAASxD,EAAS,EAAK,GACnC0C,KACC,KACCG,GACEW,EAASxD,EAAS,EAAK,GACxBgF,EAAAA,EAAAA,IAAqBnC,EAAIW,IAAWA,EAASxD,EAAS,KAE5D4C,EAAAA,IAAU6B,MACPK,OAAO,mBACPA,OAAO,QACPpC,KACC,YAAY,SAADgC,OAERlB,EAASxD,EAAU,EAAI8B,KAAKmD,MAAQ/E,EAA6B,KAG1E,IACCoE,MAAM9C,IACLA,EAAE0D,WAAW,KACVC,UAASC,IAAA,IAAC,IAAEzB,GAAKyB,EAAA,OAAKzB,CAAG,IACzB0B,OAAM,CAACnB,EAAGzC,IAA0B,EAApBK,KAAKwD,MAAM7D,EAAI,KAC/B8D,KAAK3C,EAAAA,KACLF,KAAK,aAAa8C,IAAA,IAAC,KAAEzB,GAAMyB,EAAA,sBAAAd,OAAqBX,EAAI,OAAI,IAE5DO,MAAM9C,IACLA,EAAE0D,WAAW,SACVC,UAASM,IAAA,IAAC,IAAE9B,GAAK8B,EAAA,MAAW,GAAN9B,CAAS,IAC/B0B,OAAM,CAACnB,EAAGzC,IAA0B,EAApBK,KAAKwD,MAAM7D,EAAI,KAC/B8D,KAAK3C,EAAAA,KACLkC,OAAO,mBACPpC,KACC,aACAgD,IAAA,IAAC,KAAE5B,EAAI,KAAEL,GAAMiC,EAAA,mBAAAhB,OAAkBZ,EAAI,gBAAAY,OAAejB,EAAI,QAEzDsB,MAAM,UAAW,EAAE,GACtB,GACH,CAACzD,EAAaN,KAGf2E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,UACEC,MAAOlF,EACPmF,SAAWC,GAAMnF,EAAmBoF,SAASD,EAAEE,OAAOJ,QAAQF,SAE7DtF,EAAagB,KAAI,CAAC6E,EAAa3E,KAC9BqE,EAAAA,EAAAA,KAAA,UAAQO,KAAM5E,EAAGsE,MAAOtE,EAAEoE,SACvBO,GAD6B3E,QAKpCqE,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLnD,GAAG,OACHkD,KAAK,eACLN,MAAM,OACNQ,QAASvF,EACTgF,SAAUA,KAAW/E,GAAcgF,IAAOA,GAAG,KAE/CH,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,OAAMX,SAAC,eACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,uBAAyBvF,EAAa,WAAa,IAAIwF,UACrEC,EAAAA,EAAAA,KAAA,OACEF,UAAW,eAAiBvF,EAAa,WAAa,IACtDoG,IAAMR,IAAY/E,EAAkBZ,QAAUsC,EAAAA,IAAUqD,EAAI,QAKtE,C,gHC9MO,SAAStE,EAAW+E,EAAOC,EAAMC,GACtC,OAAOhE,EAAAA,IAASgE,GAAOrF,KAAKE,GAAOA,GAAKmF,EAAQ,IAAOD,EAAOD,GAASA,GACzE,CAEO,SAASG,EAAWxE,EAAOG,GAAoC,IAA5BsE,EAAMC,UAAA5E,OAAA,QAAA6E,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAKE,EAAKF,UAAA5E,OAAA,QAAA6E,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC1DG,EAAc7E,EAAQ4E,EAAS5E,GAAS,EAAI4E,GAAU,EACxDE,EAAc9E,GAAS,EAAI4E,GAAU,EACnChD,EAAO,CACT,CACEZ,EAAGT,EAAAA,IAAesE,EAAa7E,EAA5BO,CAAmCkE,GACtCxD,EAAGV,EAAAA,IAAeJ,EAAQ,EAAvBI,CAA0BkE,IAE/B,CAAEzD,EAAG6D,EAAa5D,EAAGd,GACrB,CAAEa,EAAG8D,EAAY7D,EAAGd,GACpB,CACEa,EAAGT,EAAAA,IAAeuE,EAAY,EAA3BvE,CAA8BkE,GACjCxD,EAAGV,EAAAA,IAAeJ,EAAQ,EAAvBI,CAA0BkE,KAWjC,OARelE,EAAAA,MAEZS,GAAE,SAAUzB,GACX,OAAOA,EAAEyB,CACX,IACCC,GAAE,SAAU1B,GACX,OAAOA,EAAE0B,CACX,GACK8D,CAASnD,GAAQ,GAC1B,CAEO,SAASoD,EAAaC,EAAaC,EAAkBC,GAC1D,IAAIH,EAAeC,EAAY/F,KAAKkG,GAClC3F,KAAK4F,MAAMD,EAAItF,OAASoF,KAEtBI,EAAM/E,EAAAA,IAAOyE,GAEjB,KAAOM,EAAMH,GACXH,EACEzE,EAAAA,IAAY0E,GAAa,CAAC1F,EAAGH,IACd,IAAbG,EAAEO,OACEP,EAAEO,OAASoF,EAAmBF,EAAa5F,GAC3CmG,QAEH,EAELD,EAAM/E,EAAAA,IAAOyE,GAGf,KAAOM,EAAMH,GACXH,EACEzE,EAAAA,IAAY0E,GAAa,CAAC1F,EAAGH,IACd,IAAbG,EAAEO,OACEP,EAAEO,OAASoF,EAAmBF,EAAa5F,IAC1CmG,QAEJ,EAELD,EAAM/E,EAAAA,IAAOyE,GAGf,OAAOA,CACT,CAGO,SAASQ,EAAY9B,EAAO+B,GAEjC,MAAMrB,GAAMjG,EAAAA,EAAAA,QAAO,CACjBuF,MAAOA,EACPgC,KAAM,OAGFzH,EAAUmG,EAAInG,QAAQyF,MAa5B,OARI+B,EAAeA,EAAY/B,EAAOzF,GAAWyF,IAAUzF,KACzDmG,EAAInG,QAAU,CACZyF,MAAOA,EACPgC,KAAMzH,IAKHmG,EAAInG,QAAQyH,IACrB,CAEO,MAAMpD,EAA6BlD,GACxCmB,EAAAA,GAAoBA,EAAAA,IAAe,CAAC,GAAK,GAArBA,CAA2BnB,G,sIC1F1C,MAAMuG,EAAa,KACbC,EAAsB,QACtBC,EAAmB,SAEnBvH,QAAwBwH,iBACnC,MAAMC,cAAoBC,MAAM,0BAA0BC,OAE1D,IAAK,MAAMC,KAAOH,EAAM,CACtB,IAAK,MAAMI,KAAQD,EAAIN,GACrBO,EAAKN,GAAoBM,EAAKN,GAAkB3G,KAAKkH,GACnD3G,KAAK4G,IAAI5G,KAAKC,IAAI,EAAG0G,GAAIT,KACzBW,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAGvBL,EAAIN,IAAuBa,EAAAA,EAAAA,IACzBP,EAAIN,IACJ7H,IAAA,IAAC,KAAEiG,GAAMjG,EAAA,OAAKiG,CAAI,GAEtB,CAIA,OAFApE,QAAQC,IAAI,kCAEL4G,EAAAA,EAAAA,IAAMV,GAAMhF,IAAA,IAAC,IAAEmF,GAAKnF,EAAA,OAAKmF,CAAG,GACrC,CAnBqCJ,G,0NCa9B,SAASW,EAAMV,EAAMW,GAC1B,MAAMC,EAAUvI,OAAOwI,QAAQb,EAAMW,GAErC,IAAK,MAAMG,KAAOzI,OAAOC,KAAKsI,GAC5BA,EAAQE,GAAOF,EAAQE,GAAK,GAG9B,OAAOF,CACT,C,4BAEO,MAAMG,EAAiB,CAC5BC,KAAM,SAAUC,EAASC,GACvBD,EAAQE,OAAO,GAAID,EAAO,GAC1BD,EAAQG,OAAOF,EAAO,GAAIA,EAAO,GAEjCD,EAAQI,IAAI,EAAG,EAAGH,EAAOxH,KAAK4H,KAAK,GAAK,GAAI5H,KAAK6H,GAAK,EAAc,EAAV7H,KAAK6H,GAAU,GACzEN,EAAQG,OAAO,GAAIF,EAAO,GAC1BD,EAAQO,WACV,GAGK,SAAS5E,EAAqB6E,GACnC,OAAQ,OAASA,GAAK,EAAI,OAASA,GAAK,EAAI,OAASA,EAAI,OAAU,GACrE,CAEO,SAASC,EAAuBC,EAAQC,GAC7C,OAAO,SAAUC,GACf,OAAOD,EAAEzI,KAAI,SAAU8B,GACrB,MAAO,CACLA,EACAT,EAAAA,IAAQqH,GAAG,SAAUxB,GACnB,OAAOsB,EAAO1G,EAAIoF,EACpB,IAEJ,GACF,CACF,CAEO,SAASyB,EAAmBC,GACjC,OAAO,SAAU1B,GACf,OAAO3G,KAAKsI,IAAK3B,GAAK0B,IAAO,EAAK,KAAQ,EAAI1B,EAAIA,GAAM0B,EAAI,CAC9D,CACF,CAEA,SAASE,EAAkBhI,GACzB,MAAMiI,EAAMjI,EAAQ,EAEdkI,EAAmB,EAAVzI,KAAK6H,GAAU,EADX,GAGba,EAAQ,CACZ,CACEnH,EAAGvB,KAAK2I,IAAe,EAAV3I,KAAK6H,GAAU,GAAKW,EACjChH,EAAGxB,KAAK4I,IAAe,EAAV5I,KAAK6H,GAAU,GAAKW,GAEnC,CACEjH,EAAG,EACHC,GAAIxB,KAAKmD,MAAQqF,IAIrB,IAAK,IAAI7I,EAAI,EAAGA,GAdG,GAccA,IAC/B+I,EAAMG,KAAK,CACTtH,EAAGvB,KAAK2I,IAAIhJ,EAAI8I,EAAQzI,KAAK6H,GAAK,GAAKW,EACvChH,EAAGxB,KAAK4I,IAAIjJ,EAAI8I,EAAQzI,KAAK6H,GAAK,GAAKW,IAI3C,OAAOE,CACT,CAEO,SAASI,EAAoBC,EAAOjE,GACzC,MAAMkE,EAASC,IAAAA,OAAcC,OAAOH,GAE9BI,EAAOH,EAAOpC,IAAIrF,EACtB6H,EAAOJ,EAAO/I,IAAIsB,EAClB8H,EAAOL,EAAOpC,IAAIpF,EAClB8H,EAAON,EAAO/I,IAAIuB,EAEd+H,EAAOzI,EAAAA,IAAe,CAACqI,EAAMC,IAC7BI,EAAO1I,EAAAA,IAAe,CAACuI,EAAMC,IAE7BG,EAAS,GAEf,IAAK,IAAI9J,EAAI,EAAGA,EAAImF,EAAOnF,IACzB,OAAa,CACX,MAAM4B,EAAIgI,EAAKvJ,KAAK4B,UACdJ,EAAIgI,EAAKxJ,KAAK4B,UAEpB,GAAIqH,IAAAA,SAAgBS,SAASX,EAAO,CAAExH,IAAGC,MAAM,CAC7CiI,EAAOZ,KAAK,CAACtH,EAAGC,IAChB,KACF,CACF,CAGF,OAAOiI,CACT,CAGO,MAAME,EAAyB,WACpC,MAAMjB,EAAQH,EAAkB,GAC1BqB,EAAQrB,EAAkB,GAE1BsB,EAAS,GAEf,IAAK,IAAIlK,EAAI,EAAGA,EAAI+I,EAAMrI,OAAS,EAAGV,IACpCkK,EAAOhB,KAAK,CACVH,EAAM/I,GACN+I,EAAM/I,GAAKA,EAAI,EAAI,EAAI,IACvBiK,EAAMjK,GAAKA,EAAI,EAAI,EAAI,IACvBiK,EAAMjK,KAIV,OAAOkK,CACT,CAhBsC,GAkBtC,IAAIC,EAGG,SAAS7I,EAAuBM,EAAGC,EAAGR,GAE3C8I,EACEA,GAAehB,EAAoBP,EAAkB,GAAIvH,EAAMX,QAEjE,MAAM0J,EAAOjJ,EAAAA,IAAOE,EAAMvB,KAAInB,IAAA,IAAC,EAAE8C,GAAG9C,EAAA,OAAU,IAAJ8C,IAAY,EAAI,IAAI,KACxD4I,EAAahK,KAAKwD,MAAgC,EAAzBxD,KAAK4H,KAAKmC,EAAO,MAAa,GAEvDE,EAAcH,EAAYrK,KAAI6B,IAAA,IAAEC,EAAGC,GAAEF,EAAA,MAAK,CAC9CC,EAAIyI,EACJxI,EAAIwI,EACL,IAGKE,EAASjB,IAAAA,OACbkB,EAASlB,IAAAA,OACTmB,EAAYnB,IAAAA,UAERoB,EAASH,EAAOhB,SAEhBoB,EAAUL,EAAYpD,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAE9CyD,EAAcvJ,EAAMvB,KAAI,CAAAiD,EAAY/C,KAAO,IAAlB,EAAEyB,EAAC,GAAEC,GAAIqB,EACtC,MAAO8H,EAAIC,GAAMH,EAAQ3K,GACzB,OAAOwK,EAAOO,OAAOF,EAAIC,EAAQ,IAAJrJ,EAAS,CACpCuJ,YAAa,EACbtJ,GAAIA,GACJ,IAGEuJ,EAAQjB,EAAsBlK,KAAKoL,GACvC5B,IAAAA,KAAYC,OAAO,CACjB4B,SAAU7B,IAAAA,SAAgB8B,OAAOF,GACjCG,SAAUH,EACVI,UAAU,MAIRC,EAAOjC,IAAAA,KAAYC,OAAO,CAC9B+B,UAAU,IAGZhC,IAAAA,KAAYkC,SAASD,EAAMN,GAE3B3B,IAAAA,KAAYmC,UAAUF,EAAM,CAAE3J,EAAG,EAAGC,EAAG,IACvCyH,IAAAA,KAAYpI,MAAMqK,EAAmB,IAAblB,EAA+B,IAAbA,GAE1CI,EAAUiB,IAAIhB,EAAOiB,MAAO,IAAIf,EAAaW,IAG7C,IAAK,IAAIvL,EAAI,EAAG4L,EAAM,GAAI5L,EAAU,IAAN4L,EAAY5L,IACxCuK,EAAOsB,OAAOnB,EAAQ,IAAOkB,GAE/B,OAAOhB,EAAY9K,KAAIqD,IAAA,IAAC,SAAEgI,EAAQ,GAAEzJ,GAAIyB,EAAA,MAAM,CAC5CzB,KACAE,EAAGuJ,EAASvJ,EAAIA,EAChBC,EAAGsJ,EAAStJ,EAAIA,EAAiB,IAAbwI,EACrB,GACH,CAmCO,SAASyB,EAAeC,EAAY7K,GACzC,MAAO8K,EAAKC,IAAU3M,EAAAA,EAAAA,UAASyM,GAK/B,MAAO,EAHWpM,EAAAA,EAAAA,UAAQ,IAAMuB,EAAM8K,IAAM,CAACA,KACxBE,EAAAA,EAAAA,cAAalF,IAAWiF,EAAO/K,EAAM8F,GAAG,GAAE,IAGjE,CAEO,SAAS/G,EAAc2E,EAAMuH,EAAS3J,GAC3C,MAAM4J,EAAS5J,EAAKoC,GAAM4B,EAAAA,IAAqB2F,GAAS1F,EAAAA,IACxD,OAAOtF,EAAAA,MAEJkL,QAAOnM,EAAAA,EAAAA,IAAW,EAAG,EAAGkM,EAAO1L,SAC/B4L,MAAMF,EAAOtM,KAAKkH,GAAM3G,KAAK4G,IAAI,EAAGD,EAAI,OAAS,KACjDuF,OAAM,EACX,CAEO,SAAS3M,EAAa4M,EAAUhK,EAAMiK,GAC3C,MAAiB,WAAbD,EACKxN,OAAOC,KAAKuD,EAAKiK,GAAWjG,EAAAA,KAAsBU,MACvD,CAACC,EAAGC,IACFjG,EAAAA,IAAQqB,EAAKiK,GAAWjG,EAAAA,IAAqBW,GAAGV,EAAAA,KAChDtF,EAAAA,IAAQqB,EAAKiK,GAAWjG,EAAAA,IAAqBY,GAAGX,EAAAA,OAGrC,eAAb+F,EACKxN,OAAOC,KAAKuD,EAAKiK,GAAWjG,EAAAA,KAAsBU,MACvD,CAACC,EAAGC,IACFjG,EAAAA,IAAOqB,EAAKiK,GAAWjG,EAAAA,IAAqBW,GAAGV,EAAAA,KAC/CtF,EAAAA,IAAOqB,EAAKiK,GAAWjG,EAAAA,IAAqBY,GAAGX,EAAAA,YAJrD,CAOF,C","sources":["RecursiveDropletsBasicApp.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport React, { useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport { objectivesData } from \"./data/objectivesData\";\r\nimport {\r\n  createInterps,\r\n  criteriaSort,\r\n  percentToRatioFilled,\r\n  placeDropsUsingPhysics,\r\n} from \"./utils\";\r\n\r\nconst LEVELS = 10;\r\nconst DEFAULT_OBJECTIVE_IDX = 2;\r\nconst RAD_PX = 7;\r\nconst DROPLET_SHAPE = \"M0,-10L5,-5A7.071,7.071,0,1,1,-5,-5L0,-10Z\";\r\nconst SVG_DROPLET_WIDTH_DONT_CHANGE = 4;\r\n\r\nexport default function RecursiveDropletsBasicApp({ watercolor = false }) {\r\n  const { current: objectiveIDs } = useRef(Object.keys(objectivesData));\r\n  const winDim = useRef();\r\n  const [curObjectiveIdx, setCurObjectiveIdx] = useState(DEFAULT_OBJECTIVE_IDX);\r\n  const [normalize, setNormalize] = useState(false);\r\n\r\n  const bucketSvgSelector = useRef();\r\n\r\n  const orderedScenIDs = useMemo(\r\n    () => criteriaSort(\"median\", objectivesData, objectiveIDs[curObjectiveIdx]),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  const waterLevels = useMemo(\r\n    () =>\r\n      orderedScenIDs\r\n        .map((s) => {\r\n          const i = createInterps(\r\n            objectiveIDs[curObjectiveIdx],\r\n            s,\r\n            objectivesData\r\n          );\r\n          return ticksExact(0, 1, LEVELS + 1).map((d, j) =>\r\n            Math.max(i(d), j == 0 ? 0.1 : -1)\r\n          );\r\n        })\r\n        .reverse(),\r\n    [curObjectiveIdx]\r\n  );\r\n\r\n  console.log(orderedScenIDs.length);\r\n\r\n  useLayoutEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    bucketSvgSelector.current\r\n      .attr(\"width\", window.innerWidth)\r\n      .attr(\"height\", window.innerHeight);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    const scale =\r\n      1 /\r\n      (normalize\r\n        ? d3.sum(waterLevels.map((l) => l[0])) / (waterLevels.length * 1)\r\n        : 1);\r\n\r\n    const nodes_pos = placeDropsUsingPhysics(\r\n      width / 2,\r\n      height / 2,\r\n      waterLevels.map((levs, idx) => ({\r\n        r: levs[0] * scale * RAD_PX,\r\n        id: idx,\r\n      }))\r\n    );\r\n\r\n    const nodes = nodes_pos.map(({ id: idx, x, y }) => ({\r\n      levs: waterLevels[idx].map((w) => w * scale),\r\n      maxLev: waterLevels[idx][0] * scale,\r\n      tilt: Math.random() * 50 - 25,\r\n      dur: Math.random() * 500 + 1000,\r\n      startX: x,\r\n      startY: d3.scaleLinear([-RAD_PX * 2 - RAD_PX, -RAD_PX * 2])(\r\n        Math.random()\r\n      ),\r\n      endX: x,\r\n      endY: y,\r\n    }));\r\n\r\n    bucketSvgSelector.current\r\n      .selectAll(\".dropTranslateY\")\r\n      .data(nodes, (_, i) => i)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"dropTranslateY\")\r\n          .call((s) => {\r\n            s.append(\"g\")\r\n              .attr(\"class\", \"dropTranslateX\")\r\n              .each(function ({ levs, maxLev }, i) {\r\n                d3.select(this)\r\n                  .append(\"defs\")\r\n                  .append(\"clipPath\")\r\n                  .attr(\"id\", \"drop-mask-\" + i)\r\n                  .append(\"path\")\r\n                  .attr(\r\n                    \"transform\",\r\n                    `scale(${\r\n                      (maxLev * RAD_PX) / 2 / SVG_DROPLET_WIDTH_DONT_CHANGE\r\n                    })`\r\n                  )\r\n                  .attr(\"d\", DROPLET_SHAPE);\r\n                d3.select(this)\r\n                  .append(\"g\")\r\n                  .attr(\"clip-path\", `url(#drop-mask-${i})`)\r\n                  .selectAll(\"rect\")\r\n                  .data(levs, (_, i) => i)\r\n                  .join(\"rect\")\r\n                  .attr(\"width\", maxLev * RAD_PX * 2)\r\n                  .attr(\"height\", maxLev * RAD_PX * 2)\r\n                  .attr(\"x\", (-maxLev * RAD_PX * 2) / 2)\r\n                  .attr(\"y\", (-maxLev * RAD_PX * 2) / 2)\r\n                  .attr(\"fill\", (_, i) =>\r\n                    interpolateWatercolorBlue(i / LEVELS)\r\n                  );\r\n              });\r\n          });\r\n      })\r\n      .attr(\"transform\", ({ startY }) => `translate(0, ${startY})`)\r\n      .each(function ({ startX, tilt, levs, maxLev }) {\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .attr(\"transform\", `translate(${startX}, 0) rotate(${tilt})`)\r\n          .style(\"opacity\", 0.2);\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .selectAll(\"rect\")\r\n          .data(levs, (_, i) => i)\r\n          .attr(\"width\", maxLev * RAD_PX * 2)\r\n          .attr(\"height\", maxLev * RAD_PX * 2)\r\n          .attr(\"x\", (-maxLev * RAD_PX * 2) / 2)\r\n          .attr(\r\n            \"y\",\r\n            (l) =>\r\n              (maxLev * RAD_PX * 2) / 2 -\r\n              percentToRatioFilled(l / maxLev) * (maxLev * RAD_PX * 2)\r\n          );\r\n        d3.select(this)\r\n          .select(\".dropTranslateX\")\r\n          .select(\"path\")\r\n          .attr(\r\n            \"transform\",\r\n            `scale(${\r\n              (maxLev * RAD_PX) / 2 / Math.SQRT2 / SVG_DROPLET_WIDTH_DONT_CHANGE\r\n            })`\r\n          );\r\n      })\r\n      .call((s) => {\r\n        s.transition(\"y\")\r\n          .duration(({ dur }) => dur)\r\n          .delay((_, i) => Math.floor(i / 1) * 5)\r\n          .ease(d3.easeExpOut)\r\n          .attr(\"transform\", ({ endY }) => `translate(0, ${endY})`);\r\n      })\r\n      .call((s) => {\r\n        s.transition(\"trans\")\r\n          .duration(({ dur }) => dur * 0.5)\r\n          .delay((_, i) => Math.floor(i / 1) * 5)\r\n          .ease(d3.easeLinear)\r\n          .select(\".dropTranslateX\")\r\n          .attr(\r\n            \"transform\",\r\n            ({ endX, tilt }) => `translate(${endX}, 0) rotate(${tilt})`\r\n          )\r\n          .style(\"opacity\", 1);\r\n      });\r\n  }, [waterLevels, normalize]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <select\r\n        value={curObjectiveIdx}\r\n        onChange={(e) => setCurObjectiveIdx(parseInt(e.target.value))}\r\n      >\r\n        {objectiveIDs.map((objectiveID, i) => (\r\n          <option name={i} value={i} key={i}>\r\n            {objectiveID}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"html\"\r\n        name=\"fav_language\"\r\n        value=\"HTML\"\r\n        checked={normalize}\r\n        onChange={() => void setNormalize((e) => !e)}\r\n      />\r\n      <label htmlFor=\"html\">normalize</label>\r\n      <div className={\"bubbles-svg-wrapper\" + (watercolor ? \"-painter\" : \"\")}>\r\n        <svg\r\n          className={\"bubbles-svg\" + (watercolor ? \"-painter\" : \"\")}\r\n          ref={(e) => void (bucketSvgSelector.current = d3.select(e))}\r\n        ></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      scen[DELIV_KEY_STRING] = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      ).sort((a, b) => b - a);\r\n    }\r\n    // obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING].slice(0, 100);\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n","import * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport { useCallback, useMemo, useState } from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.sqrt(2) / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\nexport function percentToRatioFilled(p) {\r\n  return (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.4;\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 20;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes) {\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n  RANDO_CACHE =\r\n    RANDO_CACHE || generateRandoPoints(generateWaterdrop(1), nodes.length);\r\n\r\n  const AREA = d3.sum(nodes.map(({ r }) => (r * 2.5) ** 2 * 3.14));\r\n  const WIDTH_AREA = Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n\r\n  const randoPoints = RANDO_CACHE.map(([x, y]) => [\r\n    x * WIDTH_AREA,\r\n    y * WIDTH_AREA,\r\n  ]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r * 2.5, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA * 1.1, WIDTH_AREA * 1.1);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for 1 second at 60 fps\r\n  for (let i = 0, FPS = 60; i < FPS * 0.25; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  return node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y + WIDTH_AREA * 0.15,\r\n  }));\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(name, curScen, data) {\r\n  const delivs = data[name][SCENARIO_KEY_STRING][curScen][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / 1200) || 0))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n}\r\n"],"names":["LEVELS","DEFAULT_OBJECTIVE_IDX","RAD_PX","DROPLET_SHAPE","SVG_DROPLET_WIDTH_DONT_CHANGE","RecursiveDropletsBasicApp","_ref","watercolor","current","objectiveIDs","useRef","Object","keys","objectivesData","winDim","curObjectiveIdx","setCurObjectiveIdx","useState","normalize","setNormalize","bucketSvgSelector","orderedScenIDs","useMemo","criteriaSort","waterLevels","map","s","i","createInterps","ticksExact","d","j","Math","max","reverse","console","log","length","useLayoutEffect","width","window","innerWidth","height","innerHeight","attr","scale","d3","l","nodes","placeDropsUsingPhysics","levs","idx","r","id","_ref2","x","y","w","maxLev","tilt","random","dur","startX","startY","endX","endY","selectAll","data","_","join","enter","append","call","each","_ref3","this","concat","interpolateWatercolorBlue","_ref4","_ref5","select","style","percentToRatioFilled","SQRT2","transition","duration","_ref6","delay","floor","ease","_ref7","_ref8","_ref9","_jsxs","className","children","_jsx","value","onChange","e","parseInt","target","objectiveID","name","type","checked","htmlFor","ref","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","MAX_DELIVS","SCENARIO_KEY_STRING","DELIV_KEY_STRING","async","objs","fetch","json","obj","scen","v","min","sort","a","b","mapBy","fn","newObjs","groupBy","key","WATERDROP_ICON","draw","context","size","moveTo","lineTo","arc","sqrt","PI","closePath","p","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","k","abs","generateWaterdrop","rad","delta","outer","cos","sin","push","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","coords","RANDO_CACHE","AREA","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","nx","ny","circle","restitution","parts","quad","position","centre","vertices","isStatic","cage","setParts","setCentre","add","world","FPS","update","useStickyScale","defaultVal","val","setVal","useCallback","curScen","delivs","domain","range","clamp","criteria","objective"],"sourceRoot":""}