{"version":3,"file":"static/js/230.dd23ae5c.chunk.js","mappings":"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","sources":["LargeDropletV2App.jsx","bucket-lib/utils.js","data/objectivesData.jsx","utils.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport * as THREE from \"three\";\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { interpolateWatercolorBlue, ticksExact } from \"./bucket-lib/utils\";\r\nimport {\r\n  MAX_DELIVS,\r\n  objectiveIDs,\r\n  objectivesData,\r\n  scenarioIDs,\r\n} from \"./data/objectivesData\";\r\nimport {\r\n  Camera,\r\n  DROPLET_SHAPE,\r\n  MeshGeometry,\r\n  createInterps,\r\n  mouseToThree,\r\n  placeDropsUsingPhysics,\r\n  sortBy,\r\n  useStateRef,\r\n  waterdrop,\r\n  waterdropDelta,\r\n  waterdropDeltaOutline,\r\n} from \"./utils\";\r\n\r\nconst LEVELS = 5;\r\nconst RAD_PX = 3;\r\nconst MIN_LEV_VAL = 0.1;\r\nconst SCEN_DIVISOR = 2;\r\nconst SMALL_DROP_PAD_FACTOR = 1;\r\nconst LARGE_DROP_PAD_FACTOR = 1.5;\r\nconst ANIM_TIME = 3;\r\nconst HOVER_AREA_FACTOR = 1.3 / (1 + Math.SQRT1_2);\r\n\r\nexport default function LargeDropletV2App() {\r\n  const winDim = useRef();\r\n  const [tooltip, setTooltip] = useState({\r\n    style: {},\r\n  });\r\n  const outlineMat = useRef();\r\n  const svgSelector = useRef();\r\n  const [grouping, setGrouping, groupingRef] = useStateRef(\"objective\");\r\n  const { current: filteredKeys } = useRef(\r\n    scenarioIDs.filter((_, i) => i % SCEN_DIVISOR === 0)\r\n  );\r\n\r\n  const primaryRef = useRef();\r\n  const secondaryRef = useRef();\r\n\r\n  const primaryKeys = grouping === \"objective\" ? objectiveIDs : filteredKeys;\r\n  const secondaryKeys = grouping === \"objective\" ? filteredKeys : objectiveIDs;\r\n\r\n  primaryRef.current = primaryKeys;\r\n  secondaryRef.current = secondaryKeys;\r\n\r\n  const watConfig = useRef();\r\n  const [reverseTranslation, setReverseTranslation, reverseTranslationRef] =\r\n    useStateRef();\r\n  const clockRef = useRef();\r\n\r\n  const [scene] = useState(() => {\r\n    const s = new THREE.Scene();\r\n    s.background = new THREE.Color(0xefefef);\r\n    return s;\r\n  });\r\n  const pointsMeshRef = useRef();\r\n  const meshIdxToLargeDropIdxRef = useRef({});\r\n\r\n  useEffect(() => {\r\n    winDim.current = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n\r\n    const width = winDim.current.width,\r\n      height = winDim.current.height;\r\n\r\n    svgSelector.current\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .call((s) => {\r\n        s.append(\"rect\")\r\n          .attr(\"width\", width)\r\n          .attr(\"height\", height)\r\n          .attr(\"stroke\", \"none\")\r\n          .attr(\"fill\", \"transparent\");\r\n      })\r\n      .append(\"g\")\r\n      .attr(\"class\", \"svg-trans\");\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    document.querySelector(\"#mosaic-area\").appendChild(renderer.domElement);\r\n\r\n    const camera = new Camera({\r\n      fov: 160,\r\n      near: 1,\r\n      far: 100,\r\n      width,\r\n      height,\r\n      domElement: d3.select(\".bubbles-wrapper\").node(),\r\n      zoomFn: (e) => {\r\n        svgSelector.current.select(\".svg-trans\").attr(\"transform\", e.transform);\r\n\r\n        if (!outlineMat.current) return;\r\n        outlineMat.current.opacity = d3\r\n          .scaleLinear()\r\n          .domain([1, 5])\r\n          .range([0.1, 1])\r\n          .clamp(true)(e.transform.k);\r\n        outlineMat.current.needsUpdate = true;\r\n      },\r\n    });\r\n\r\n    renderer.setAnimationLoop(() => {\r\n      renderer.render(scene, camera.camera);\r\n\r\n      if (!reverseTranslationRef.current) return;\r\n\r\n      if (clockRef.current.getElapsedTime() > ANIM_TIME) {\r\n        setReverseTranslation(null);\r\n        return;\r\n      }\r\n\r\n      const g = pointsMeshRef.current.geometry;\r\n\r\n      updateGeom(\r\n        g,\r\n        watConfig.current,\r\n        reverseTranslationRef.current,\r\n        d3.easeExp(clockRef.current.getElapsedTime() / ANIM_TIME)\r\n      );\r\n\r\n      g.verticesNeedUpdate = true;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const prevConfig = watConfig.current;\r\n\r\n    const mat = {};\r\n\r\n    if (grouping === \"objective\") {\r\n      for (let i = 0; i < primaryKeys.length; i++) {\r\n        const obj = primaryKeys[i];\r\n        const row = {};\r\n\r\n        for (let j = 0; j < secondaryKeys.length; j++) {\r\n          const scen = secondaryKeys[j];\r\n          const i = createInterps(obj, scen, objectivesData, MAX_DELIVS);\r\n          row[scen] = ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n        }\r\n\r\n        mat[obj] = row;\r\n      }\r\n    } else if (grouping === \"scenario\") {\r\n      for (let i = 0; i < primaryKeys.length; i++) {\r\n        const scen = primaryKeys[i];\r\n        const row = {};\r\n\r\n        for (let j = 0; j < secondaryKeys.length; j++) {\r\n          const obj = secondaryKeys[j];\r\n          const i = createInterps(obj, scen, objectivesData, MAX_DELIVS);\r\n          row[obj] = ticksExact(0, 1, LEVELS + 1).map((d) => i(d));\r\n        }\r\n\r\n        mat[scen] = row;\r\n      }\r\n    }\r\n\r\n    const config = initWaterdrops(mat);\r\n\r\n    if (prevConfig) setReverseTranslation(calcTranslations(config, prevConfig));\r\n    watConfig.current = config;\r\n    clockRef.current = new THREE.Clock();\r\n\r\n    const pointsMesh = initWaterdropsSimplified(config);\r\n\r\n    svgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".largeDrop\")\r\n      .attr(\"display\", \"none\");\r\n\r\n    scene.remove(...scene.children);\r\n    scene.add(pointsMesh);\r\n    pointsMeshRef.current = pointsMesh;\r\n    watConfig.current = config;\r\n  }, [grouping]);\r\n\r\n  useEffect(() => {\r\n    if (reverseTranslationRef.current) return;\r\n\r\n    const config = watConfig.current;\r\n\r\n    const { dropsMesh, lineMesh } = initWaterdropsMesh(config);\r\n    scene.add(dropsMesh, lineMesh);\r\n    scene.remove(pointsMeshRef.current);\r\n\r\n    outlineMat.current = lineMesh.material;\r\n\r\n    svgSelector.current\r\n      .select(\".svg-trans\")\r\n      .selectAll(\".largeDrop\")\r\n      .data(config.nodes)\r\n      .join((enter) => {\r\n        return enter\r\n          .append(\"g\")\r\n          .attr(\"class\", \"largeDrop\")\r\n          .call((s) => {\r\n            s.append(\"path\")\r\n              .attr(\"d\", DROPLET_SHAPE)\r\n              .attr(\"fill\", \"none\")\r\n              .attr(\"stroke\", \"transparent\")\r\n              .attr(\"vector-effect\", \"non-scaling-stroke\")\r\n              .attr(\"stroke-width\", 1);\r\n          });\r\n      })\r\n      .attr(\"display\", \"initial\")\r\n      .attr(\r\n        \"transform\",\r\n        ({ x, y }) =>\r\n          `translate(${x}, ${y}) scale(${config.height * HOVER_AREA_FACTOR})`\r\n      )\r\n      .on(\"mouseenter\", function (e, d) {\r\n        d3.select(this).select(\"path\").attr(\"stroke\", \"lightgray\");\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          text: d.key,\r\n        }));\r\n      })\r\n      .on(\"mousemove\", function (e, d) {\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          style: {\r\n            display: \"block\",\r\n            left: e.x,\r\n            top: e.y,\r\n          },\r\n        }));\r\n      })\r\n      .on(\"mouseleave\", function () {\r\n        setTooltip((tooltip) => ({\r\n          ...tooltip,\r\n          style: {\r\n            display: \"none\",\r\n          },\r\n        }));\r\n        d3.select(this).select(\"path\").attr(\"stroke\", \"transparent\");\r\n      });\r\n  }, [grouping, reverseTranslation]);\r\n\r\n  return (\r\n    <div className=\"bubbles-wrapper\">\r\n      <div\r\n        className=\"bubbles-input-area\"\r\n        onChange={(e) => void setGrouping(e.target.value)}\r\n      >\r\n        <input\r\n          type=\"radio\"\r\n          name=\"grouping\"\r\n          value=\"objective\"\r\n          id=\"objective\"\r\n          checked={grouping === \"objective\"}\r\n        />\r\n        <label htmlFor=\"objective\">objective</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"grouping\"\r\n          value=\"scenario\"\r\n          id=\"scenario\"\r\n          checked={grouping === \"scenario\"}\r\n        />\r\n        <label htmlFor=\"scenario\">scenario</label>\r\n      </div>\r\n      <div className=\"bubbles-tooltip\" style={tooltip.style}>\r\n        {tooltip.text}\r\n      </div>\r\n      <div id=\"mosaic-area\"></div>\r\n      <svg\r\n        className=\"mosaic-overlay\"\r\n        ref={(e) => (svgSelector.current = d3.select(e))}\r\n      ></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initWaterdrops(waterdropMatrix) {\r\n  const primaryKeys = Object.keys(waterdropMatrix);\r\n  const secondaryKeys = Object.keys(Object.values(waterdropMatrix)[0]);\r\n  const amtPrimaryKeys = primaryKeys.length;\r\n  const amtSecondaryKeys = secondaryKeys.length;\r\n\r\n  const largeDropRad = Math.max(\r\n    1,\r\n    Math.sqrt(amtSecondaryKeys / Math.PI) *\r\n      RAD_PX *\r\n      2 *\r\n      SMALL_DROP_PAD_FACTOR *\r\n      LARGE_DROP_PAD_FACTOR\r\n  );\r\n  const smallDropRad = Math.max(2, RAD_PX * SMALL_DROP_PAD_FACTOR);\r\n  const largeNodesPos = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    primaryKeys.map(() => ({\r\n      r: largeDropRad,\r\n    }))\r\n  );\r\n\r\n  const smallNodesPos = placeDropsUsingPhysics(\r\n    0,\r\n    0,\r\n    secondaryKeys.map(() => ({\r\n      r: smallDropRad,\r\n    }))\r\n  );\r\n\r\n  const pLookup = {};\r\n  const sLookup = {};\r\n\r\n  const largeNodes = primaryKeys.map((primaryKey, primaryKeyIdx) => {\r\n    pLookup[primaryKey] = primaryKeyIdx;\r\n    const innerNodes = secondaryKeys.map((secondaryKey, secondaryKeyIdx) => {\r\n      sLookup[secondaryKey] = secondaryKeyIdx;\r\n\r\n      const levs = waterdropMatrix[primaryKey][secondaryKey].map(\r\n        (w, i) => Math.max(w, i == 0 ? MIN_LEV_VAL : 0) * RAD_PX\r\n      );\r\n\r\n      return {\r\n        levs,\r\n        maxLev: RAD_PX,\r\n        domLev: calcDomLev(levs),\r\n        tilt: Math.random() * 50 - 25,\r\n        dur: Math.random() * 100 + 400,\r\n        x: smallNodesPos[secondaryKeyIdx].x,\r\n        y: smallNodesPos[secondaryKeyIdx].y,\r\n        group: primaryKey,\r\n        key: secondaryKey,\r\n        globalX:\r\n          largeNodesPos[primaryKeyIdx].x + smallNodesPos[secondaryKeyIdx].x,\r\n        globalY:\r\n          largeNodesPos[primaryKeyIdx].y + smallNodesPos[secondaryKeyIdx].y,\r\n      };\r\n    });\r\n\r\n    return {\r\n      nodes: innerNodes,\r\n      x: largeNodesPos[primaryKeyIdx].x,\r\n      y: largeNodesPos[primaryKeyIdx].y,\r\n      tilt: Math.random() * 50 - 25,\r\n      key: primaryKey,\r\n    };\r\n  });\r\n\r\n  return {\r\n    nodes: largeNodes,\r\n    height: smallNodesPos.height,\r\n    pLookup: pLookup,\r\n    sLookup: sLookup,\r\n  };\r\n}\r\n\r\nfunction calcTranslations(configObjScen, configScenObj) {\r\n  const translations = {};\r\n\r\n  for (const pKey of Object.keys(configObjScen.pLookup)) {\r\n    const row = {};\r\n    for (const sKey of Object.keys(configScenObj.pLookup)) {\r\n      let { globalX: xStart, globalY: yStart } =\r\n        configObjScen.nodes[configObjScen.pLookup[pKey]].nodes[\r\n          configObjScen.sLookup[sKey]\r\n        ];\r\n\r\n      let { globalX: xEnd, globalY: yEnd } =\r\n        configScenObj.nodes[configScenObj.pLookup[sKey]].nodes[\r\n          configScenObj.sLookup[pKey]\r\n        ];\r\n\r\n      row[sKey] = [xEnd - xStart, yEnd - yStart];\r\n    }\r\n\r\n    translations[pKey] = row;\r\n  }\r\n\r\n  return translations;\r\n}\r\n\r\nfunction updateGeom(g, endConfig, reverseTranslations, t) {\r\n  let idx = 0;\r\n  t = 1 - t;\r\n\r\n  for (let i = 0; i < endConfig.nodes.length; i++) {\r\n    const nodes = endConfig.nodes[i].nodes;\r\n    const pKey = endConfig.nodes[i].key;\r\n\r\n    for (let j = 0; j < nodes.length; j++) {\r\n      const { globalX: endX, globalY: endY, key: sKey } = nodes[j];\r\n\r\n      const [dx, dy] = reverseTranslations[pKey][sKey];\r\n\r\n      g.vertices[idx].setX(endX + t * dx);\r\n      g.vertices[idx].setY(-(endY + t * dy));\r\n\r\n      idx++;\r\n    }\r\n  }\r\n}\r\n\r\nfunction initWaterdropsMesh(configDrops) {\r\n  const dropsGeometry = new MeshGeometry();\r\n  const outlinePoints = [];\r\n\r\n  const outlineMeshCoords = waterdropDeltaOutline(0, 1, RAD_PX * 0.975);\r\n\r\n  for (let i = 0; i < configDrops.nodes.length; i++) {\r\n    const nodes = configDrops.nodes[i].nodes;\r\n\r\n    for (let j = 0; j < nodes.length; j++) {\r\n      const { globalX: x, globalY: y, levs, maxLev } = nodes[j];\r\n\r\n      for (let k = levs.length - 1; k >= 0; k--) {\r\n        const l1 = k !== levs.length - 1 ? levs[k + 1] : 0;\r\n        const l2 = levs[k];\r\n\r\n        const meshCoords = waterdropDelta(l1 / maxLev, l2 / maxLev, RAD_PX);\r\n        const color = new THREE.Color(interpolateWatercolorBlue(k / LEVELS));\r\n\r\n        dropsGeometry.addMeshCoords(\r\n          meshCoords,\r\n          { x: x, y: -y },\r\n          color,\r\n          (j % 5) / 50 + 0.001\r\n        );\r\n      }\r\n\r\n      outlinePoints.push(\r\n        ...outlineMeshCoords.map(\r\n          ([dx, dy]) => new THREE.Vector3(x + dx, -y - dy, (j % 5) / 50)\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const dropsMesh = new THREE.Mesh(\r\n    dropsGeometry.threeGeom,\r\n    new THREE.MeshBasicMaterial({\r\n      vertexColors: THREE.VertexColors,\r\n    })\r\n  );\r\n  const lineMesh = new THREE.LineSegments(\r\n    new THREE.BufferGeometry().setFromPoints(outlinePoints),\r\n    new THREE.LineBasicMaterial({\r\n      color: 0xcccccc,\r\n      transparent: true,\r\n      opacity: 0,\r\n    })\r\n  );\r\n\r\n  return {\r\n    dropsMesh,\r\n    lineMesh,\r\n  };\r\n}\r\n\r\nfunction initWaterdropsHoverers(configDrops, meshIdxToLargeDropIdx) {\r\n  const hovererGeometry = new MeshGeometry();\r\n\r\n  const hovererMeshCoords = waterdrop(\r\n    1,\r\n    configDrops.height * HOVER_AREA_FACTOR * 2\r\n  );\r\n\r\n  for (let i = 0; i < configDrops.nodes.length; i++) {\r\n    hovererGeometry\r\n      .addMeshCoords(\r\n        hovererMeshCoords,\r\n        {\r\n          x: configDrops.nodes[i].x,\r\n          y: -configDrops.nodes[i].y,\r\n        },\r\n        0x00ff00\r\n      )\r\n      .forEach((meshIdx) => (meshIdxToLargeDropIdx[meshIdx] = i));\r\n  }\r\n\r\n  const hovererMesh = new THREE.Mesh(\r\n    hovererGeometry.threeGeom,\r\n    new THREE.MeshBasicMaterial({\r\n      vertexColors: THREE.VertexColors,\r\n      transparent: true,\r\n      opacity: 0,\r\n    })\r\n  );\r\n\r\n  return hovererMesh;\r\n}\r\n\r\nfunction initWaterdropsSimplified(configDrops) {\r\n  const pointsGeometry = new THREE.Geometry();\r\n\r\n  for (let i = 0; i < configDrops.nodes.length; i++) {\r\n    const nodes = configDrops.nodes[i].nodes;\r\n\r\n    for (let j = 0; j < nodes.length; j++) {\r\n      const { globalX: x, globalY: y, levs, domLev } = nodes[j];\r\n\r\n      const color = domLev > 0 ? interpolateWatercolorBlue(domLev) : \"white\";\r\n\r\n      pointsGeometry.vertices.push(new THREE.Vector3(x, -y, 0.002));\r\n      pointsGeometry.colors.push(new THREE.Color(color));\r\n    }\r\n  }\r\n\r\n  const pointsMaterial = new THREE.PointsMaterial({\r\n    size: 0.4,\r\n    sizeAttenuation: true,\r\n    vertexColors: THREE.VertexColors,\r\n    map: new THREE.TextureLoader().load(\"drop.png\"),\r\n    transparent: true,\r\n  });\r\n\r\n  const pointsMesh = new THREE.Points(pointsGeometry, pointsMaterial);\r\n\r\n  return pointsMesh;\r\n}\r\n\r\n// TODO fix colors\r\nfunction calcDomLev(levs) {\r\n  levs = [1, ...levs, 0]; // include full level=1 because dominant lev might just be white\r\n\r\n  let mean = 0;\r\n  for (let i = 0; i < levs.length - 1; i++) {\r\n    const dif = levs[i] - levs[i + 1];\r\n    mean += (dif * (i - 1)) / (LEVELS + 4);\r\n  }\r\n\r\n  return mean;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { useRef } from \"react\";\r\n\r\n// inclusive\r\nexport function ticksExact(start, stop, count) {\r\n  return d3.range(count).map((i) => (i / (count - 1)) * (stop - start) + start);\r\n}\r\n\r\nexport function bucketPath(width, height, filled = 1.0, taper = 0.8) {\r\n  let bottomRight = width * taper + (width * (1 - taper)) / 2,\r\n    bottomLeft = (width * (1 - taper)) / 2;\r\n  let data = [\r\n    {\r\n      x: d3.interpolate(bottomRight, width)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n    { x: bottomRight, y: height },\r\n    { x: bottomLeft, y: height },\r\n    {\r\n      x: d3.interpolate(bottomLeft, 0)(filled),\r\n      y: d3.interpolate(height, 0)(filled),\r\n    },\r\n  ];\r\n  let lineFunc = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return d.x;\r\n    })\r\n    .y(function (d) {\r\n      return d.y;\r\n    });\r\n  return lineFunc(data) + \"z\";\r\n}\r\n\r\nexport function quantileBins(numericBins, unitsPerQuantile, maxQuantiles) {\r\n  let quantileBins = numericBins.map((bin) =>\r\n    Math.round(bin.length / unitsPerQuantile)\r\n  );\r\n  let sum = d3.sum(quantileBins);\r\n\r\n  while (sum > maxQuantiles) {\r\n    quantileBins[\r\n      d3.minIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : Infinity\r\n      )\r\n    ] -= 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  while (sum < maxQuantiles) {\r\n    quantileBins[\r\n      d3.maxIndex(numericBins, (d, i) =>\r\n        d.length !== 0\r\n          ? d.length / unitsPerQuantile - quantileBins[i]\r\n          : -Infinity\r\n      )\r\n    ] += 1;\r\n\r\n    sum = d3.sum(quantileBins);\r\n  }\r\n\r\n  return quantileBins;\r\n}\r\n\r\n// https://www.developerway.com/posts/implementing-advanced-use-previous-hook\r\nexport function usePrevious(value, isEqualFunc) {\r\n  // initialise the ref with previous and current values\r\n  const ref = useRef({\r\n    value: value,\r\n    prev: null,\r\n  });\r\n\r\n  const current = ref.current.value;\r\n\r\n  // if the value passed into hook doesn't match what we store as \"current\"\r\n  // move the \"current\" to the \"previous\"\r\n  // and store the passed value as \"current\"\r\n  if (isEqualFunc ? !isEqualFunc(value, current) : value !== current) {\r\n    ref.current = {\r\n      value: value,\r\n      prev: current,\r\n    };\r\n  }\r\n\r\n  // return the previous value only\r\n  return ref.current.prev;\r\n}\r\n\r\nexport const interpolateWatercolorBlue = (i) =>\r\n  d3.interpolateBlues(d3.scaleLinear([0.2, 1.0])(i));\r\n","import { mapBy } from \"../utils\";\r\n\r\nexport const MAX_DELIVS = 1200;\r\nexport const SCENARIO_KEY_STRING = \"scens\";\r\nexport const DELIV_KEY_STRING = \"delivs\";\r\nexport const DELIV_KEY_STRING_UNORD = \"delivs_unord\";\r\n\r\nexport const objectivesData = await (async function () {\r\n  const objs = await (await fetch(\"./all_objectives.json\")).json();\r\n\r\n  for (const obj of objs) {\r\n    obj[SCENARIO_KEY_STRING] = obj[SCENARIO_KEY_STRING];\r\n    for (const scen of obj[SCENARIO_KEY_STRING]) {\r\n      // data cleanup, clamping\r\n      const unord = scen[DELIV_KEY_STRING].map((v) =>\r\n        Math.min(Math.max(0, v), MAX_DELIVS)\r\n      );\r\n\r\n      scen[DELIV_KEY_STRING_UNORD] = unord;\r\n      scen[DELIV_KEY_STRING] = Array.from(unord).sort((a, b) => b - a);\r\n    }\r\n    obj[SCENARIO_KEY_STRING] = mapBy(\r\n      obj[SCENARIO_KEY_STRING],\r\n      ({ name }) => name\r\n    );\r\n  }\r\n\r\n  console.log(\"DATA: loading objectives data\");\r\n\r\n  return mapBy(objs, ({ obj }) => obj);\r\n})();\r\n\r\nexport const objectiveIDs = Object.keys(objectivesData);\r\nexport const scenarioIDs = Object.keys(\r\n  Object.values(objectivesData)[0][SCENARIO_KEY_STRING]\r\n);\r\n","import * as THREE from \"three\";\r\nimport * as d3 from \"d3\";\r\nimport Matter from \"matter-js\";\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DELIV_KEY_STRING, SCENARIO_KEY_STRING } from \"./data/objectivesData\";\r\nimport { ticksExact } from \"./bucket-lib/utils\";\r\n\r\nexport function clamp(x, a, b) {\r\n  return Math.max(a, Math.min(b, x));\r\n}\r\n\r\n// when fn is `({ name }) => name`, turns\r\n//\r\n//  [\r\n//    { name: \"Zeta\", age: 30 },\r\n//    { name: \"Aloy\", age: 40 },\r\n//  ];\r\n//\r\n// to\r\n//\r\n//  {\r\n//    \"Zeta\": { name: \"Zeta\", age: 30 },\r\n//    \"Aloy\": { name: \"Aloy\", age: 40 },\r\n//  };\r\nexport function mapBy(objs, fn) {\r\n  const newObjs = Object.groupBy(objs, fn);\r\n\r\n  for (const key of Object.keys(newObjs)) {\r\n    newObjs[key] = newObjs[key][0];\r\n  }\r\n\r\n  return newObjs;\r\n}\r\n\r\n// size is height of waterdrop plus a bit more (1/2 of size is distance from top of drop to center of circle part)\r\nexport const WATERDROP_ICON = {\r\n  draw: function (context, size) {\r\n    context.moveTo(0, -size / 2);\r\n    context.lineTo(size / 4, -size / 4);\r\n\r\n    context.arc(0, 0, size / Math.SQRT2 / 2, -Math.PI / 4, (Math.PI * 5) / 4);\r\n    context.lineTo(0, -size / 2);\r\n    context.closePath();\r\n  },\r\n};\r\n\r\n// path generated when WATERDROP_ICON size = 2\r\nexport const DROPLET_SHAPE = \"M0,-1L0.5,-0.5A0.707,0.707,0,1,1,-0.5,-0.5L0,-1Z\";\r\n\r\nexport function percentToRatioFilled(p) {\r\n  p -= 0.0088;\r\n  return Math.min(\r\n    1,\r\n    Math.max(\r\n      0,\r\n      (3.1304 * p ** 3 - 4.2384 * p ** 2 + 3.3471 * p + 0.0298) / 2.2326\r\n    )\r\n  );\r\n}\r\n\r\nconst CIRC_RAD = Math.SQRT1_2;\r\nconst DROP_RAD = 1;\r\nconst CIRC_HEIGHT = CIRC_RAD + CIRC_RAD;\r\nconst DROP_HEIGHT = DROP_RAD + CIRC_RAD;\r\nconst HAT_START = 0.75;\r\n\r\n// half width at widest is 1\r\nfunction yToHalfWidth(y) {\r\n  if (y >= HAT_START) {\r\n    const hatHalfWidth = Math.SQRT1_2;\r\n\r\n    return (hatHalfWidth * (1 - y)) / (1 - HAT_START);\r\n  }\r\n\r\n  const circFrac = fracDropToCirc(y);\r\n  const trigX = (1 - circFrac) * 2 - 1;\r\n\r\n  const angle = Math.acos(trigX);\r\n  const trigY = Math.sin(angle);\r\n\r\n  return trigY;\r\n}\r\n\r\n// fml, here sprite width is 2 (i.e. circ rad is 1) thus drop real height is 1 + sqrt2\r\nfunction yToSpriteY(y) {\r\n  return (y - CIRC_RAD / DROP_HEIGHT) * (1 + Math.SQRT2);\r\n}\r\n\r\nfunction spriteYToY(sy) {\r\n  return sy / (1 + Math.SQRT2) + CIRC_RAD / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracCircToDrop(v) {\r\n  return v / CIRC_HEIGHT / DROP_HEIGHT;\r\n}\r\n\r\nfunction fracDropToCirc(v) {\r\n  return v / (CIRC_HEIGHT / DROP_HEIGHT);\r\n}\r\n\r\nexport function waterdropDeltaOutline(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const rightCoords = [];\r\n  const leftCoords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    rightCoords.push(v2, v3);\r\n    leftCoords.push(v1, v4);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  rightCoords.push(v2, v3);\r\n  leftCoords.push(v1, v4);\r\n\r\n  rightCoords.push(...leftCoords.reverse());\r\n\r\n  return rightCoords;\r\n}\r\n\r\nexport function waterdropDelta(yStart, yEnd, size = 2) {\r\n  if (Math.abs(yStart - yEnd) < 0.01) return [];\r\n\r\n  const rad = (size / 2 / DROP_RAD) * CIRC_RAD;\r\n\r\n  const Y_DELTA = 0.1;\r\n\r\n  const coords = [];\r\n\r\n  let dx1, dy1, dx2, dy2;\r\n\r\n  for (let i = 1; i <= Math.ceil(1 / Y_DELTA); i++) {\r\n    dx1 = yToHalfWidth(yStart + (i - 1) * Y_DELTA);\r\n    dy1 = yToSpriteY(yStart + (i - 1) * Y_DELTA);\r\n    dx2 = yToHalfWidth(yStart + i * Y_DELTA);\r\n    dy2 = yToSpriteY(yStart + i * Y_DELTA);\r\n\r\n    if (spriteYToY(dy2) >= yEnd) break;\r\n\r\n    // CC !\r\n    const v1 = [-dx1 * rad, -dy1 * rad],\r\n      v2 = [dx1 * rad, -dy1 * rad],\r\n      v3 = [dx2 * rad, -dy2 * rad],\r\n      v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n    coords.push([v1, v2, v3]);\r\n    coords.push([v1, v3, v4]);\r\n  }\r\n\r\n  dx2 = yToHalfWidth(yEnd);\r\n  dy2 = yToSpriteY(yEnd);\r\n\r\n  // CC !\r\n  const v1 = [-dx1 * rad, -dy1 * rad],\r\n    v2 = [dx1 * rad, -dy1 * rad],\r\n    v3 = [dx2 * rad, -dy2 * rad],\r\n    v4 = [-dx2 * rad, -dy2 * rad];\r\n\r\n  coords.push([v1, v2, v3]);\r\n  coords.push([v1, v3, v4]);\r\n\r\n  return coords;\r\n}\r\n\r\nexport function waterdrop(yFill, size = 2) {\r\n  if (yFill === 0) return [];\r\n\r\n  return waterdropDelta(0, yFill, size);\r\n}\r\n\r\nexport function kernelDensityEstimator(kernel, X) {\r\n  return function (V) {\r\n    return X.map(function (x) {\r\n      return [\r\n        x,\r\n        d3.mean(V, function (v) {\r\n          return kernel(x - v);\r\n        }),\r\n      ];\r\n    });\r\n  };\r\n}\r\n\r\nexport function kernelEpanechnikov(k) {\r\n  return function (v) {\r\n    return Math.abs((v /= k)) <= 1 ? (0.75 * (1 - v * v)) / k : 0;\r\n  };\r\n}\r\n\r\nfunction generateWaterdrop(width) {\r\n  const rad = width / 2;\r\n  const partitions = 16;\r\n  const delta = (Math.PI * 3) / 2 / partitions;\r\n\r\n  const outer = [\r\n    {\r\n      x: Math.cos((Math.PI * 5) / 4) * rad,\r\n      y: Math.sin((Math.PI * 5) / 4) * rad,\r\n    },\r\n    {\r\n      x: 0,\r\n      y: -Math.SQRT2 * rad,\r\n    },\r\n  ];\r\n\r\n  for (let i = 0; i <= partitions; i++) {\r\n    outer.push({\r\n      x: Math.cos(i * delta - Math.PI / 4) * rad,\r\n      y: Math.sin(i * delta - Math.PI / 4) * rad,\r\n    });\r\n  }\r\n\r\n  return outer;\r\n}\r\n\r\nexport function generateRandoPoints(shape, count) {\r\n  const bounds = Matter.Bounds.create(shape);\r\n\r\n  const minX = bounds.min.x,\r\n    maxX = bounds.max.x,\r\n    minY = bounds.min.y,\r\n    maxY = bounds.max.y;\r\n\r\n  const genX = d3.scaleLinear([minX, maxX]);\r\n  const genY = d3.scaleLinear([minY, maxY]);\r\n\r\n  const points = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    while (true) {\r\n      const x = genX(Math.random());\r\n      const y = genY(Math.random());\r\n\r\n      if (Matter.Vertices.contains(shape, { x, y })) {\r\n        points.push([x, y]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n// inner diameter of 1\r\nexport const WATERDROP_CAGE_COORDS = (function () {\r\n  const outer = generateWaterdrop(3);\r\n  const inner = generateWaterdrop(1);\r\n\r\n  const coords = [];\r\n\r\n  for (let i = 0; i < outer.length - 2; i++) {\r\n    coords.push([\r\n      outer[i],\r\n      outer[i + (i < 2 ? 1 : 2)],\r\n      inner[i + (i < 2 ? 1 : 2)],\r\n      inner[i],\r\n    ]);\r\n  }\r\n\r\n  return coords;\r\n})();\r\n\r\nlet RANDO_CACHE;\r\nlet lastNodesLen;\r\n\r\nlet DET_CACHE;\r\nlet lastDetNodesLen;\r\n\r\nexport function radsToDropWidth(nodes) {\r\n  const AREA = d3.sum(nodes.map((r) => r ** 2 * 3.14));\r\n  return Math.floor((Math.sqrt(AREA / 3.14) * 2) / 2);\r\n}\r\n\r\n// assuming nodes is already ordered and first nodes are going to be put on the bottom\r\nexport function placeDropsUsingPhysics(x, y, nodes, reuse = false) {\r\n  if (reuse && DET_CACHE && nodes.length === lastDetNodesLen) return DET_CACHE;\r\n\r\n  // first generate random points within water droplet. we can stop here, but points might not be the most uniformly distributed\r\n\r\n  if (!RANDO_CACHE || nodes.length !== lastNodesLen)\r\n    RANDO_CACHE = d3\r\n      .range(4)\r\n      .map(() =>\r\n        generateRandoPoints(generateWaterdrop(1), (lastNodesLen = nodes.length))\r\n      );\r\n\r\n  const WIDTH_AREA = radsToDropWidth(nodes.map(({ r }) => r));\r\n\r\n  const randoPoints = RANDO_CACHE[\r\n    Math.floor(Math.random() * RANDO_CACHE.length)\r\n  ].map(([x, y]) => [x * WIDTH_AREA, y * WIDTH_AREA]);\r\n\r\n  // thus, we use physics engine to take care of distributing the points evenly and based on radius\r\n  const Engine = Matter.Engine,\r\n    Bodies = Matter.Bodies,\r\n    Composite = Matter.Composite;\r\n\r\n  const engine = Engine.create();\r\n\r\n  const nodePos = randoPoints.sort((a, b) => b[1] - a[1]);\r\n\r\n  const node_bodies = nodes.map(({ r, id }, i) => {\r\n    const [nx, ny] = nodePos[i];\r\n    return Bodies.circle(nx, ny, r, {\r\n      restitution: 0,\r\n      id: id,\r\n    });\r\n  });\r\n\r\n  const parts = WATERDROP_CAGE_COORDS.map((quad) =>\r\n    Matter.Body.create({\r\n      position: Matter.Vertices.centre(quad),\r\n      vertices: quad,\r\n      isStatic: true,\r\n    })\r\n  );\r\n\r\n  const cage = Matter.Body.create({\r\n    isStatic: true,\r\n  });\r\n\r\n  Matter.Body.setParts(cage, parts);\r\n\r\n  Matter.Body.setCentre(cage, { x: 0, y: 0 });\r\n  Matter.Body.scale(cage, WIDTH_AREA, WIDTH_AREA);\r\n\r\n  Composite.add(engine.world, [...node_bodies, cage]);\r\n\r\n  // run engine for SECS second at FPS fps\r\n  for (let i = 0, FPS = 60, SECS = 0.1; i < FPS * SECS; i++)\r\n    Engine.update(engine, 1000 / FPS);\r\n\r\n  const retVal = node_bodies.map(({ position, id }) => ({\r\n    id,\r\n    x: position.x + x,\r\n    y: position.y + y,\r\n  }));\r\n\r\n  retVal.height = (WIDTH_AREA / 2 / CIRC_RAD) * DROP_HEIGHT;\r\n\r\n  if (reuse && (!DET_CACHE || retVal.length !== lastDetNodesLen)) {\r\n    DET_CACHE = retVal;\r\n    lastDetNodesLen = retVal.length;\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\n// https://gist.github.com/mbostock/5743979\r\nexport function bounce(h) {\r\n  if (!arguments.length) h = 0.25;\r\n  var b0 = 1 - h,\r\n    b1 = b0 * (1 - b0) + b0,\r\n    b2 = b0 * (1 - b1) + b1,\r\n    x0 = 2 * Math.sqrt(h),\r\n    x1 = x0 * Math.sqrt(h),\r\n    x2 = x1 * Math.sqrt(h),\r\n    t0 = 1 / (1 + x0 + x1 + x2),\r\n    t1 = t0 + t0 * x0,\r\n    t2 = t1 + t0 * x1,\r\n    m0 = t0 + (t0 * x0) / 2,\r\n    m1 = t1 + (t0 * x1) / 2,\r\n    m2 = t2 + (t0 * x2) / 2,\r\n    a = 1 / (t0 * t0);\r\n  return function (t) {\r\n    return t >= 1\r\n      ? 1\r\n      : t < t0\r\n      ? a * t * t\r\n      : t < t1\r\n      ? a * (t -= m0) * t + b0\r\n      : t < t2\r\n      ? a * (t -= m1) * t + b1\r\n      : a * (t -= m2) * t + b2;\r\n  };\r\n}\r\n\r\nexport function rangeInclusive(a, b) {\r\n  return d3.range(a, b + 1);\r\n}\r\n\r\nexport function useStickyScale(defaultVal, scale) {\r\n  const [val, setVal] = useState(defaultVal);\r\n\r\n  const valActual = useMemo(() => scale(val), [val]);\r\n  const setValActual = useCallback((v) => void setVal(scale(v)), []);\r\n\r\n  return [valActual, setValActual];\r\n}\r\n\r\nexport function createInterps(obj_name, scen_name, data, maxDelivs) {\r\n  const delivs =\r\n    data[obj_name][SCENARIO_KEY_STRING][scen_name][DELIV_KEY_STRING];\r\n  return d3\r\n    .scaleLinear()\r\n    .domain(ticksExact(0, 1, delivs.length))\r\n    .range(delivs.map((v) => Math.min(1, v / maxDelivs)))\r\n    .clamp(true);\r\n}\r\n\r\nexport function criteriaSort(criteria, data, objective) {\r\n  if (criteria === \"median\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.mean(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"deliveries\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort(\r\n      (a, b) =>\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][a][DELIV_KEY_STRING]) -\r\n        d3.max(data[objective][SCENARIO_KEY_STRING][b][DELIV_KEY_STRING])\r\n    );\r\n  }\r\n  if (criteria === \"alphabetical\") {\r\n    return Object.keys(data[objective][SCENARIO_KEY_STRING]).sort();\r\n  }\r\n}\r\n\r\nfunction get(object, path, defaultValue) {\r\n  const parts = path.split(\".\");\r\n  for (let part of parts) {\r\n    if (!object) return defaultValue;\r\n    object = object[part];\r\n  }\r\n  return object ?? defaultValue;\r\n}\r\n\r\nfunction pick(fn) {\r\n  return typeof fn === \"string\" ? (v) => get(v, fn) : fn;\r\n}\r\n\r\nexport function sortBy(array, fn) {\r\n  fn = pick(fn);\r\n  return array.sort((a, b) => {\r\n    const va = fn(a);\r\n    const vb = fn(b);\r\n    if (va < vb) return -1;\r\n    if (va > vb) return 1;\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function toRadians(a) {\r\n  return (a * Math.PI) / 180;\r\n}\r\n\r\nexport class Camera {\r\n  fov;\r\n  near;\r\n  far;\r\n  width;\r\n  height;\r\n  camera;\r\n  zoom;\r\n  view;\r\n  curTransform;\r\n\r\n  constructor({ fov, near, far, width, height, domElement, zoomFn }) {\r\n    this.fov = fov;\r\n    this.near = near;\r\n    this.far = far;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      fov,\r\n      width / height,\r\n      near,\r\n      far + 1\r\n    );\r\n\r\n    this.camera.position.set(0, 0, this.far);\r\n\r\n    this.zoom = d3\r\n      .zoom()\r\n      .scaleExtent([\r\n        this.getScaleFromZ(this.far),\r\n        this.getScaleFromZ(this.near),\r\n      ])\r\n      .on(\"zoom\", (e) => {\r\n        this.d3ZoomHandler(e);\r\n        this.curTransform = e.transform;\r\n\r\n        zoomFn && zoomFn(e);\r\n      });\r\n\r\n    this.view = d3.select(domElement);\r\n    this.view.call(this.zoom);\r\n    this.zoom.transform(\r\n      this.view,\r\n      d3.zoomIdentity\r\n        .translate(this.width / 2, this.height / 2)\r\n        .scale(this.getScaleFromZ(this.far))\r\n    );\r\n  }\r\n\r\n  d3ZoomHandler(e) {\r\n    const scale = e.transform.k;\r\n    const x = -(e.transform.x - this.width / 2) / scale;\r\n    const y = (e.transform.y - this.height / 2) / scale;\r\n    const z = this.getZFromScale(scale);\r\n    this.camera.position.set(x, y, z);\r\n  }\r\n\r\n  getScaleFromZ(camera_z_position) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const half_fov_height = Math.tan(half_fov_radians) * camera_z_position;\r\n    const fov_height = half_fov_height * 2;\r\n    const scale = this.height / fov_height;\r\n    return scale;\r\n  }\r\n\r\n  getZFromScale(scale) {\r\n    const half_fov = this.fov / 2;\r\n    const half_fov_radians = toRadians(half_fov);\r\n    const scale_height = this.height / scale;\r\n    const camera_z_position = scale_height / (2 * Math.tan(half_fov_radians));\r\n    return camera_z_position;\r\n  }\r\n}\r\n\r\nexport class MeshGeometry {\r\n  threeGeom = new THREE.Geometry();\r\n  idx = 0;\r\n\r\n  addMeshCoords(meshCoords, transform, color, z = 0) {\r\n    const indices = [];\r\n\r\n    for (let j = 0; j < meshCoords.length; j++) {\r\n      const [v1, v2, v3] = meshCoords[j];\r\n\r\n      const a = new THREE.Vector3(transform.x + v1[0], transform.y - v1[1], z);\r\n      const b = new THREE.Vector3(transform.x + v2[0], transform.y - v2[1], z);\r\n      const c = new THREE.Vector3(transform.x + v3[0], transform.y - v3[1], z);\r\n      this.threeGeom.vertices.push(a, b, c);\r\n\r\n      const face = new THREE.Face3(\r\n        this.idx * 3 + 0,\r\n        this.idx * 3 + 1,\r\n        this.idx * 3 + 2\r\n      );\r\n\r\n      if (color) {\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n        face.vertexColors.push(color);\r\n      }\r\n\r\n      this.threeGeom.faces.push(face);\r\n\r\n      indices.push(this.idx++);\r\n    }\r\n\r\n    return indices;\r\n  }\r\n}\r\n\r\nexport function mouseToThree(mouseX, mouseY, width, height) {\r\n  return new THREE.Vector3(\r\n    (mouseX / width) * 2 - 1,\r\n    -(mouseY / height) * 2 + 1,\r\n    1\r\n  );\r\n}\r\n\r\nexport function useStateRef(val) {\r\n  const [state, _setState] = useState(val);\r\n  const stateRef = useRef(val);\r\n\r\n  useEffect(() => void (stateRef.current = state), [state]);\r\n\r\n  const setState = useCallback((v) => {\r\n    _setState((stateRef.current = v));\r\n  }, []);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n"],"names":["LEVELS","RAD_PX","MIN_LEV_VAL","SCEN_DIVISOR","SMALL_DROP_PAD_FACTOR","LARGE_DROP_PAD_FACTOR","ANIM_TIME","HOVER_AREA_FACTOR","Math","SQRT1_2","LargeDropletV2App","winDim","useRef","tooltip","setTooltip","useState","style","outlineMat","svgSelector","grouping","setGrouping","groupingRef","useStateRef","current","filteredKeys","scenarioIDs","filter","_","i","primaryRef","secondaryRef","primaryKeys","objectiveIDs","secondaryKeys","watConfig","reverseTranslation","setReverseTranslation","reverseTranslationRef","clockRef","scene","s","THREE","background","pointsMeshRef","useEffect","width","window","innerWidth","height","innerHeight","attr","call","append","renderer","antialias","setSize","document","querySelector","appendChild","domElement","camera","Camera","fov","near","far","d3","node","zoomFn","e","select","transform","opacity","domain","range","clamp","k","needsUpdate","setAnimationLoop","render","getElapsedTime","g","geometry","updateGeom","verticesNeedUpdate","prevConfig","mat","length","obj","row","j","scen","createInterps","objectivesData","MAX_DELIVS","ticksExact","map","d","config","initWaterdrops","calcTranslations","pointsMesh","initWaterdropsSimplified","selectAll","remove","children","add","dropsMesh","lineMesh","initWaterdropsMesh","material","data","nodes","join","enter","DROPLET_SHAPE","_ref","x","y","concat","on","this","text","key","display","left","top","_jsxs","className","onChange","target","value","_jsx","type","name","id","checked","htmlFor","ref","waterdropMatrix","Object","keys","values","amtSecondaryKeys","largeDropRad","max","sqrt","PI","smallDropRad","largeNodesPos","placeDropsUsingPhysics","r","smallNodesPos","pLookup","sLookup","primaryKey","primaryKeyIdx","secondaryKey","secondaryKeyIdx","levs","w","maxLev","domLev","calcDomLev","tilt","random","dur","group","globalX","globalY","configObjScen","configScenObj","translations","pKey","sKey","xStart","yStart","xEnd","yEnd","endConfig","reverseTranslations","t","idx","endX","endY","dx","dy","vertices","setX","setY","configDrops","dropsGeometry","MeshGeometry","outlinePoints","outlineMeshCoords","waterdropDeltaOutline","l1","l2","meshCoords","waterdropDelta","color","interpolateWatercolorBlue","addMeshCoords","push","_ref2","threeGeom","vertexColors","setFromPoints","transparent","pointsGeometry","colors","pointsMaterial","size","sizeAttenuation","load","mean","start","stop","count","bucketPath","filled","arguments","undefined","taper","bottomRight","bottomLeft","lineFunc","quantileBins","numericBins","unitsPerQuantile","maxQuantiles","bin","round","sum","Infinity","usePrevious","isEqualFunc","prev","SCENARIO_KEY_STRING","DELIV_KEY_STRING","DELIV_KEY_STRING_UNORD","async","objs","fetch","json","unord","v","min","Array","from","sort","a","b","mapBy","console","log","fn","newObjs","groupBy","WATERDROP_ICON","draw","context","moveTo","lineTo","arc","SQRT2","closePath","CIRC_RAD","DROP_RAD","CIRC_HEIGHT","DROP_HEIGHT","HAT_START","yToHalfWidth","trigX","angle","acos","sin","yToSpriteY","spriteYToY","sy","abs","rad","Y_DELTA","rightCoords","leftCoords","dx1","dy1","dx2","dy2","ceil","v1","v2","v3","v4","reverse","coords","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","generateWaterdrop","delta","outer","cos","generateRandoPoints","shape","bounds","Matter","create","minX","maxX","minY","maxY","genX","genY","points","contains","WATERDROP_CAGE_COORDS","inner","RANDO_CACHE","lastNodesLen","DET_CACHE","lastDetNodesLen","radsToDropWidth","AREA","floor","reuse","WIDTH_AREA","randoPoints","Engine","Bodies","Composite","engine","nodePos","node_bodies","_ref3","nx","ny","circle","restitution","parts","quad","position","centre","isStatic","cage","setParts","setCentre","scale","world","FPS","SECS","update","retVal","_ref4","useStickyScale","defaultVal","val","setVal","useMemo","useCallback","obj_name","scen_name","maxDelivs","delivs","criteriaSort","criteria","objective","toRadians","constructor","_ref5","set","zoom","scaleExtent","getScaleFromZ","d3ZoomHandler","curTransform","view","translate","z","getZFromScale","camera_z_position","half_fov_radians","fov_height","tan","indices","c","face","faces","state","_setState","stateRef","setState"],"sourceRoot":""}